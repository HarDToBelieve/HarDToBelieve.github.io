<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/bytestring.h' l='389' type='void CBB_zero(CBB * cbb)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/bytestring.h' l='385'>// CBB_zero sets an uninitialised |cbb| to the zero state. It must be
// initialised with |CBB_init| or |CBB_init_fixed| before use, but it is safe to
// call |CBB_cleanup| without a successful |CBB_init|. This may be used for more
// uniform cleanup of a |CBB|.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/bytestring/cbb.c' l='26' ll='28' type='void CBB_zero(CBB * cbb)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/bytestring/cbb.c' l='51' u='c' c='CBB_init'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/bytestring/cbb.c' l='67' u='c' c='CBB_init_fixed'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/ecdsa_extra/ecdsa_asn1.c' l='84' u='c' c='ECDSA_sign'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/ecdsa_extra/ecdsa_asn1.c' l='196' u='c' c='ECDSA_SIG_to_bytes'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/rsa_extra/rsa_asn1.c' l='141' u='c' c='RSA_public_key_to_bytes'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/rsa_extra/rsa_asn1.c' l='237' u='c' c='RSA_private_key_to_bytes'/>
