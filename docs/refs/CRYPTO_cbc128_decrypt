<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/modes/internal.h' l='335' type='void CRYPTO_cbc128_decrypt(const uint8_t * in, uint8_t * out, size_t len, const AES_KEY * key, uint8_t * ivec, block128_f block)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/modes/internal.h' l='331'>// CRYPTO_cbc128_decrypt decrypts |len| bytes from |in| to |out| using the
// given IV and block cipher in CBC mode. If |len| is not a multiple of 128
// bits then only that many bytes will be written, but a multiple of 128 bits
// is always read from |in|. The IV will be updated on return.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/aes/mode_wrappers.c' l='105' u='c' c='AES_cbc_encrypt'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/cipher/e_aes.c' l='246' u='c' c='aes_cbc_cipher'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/modes/cbc.c' l='102' ll='178' type='void CRYPTO_cbc128_decrypt(const uint8_t * in, uint8_t * out, size_t len, const AES_KEY * key, uint8_t * ivec, block128_f block)'/>
