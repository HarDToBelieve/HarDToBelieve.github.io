<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/modes/internal.h' l='358' type='void CRYPTO_cfb128_encrypt(const uint8_t * in, uint8_t * out, size_t len, const AES_KEY * key, uint8_t * ivec, unsigned int * num, int enc, block128_f block)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/modes/internal.h' l='352'>// CFB.

// CRYPTO_cfb128_encrypt encrypts (or decrypts, if |enc| is zero) |len| bytes
// from |in| to |out| using |block| in CFB mode. There&apos;s no requirement that
// |len| be a multiple of any value and any partial blocks are stored in |ivec|
// and |*num|, the latter must be zero before the initial call.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/aes/mode_wrappers.c' l='120' u='c' c='AES_cfb128_encrypt'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/modes/cfb.c' l='60' ll='127' type='void CRYPTO_cfb128_encrypt(const uint8_t * in, uint8_t * out, size_t len, const AES_KEY * key, uint8_t * ivec, unsigned int * num, int enc, block128_f block)'/>
