<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/modes/internal.h' l='101' type='void CRYPTO_ctr128_encrypt_ctr32(const uint8_t * in, uint8_t * out, size_t len, const AES_KEY * key, uint8_t * ivec, uint8_t * ecount_buf, unsigned int * num, ctr128_f ctr)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/cipher_extra/e_aesctrhmac.c' l='166' u='c' c='aead_aes_ctr_hmac_sha256_crypt'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/modes/internal.h' l='97'>// CRYPTO_ctr128_encrypt_ctr32 acts like |CRYPTO_ctr128_encrypt| but takes
// |ctr|, a function that performs CTR mode but only deals with the lower 32
// bits of the counter. This is useful when |ctr| can be an optimised
// function.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/aes/mode_wrappers.c' l='61' u='c' c='AES_ctr128_encrypt'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/aes/mode_wrappers.c' l='74' u='c' c='AES_ctr128_encrypt'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/cipher/e_aes.c' l='274' u='c' c='aes_ctr_cipher'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/modes/ctr.c' l='138' ll='201' type='void CRYPTO_ctr128_encrypt_ctr32(const uint8_t * in, uint8_t * out, size_t len, const AES_KEY * key, uint8_t * ivec, uint8_t * ecount_buf, unsigned int * num, ctr128_f func)'/>
