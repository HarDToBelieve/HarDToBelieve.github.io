<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/ecdh.h' l='88' type='int ECDH_compute_key(void * out, size_t outlen, const EC_POINT * pub_key, const EC_KEY * priv_key, void *(*)(const void *, size_t, void *, size_t *) kdf)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/ecdh_extra/ecdh_extra.c' l='80' ll='124' type='int ECDH_compute_key(void * out, size_t out_len, const EC_POINT * pub_key, const EC_KEY * priv_key, void *(*)(const void *, size_t, void *, size_t *) kdf)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/ecdh.h' l='79'>// Elliptic curve Diffie-Hellman.


// ECDH_compute_key calculates the shared key between |pub_key| and |priv_key|.
// If |kdf| is not NULL, then it is called with the bytes of the shared key and
// the parameter |out|. When |kdf| returns, the value of |*outlen| becomes the
// return value. Otherwise, as many bytes of the shared key as will fit are
// copied directly to, at most, |outlen| bytes at |out|. It returns the number
// of bytes written to |out|, or -1 on error.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/evp/p_ec.c' l='170' u='c' c='pkey_ec_derive'/>
