<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/ecdsa.h' l='91' type='int ECDSA_verify(int type, const uint8_t * digest, size_t digest_len, const uint8_t * sig, size_t sig_len, const EC_KEY * key)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/ecdsa_extra/ecdsa_asn1.c' l='102' ll='129' type='int ECDSA_verify(int type, const uint8_t * digest, size_t digest_len, const uint8_t * sig, size_t sig_len, const EC_KEY * eckey)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/ecdsa.h' l='83'>// ECDSA_verify verifies that |sig_len| bytes from |sig| constitute a valid
// signature by |key| of |digest|. (The |type| argument should be zero.) It
// returns one on success or zero if the signature is invalid or an error
// occurred.
//
// WARNING: |digest| must be the output of some hash function on the data to be
// verified. Passing unhashed inputs will not result in a secure signature
// scheme.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/evp/p_ec.c' l='140' u='c' c='pkey_ec_verify'/>
