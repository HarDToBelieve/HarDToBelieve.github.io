<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/aead.h' l='296' type='int EVP_AEAD_CTX_seal(const EVP_AEAD_CTX * ctx, uint8_t * out, size_t * out_len, size_t max_out_len, const uint8_t * nonce, size_t nonce_len, const uint8_t * in, size_t in_len, const uint8_t * ad, size_t ad_len)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/aead.h' l='276'>// EVP_AEAD_CTX_seal encrypts and authenticates |in_len| bytes from |in| and
// authenticates |ad_len| bytes from |ad| and writes the result to |out|. It
// returns one on success and zero otherwise.
//
// This function may be called concurrently with itself or any other seal/open
// function on the same |EVP_AEAD_CTX|.
//
// At most |max_out_len| bytes are written to |out| and, in order to ensure
// success, |max_out_len| should be |in_len| plus the result of
// |EVP_AEAD_max_overhead|. On successful return, |*out_len| is set to the
// actual number of bytes written.
//
// The length of |nonce|, |nonce_len|, must be equal to the result of
// |EVP_AEAD_nonce_length| for this AEAD.
//
// |EVP_AEAD_CTX_seal| never results in a partial output. If |max_out_len| is
// insufficient, zero will be returned. If any error occurs, |out| will be
// filled with zero bytes and |*out_len| set to zero.
//
// If |in| and |out| alias then |out| must be == |in|.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/cipher/aead.c' l='115' ll='148' type='int EVP_AEAD_CTX_seal(const EVP_AEAD_CTX * ctx, uint8_t * out, size_t * out_len, size_t max_out_len, const uint8_t * nonce, size_t nonce_len, const uint8_t * in, size_t in_len, const uint8_t * ad, size_t ad_len)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/hpke/hpke.c' l='505' u='c' c='EVP_HPKE_CTX_seal'/>
