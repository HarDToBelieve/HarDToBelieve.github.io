<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/hpke.h' l='97' type='int EVP_HPKE_KEY_init(EVP_HPKE_KEY * key, const EVP_HPKE_KEM * kem, const uint8_t * priv_key, size_t priv_key_len)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/hpke/hpke.c' l='229' ll='238' type='int EVP_HPKE_KEY_init(EVP_HPKE_KEY * key, const EVP_HPKE_KEM * kem, const uint8_t * priv_key, size_t priv_key_len)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/hpke.h' l='92'>// EVP_HPKE_KEY_init decodes |priv_key| as a private key for |kem| and
// initializes |key| with the result. It returns one on success and zero if
// |priv_key| was invalid. On success, the caller must call
// |EVP_HPKE_KEY_cleanup| to release the key. On failure, calling
// |EVP_HPKE_KEY_cleanup| is safe, but not necessary.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/encrypted_client_hello.cc' l='413' u='c' c='_ZN4bssl15ECHServerConfig4InitENS_4SpanIKhEES3_b'/>
