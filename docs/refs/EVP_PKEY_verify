<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/evp.h' l='583' type='int EVP_PKEY_verify(EVP_PKEY_CTX * ctx, const uint8_t * sig, size_t sig_len, const uint8_t * digest, size_t digest_len)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/evp/digestsign.c' l='190' u='c' c='EVP_DigestVerifyFinal'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/evp.h' l='573'>// EVP_PKEY_verify verifies that |sig_len| bytes from |sig| are a valid
// signature for |digest|. This function will fail for signature
// algorithms like Ed25519 that do not support signing pre-hashed inputs.
//
// WARNING: |digest| must be the output of some hash function on the data to be
// verified. Passing unhashed inputs will not result in a secure signature
// scheme. Use |EVP_DigestVerifyInit| to verify a signature given the unhashed
// input.
//
// It returns one on success or zero on error.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/evp/evp_ctx.c' l='248' ll='259' type='int EVP_PKEY_verify(EVP_PKEY_CTX * ctx, const uint8_t * sig, size_t sig_len, const uint8_t * digest, size_t digest_len)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/evp/sign.c' l='145' u='c' c='EVP_VerifyFinal'/>
