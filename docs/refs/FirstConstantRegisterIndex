<def f='webkit/Source/JavaScriptCore/bytecode/BytecodeConventions.h' l='32' type='const int'/>
<use f='webkit/Source/JavaScriptCore/bytecode/BytecodeConventions.h' l='36' u='r'/>
<use f='webkit/Source/JavaScriptCore/bytecode/VirtualRegister.h' l='53' u='r'/>
<doc f='webkit/Source/JavaScriptCore/bytecode/BytecodeConventions.h' l='28'>// Register numbers used in bytecode operations have different meaning according to their ranges:
//      0x80000000-0xFFFFFFFF  Negative indices from the CallFrame pointer are entries in the call frame.
//      0x00000000-0x3FFFFFFF  Forwards indices from the CallFrame pointer are local vars and temporaries with the function&apos;s callframe.
//      0x40000000-0x7FFFFFFF  Positive indices from 0x40000000 specify entries in the constant pool on the CodeBlock.</doc>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTableOrScopeDepth.h' l='40' u='r' c='_ZN3JSC23SymbolTableOrScopeDepth11symbolTableENS_15VirtualRegisterE'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTableOrScopeDepth.h' l='55' u='r' c='_ZNK3JSC23SymbolTableOrScopeDepth11symbolTableEv'/>
<use f='webkit/Source/JavaScriptCore/bytecode/Fits.h' l='147' u='r' c='_ZN3JSC4FitsINS_15VirtualRegisterEXT_ENSt3__19enable_ifIXneT_LNS_10OpcodeSizeE4EENS2_17integral_constantIbLb1EEEE4typeEE7convertENS_10TypeBySizeIXT_EE10signedTypeE'/>
<use f='webkit/WebKitBuild/Debug/LLIntOffsets/arm64/LLIntDesiredOffsets.h' l='16' u='r' c='_ZN3JSC21LLIntOffsetsExtractor5dummyEv'/>
<def f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/BytecodeConventions.h' l='32' type='const int'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/BytecodeConventions.h' l='36' u='r'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/VirtualRegister.h' l='53' u='r'/>
<doc f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/BytecodeConventions.h' l='28'>// Register numbers used in bytecode operations have different meaning according to their ranges:
//      0x80000000-0xFFFFFFFF  Negative indices from the CallFrame pointer are entries in the call frame.
//      0x00000000-0x3FFFFFFF  Forwards indices from the CallFrame pointer are local vars and temporaries with the function&apos;s callframe.
//      0x40000000-0x7FFFFFFF  Positive indices from 0x40000000 specify entries in the constant pool on the CodeBlock.</doc>
