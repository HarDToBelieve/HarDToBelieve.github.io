<dec f='webkit/Source/JavaScriptCore/b3/air/AirArg.h' l='159' type='5'/>
<use f='webkit/Source/JavaScriptCore/b3/air/AirArg.h' l='206' c='_ZN3JSC2B33Air3Arg8isAnyUseENS2_4RoleE'/>
<use f='webkit/Source/JavaScriptCore/b3/air/AirArg.h' l='226' c='_ZN3JSC2B33Air3Arg9isColdUseENS2_4RoleE'/>
<use f='webkit/Source/JavaScriptCore/b3/air/AirArg.h' l='249' c='_ZN3JSC2B33Air3Arg6cooledENS2_4RoleE'/>
<use f='webkit/Source/JavaScriptCore/b3/air/AirArg.h' l='280' c='_ZN3JSC2B33Air3Arg8activeAtENS2_4RoleENS2_5PhaseE'/>
<use f='webkit/Source/JavaScriptCore/b3/air/AirArg.h' l='315' c='_ZN3JSC2B33Air3Arg6timingENS2_4RoleE'/>
<use f='webkit/Source/JavaScriptCore/b3/air/AirArg.h' l='353' c='_ZN3JSC2B33Air3Arg10isEarlyUseENS2_4RoleE'/>
<use f='webkit/Source/JavaScriptCore/b3/air/AirArg.h' l='378' c='_ZN3JSC2B33Air3Arg9isLateUseENS2_4RoleE'/>
<use f='webkit/Source/JavaScriptCore/b3/air/AirArg.h' l='399' c='_ZN3JSC2B33Air3Arg8isAnyDefENS2_4RoleE'/>
<use f='webkit/Source/JavaScriptCore/b3/air/AirArg.h' l='419' c='_ZN3JSC2B33Air3Arg10isEarlyDefENS2_4RoleE'/>
<use f='webkit/Source/JavaScriptCore/b3/air/AirArg.h' l='446' c='_ZN3JSC2B33Air3Arg9isLateDefENS2_4RoleE'/>
<use f='webkit/Source/JavaScriptCore/b3/air/AirArg.h' l='467' c='_ZN3JSC2B33Air3Arg6isZDefENS2_4RoleE'/>
<doc f='webkit/Source/JavaScriptCore/b3/air/AirArg.h' l='144'>// This is a special variant of Def that implies that the upper bits of the target register are
        // zero-filled. Specifically, if the Width of a ZDef is less than the largest possible width of
        // the argument (for example, we&apos;re on a 64-bit machine and we have a Width32 ZDef of a GPR) then
        // this has different implications for the upper bits (i.e. the top 32 bits in our example)
        // depending on the kind of the argument:
        //
        // For register: the upper bits are zero-filled.
        // For anonymous stack slot: the upper bits are zero-filled.
        // For address: the upper bits are not touched (i.e. we do a 32-bit store in our example).
        // For tmp: either the upper bits are not touched or they are zero-filled, and we won&apos;t know
        // which until we lower the tmp to either a StackSlot or a Reg.
        //
        // The behavior of ZDef is consistent with what happens when you perform 32-bit operations on a
        // 64-bit GPR. It&apos;s not consistent with what happens with 8-bit or 16-bit Defs on x86 GPRs, or
        // what happens with float Defs in ARM NEON or X86 SSE. Hence why we have both Def and ZDef.</doc>
