<dec f='webkit/Source/JavaScriptCore/b3/B3Opcode.h' l='327' type='78'/>
<use f='webkit/Source/JavaScriptCore/b3/B3Opcode.h' l='374' c='_ZN3JSC2B311isCheckMathENS0_6OpcodeE'/>
<use f='webkit/Source/JavaScriptCore/b3/B3ValueKey.h' l='124' c='_ZNK3JSC2B38ValueKey14canMaterializeEv'/>
<use f='webkit/Source/JavaScriptCore/b3/B3Value.h' l='474' c='_ZN3JSC2B35Value18adjacencyListSpaceENS0_4KindE'/>
<doc f='webkit/Source/JavaScriptCore/b3/B3Opcode.h' l='305'>// Checked math. Use the CheckValue class. Like a Patchpoint, this takes a code generation
    // callback. That callback gets to emit some code after the epilogue, and gets to link the jump
    // from the check, and the choice of registers. You also get to supply a stackmap. Note that you
    // are not allowed to jump back into the mainline code from your slow path, since the compiler
    // will assume that the execution of these instructions proves that overflow didn&apos;t happen. For
    // example, if you have two CheckAdd&apos;s:
    //
    // a = CheckAdd(x, y)
    // b = CheckAdd(x, y)
    //
    // Then it&apos;s valid to change this to:
    //
    // a = CheckAdd(x, y)
    // b = Identity(a)
    //
    // This is valid regardless of the callbacks used by the two CheckAdds. They may have different
    // callbacks. Yet, this transformation is valid even if they are different because we know that
    // after the first CheckAdd executes, the second CheckAdd could not have possibly taken slow
    // path. Therefore, the second CheckAdd&apos;s callback is irrelevant.
    //
    // Note that the first two children of these operations have ValueRep&apos;s as input constraints but do
    // not have output constraints.</doc>
<use f='webkit/Source/JavaScriptCore/b3/B3StackmapValue.h' l='53' c='_ZN3JSC2B313StackmapValue7acceptsENS0_4KindE'/>
<use f='webkit/Source/JavaScriptCore/b3/B3CheckValue.h' l='39' c='_ZN3JSC2B310CheckValue7acceptsENS0_4KindE'/>
<use f='webkit/Source/JavaScriptCore/b3/B3ValueInlines.h' l='163' c='_ZNK3JSC2B35Value19adjacencyListOffsetEv'/>
<use f='webkit/Source/JavaScriptCore/b3/B3ValueInlines.h' l='163' c='_ZNK3JSC2B35Value9cloneImplEv'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='571' u='r' c='_Z15testCheckAddImmv'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='609' u='r' c='_Z22testCheckAddImmCommutev'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='647' u='r' c='_Z27testCheckAddImmSomeRegisterv'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='686' u='r' c='_Z12testCheckAddv'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='721' u='r' c='_Z14testCheckAdd64v'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='754' u='r' c='_Z16testCheckAddFoldii'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='776' u='r' c='_Z20testCheckAddFoldFailii'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='807' u='r' c='_Z30testCheckAddArgumentAliasing64v'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='811' u='r' c='_Z30testCheckAddArgumentAliasing64v'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='820' u='r' c='_Z30testCheckAddArgumentAliasing64v'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='850' u='r' c='_Z30testCheckAddArgumentAliasing32v'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='854' u='r' c='_Z30testCheckAddArgumentAliasing32v'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='863' u='r' c='_Z30testCheckAddArgumentAliasing32v'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='878' u='r' c='_Z26testCheckAddSelfOverflow64v'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='911' u='r' c='_Z26testCheckAddSelfOverflow32v'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='940' u='r' c='_Z32testCheckAddRemoveCheckWithSExt8a'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='958' u='r' c='_Z33testCheckAddRemoveCheckWithSExt16s'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='976' u='r' c='_Z33testCheckAddRemoveCheckWithSExt32i'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_5.cpp' l='994' u='r' c='_Z33testCheckAddRemoveCheckWithZExt32i'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_6.cpp' l='1871' u='r' c='_Z46testReduceStrengthCheckBottomUseInAnotherBlockv'/>
