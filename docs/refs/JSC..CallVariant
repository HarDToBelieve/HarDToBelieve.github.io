<def f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='63' ll='193'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='79' c='_ZNK3JSC11CallVariant18despecifiedClosureEv'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='82' c='_ZNK3JSC11CallVariant18despecifiedClosureEv'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='143' c='_ZN3JSC11CallVariant5mergeERKS0_'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='154' c='_ZNK3JSC11CallVarianteqERKS0_'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='159' c='_ZNK3JSC11CallVariantneERKS0_'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='164' c='_ZNK3JSC11CallVariantltERKS0_'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='169' c='_ZNK3JSC11CallVariantgtERKS0_'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='174' c='_ZNK3JSC11CallVariantleERKS0_'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='179' c='_ZNK3JSC11CallVariantgeERKS0_'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='196' c='_ZN3JSC15CallVariantHash4hashERKNS_11CallVariantE'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='197' c='_ZN3JSC15CallVariantHash5equalERKNS_11CallVariantES3_'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='197' c='_ZN3JSC15CallVariantHash5equalERKNS_11CallVariantES3_'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='201'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='205' c='_ZN3JSC22variantListWithVariantERKN3WTF6VectorINS_11CallVariantELm1ENS0_15CrashOnOverflowELm16ENS0_10FastMallocEEES2_'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='215'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='218'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallEdge.h' l='35' c='_ZN3JSC8CallEdgeC1ENS_11CallVariantEj'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallEdge.h' l='39' c='_ZNK3JSC8CallEdge6calleeEv'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallEdge.h' l='50'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallEdge.h' l='54' c='_ZN3JSC8CallEdgeC1ENS_11CallVariantEj'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallEdge.h' l='61' c='_ZN3JSC8CallEdgeC1Ev'/>
<use f='webkit/Source/JavaScriptCore/jit/PolymorphicCallStubRoutine.h' l='67' c='_ZN3JSC19PolymorphicCallCaseC1ENS_11CallVariantEPNS_9CodeBlockE'/>
<use f='webkit/Source/JavaScriptCore/jit/PolymorphicCallStubRoutine.h' l='73' c='_ZNK3JSC19PolymorphicCallCase7variantEv'/>
<use f='webkit/Source/JavaScriptCore/jit/PolymorphicCallStubRoutine.h' l='79'/>
<size>8</size>
<doc f='webkit/Source/JavaScriptCore/bytecode/CallVariant.h' l='36'>// The CallVariant class is meant to encapsulate a callee in a way that is useful for call linking
// and inlining. Because JavaScript has closures, and because JSC implements the notion of internal
// non-function objects that nevertheless provide call traps, the call machinery wants to see a
// callee in one of the following four forms:
//
// JSFunction callee: This means that we expect the callsite to always call a particular function
//     instance, that is associated with a particular lexical environment. This pinpoints not
//     just the code that will be called (i.e. the executable) but also the scope within which
//     the code runs.
//
// Executable callee: This corresponds to a call to a closure. In this case, we know that the
//     callsite will call a JSFunction, but we do not know which particular JSFunction. We do know
//     what code will be called - i.e. we know the executable.
//
// InternalFunction callee: JSC supports a special kind of native functions that support bizarre
//     semantics. These are always singletons. If we know that the callee is an InternalFunction
//     then we know both the code that will be called and the scope; in fact the &quot;scope&quot; is really
//     just the InternalFunction itself.
//
// Something else: It&apos;s possible call all manner of rubbish in JavaScript. This implicitly supports
//     bizarre object callees, but it can&apos;t really tell you anything interesting about them other
//     than the fact that they don&apos;t fall into any of the above categories.
//
// This class serves as a kind of union over these four things. It does so by just holding a
// JSCell*. We determine which of the modes its in by doing type checks on the cell. Note that we
// cannot use WriteBarrier&lt;&gt; here because this gets used inside the compiler.</doc>
<fun r='_ZN3JSC11CallVariantC1EPNS_6JSCellE'/>
<fun r='_ZN3JSC11CallVariantC1EN3WTF25HashTableDeletedValueTypeE'/>
<fun r='_ZNK3JSC11CallVariantcvbEv'/>
<fun r='_ZNK3JSC11CallVariant18despecifiedClosureEv'/>
<fun r='_ZNK3JSC11CallVariant13rawCalleeCellEv'/>
<fun r='_ZNK3JSC11CallVariant16internalFunctionEv'/>
<fun r='_ZNK3JSC11CallVariant8functionEv'/>
<fun r='_ZNK3JSC11CallVariant13isClosureCallEv'/>
<fun r='_ZNK3JSC11CallVariant10executableEv'/>
<fun r='_ZNK3JSC11CallVariant19nonExecutableCalleeEv'/>
<fun r='_ZNK3JSC11CallVariant12intrinsicForENS_22CodeSpecializationKindE'/>
<fun r='_ZNK3JSC11CallVariant18functionExecutableEv'/>
<fun r='_ZNK3JSC11CallVariant16nativeExecutableEv'/>
<fun r='_ZNK3JSC11CallVariant12signatureForENS_22CodeSpecializationKindE'/>
<fun r='_ZN3JSC11CallVariant8finalizeERNS_2VME'/>
<fun r='_ZN3JSC11CallVariant5mergeERKS0_'/>
<fun r='_ZN3JSC11CallVariant6filterERNS_2VMENS_7JSValueE'/>
<fun r='_ZNK3JSC11CallVariant4dumpERN3WTF11PrintStreamE'/>
<fun r='_ZNK3JSC11CallVariant23isHashTableDeletedValueEv'/>
<fun r='_ZNK3JSC11CallVarianteqERKS0_'/>
<fun r='_ZNK3JSC11CallVariantneERKS0_'/>
<fun r='_ZNK3JSC11CallVariantltERKS0_'/>
<fun r='_ZNK3JSC11CallVariantgtERKS0_'/>
<fun r='_ZNK3JSC11CallVariantleERKS0_'/>
<fun r='_ZNK3JSC11CallVariantgeERKS0_'/>
<fun r='_ZNK3JSC11CallVariant4hashEv'/>
<fun r='_ZN3JSC11CallVariant12deletedTokenEv'/>
<mbr r='JSC::CallVariant::m_callee' o='0' t='JSC::JSCell *'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallLinkStatus.h' l='60' c='_ZN3JSC14CallLinkStatusC1ENS_11CallVariantE'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallLinkStatus.h' l='87' c='_ZN3JSC14CallLinkStatus23setProvenConstantCalleeENS_11CallVariantE'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallLinkStatus.h' l='99' c='_ZNK3JSC14CallLinkStatus2atEj'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CallLinkStatus.h' l='100' c='_ZNK3JSC14CallLinkStatusixEj'/>
<use f='webkit/Source/JavaScriptCore/jit/Repatch.h' l='70' c='_ZN3JSC19linkPolymorphicCallEPNS_14JSGlobalObjectEPNS_9CallFrameERNS_12CallLinkInfoENS_11CallVariantE'/>
<size>8</size>
<def f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='63' ll='193'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='79' c='_ZNK3JSC11CallVariant18despecifiedClosureEv'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='82' c='_ZNK3JSC11CallVariant18despecifiedClosureEv'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='143' c='_ZN3JSC11CallVariant5mergeERKS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='154' c='_ZNK3JSC11CallVarianteqERKS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='159' c='_ZNK3JSC11CallVariantneERKS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='164' c='_ZNK3JSC11CallVariantltERKS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='169' c='_ZNK3JSC11CallVariantgtERKS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='174' c='_ZNK3JSC11CallVariantleERKS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='179' c='_ZNK3JSC11CallVariantgeERKS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='196' c='_ZN3JSC15CallVariantHash4hashERKNS_11CallVariantE'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='197' c='_ZN3JSC15CallVariantHash5equalERKNS_11CallVariantES3_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='197' c='_ZN3JSC15CallVariantHash5equalERKNS_11CallVariantES3_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='201'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='205' c='_ZN3JSC22variantListWithVariantERKN3WTF6VectorINS_11CallVariantELm1ENS0_15CrashOnOverflowELm16ENS0_10FastMallocEEES2_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='215'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='218'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallEdge.h' l='35' c='_ZN3JSC8CallEdgeC1ENS_11CallVariantEj'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallEdge.h' l='39' c='_ZNK3JSC8CallEdge6calleeEv'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallEdge.h' l='50'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallEdge.h' l='54' c='_ZN3JSC8CallEdgeC1ENS_11CallVariantEj'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallEdge.h' l='61' c='_ZN3JSC8CallEdgeC1Ev'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/PolymorphicCallStubRoutine.h' l='67' c='_ZN3JSC19PolymorphicCallCaseC1ENS_11CallVariantEPNS_9CodeBlockE'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/PolymorphicCallStubRoutine.h' l='73' c='_ZNK3JSC19PolymorphicCallCase7variantEv'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/PolymorphicCallStubRoutine.h' l='79'/>
<size>8</size>
<doc f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CallVariant.h' l='36'>// The CallVariant class is meant to encapsulate a callee in a way that is useful for call linking
// and inlining. Because JavaScript has closures, and because JSC implements the notion of internal
// non-function objects that nevertheless provide call traps, the call machinery wants to see a
// callee in one of the following four forms:
//
// JSFunction callee: This means that we expect the callsite to always call a particular function
//     instance, that is associated with a particular lexical environment. This pinpoints not
//     just the code that will be called (i.e. the executable) but also the scope within which
//     the code runs.
//
// Executable callee: This corresponds to a call to a closure. In this case, we know that the
//     callsite will call a JSFunction, but we do not know which particular JSFunction. We do know
//     what code will be called - i.e. we know the executable.
//
// InternalFunction callee: JSC supports a special kind of native functions that support bizarre
//     semantics. These are always singletons. If we know that the callee is an InternalFunction
//     then we know both the code that will be called and the scope; in fact the &quot;scope&quot; is really
//     just the InternalFunction itself.
//
// Something else: It&apos;s possible call all manner of rubbish in JavaScript. This implicitly supports
//     bizarre object callees, but it can&apos;t really tell you anything interesting about them other
//     than the fact that they don&apos;t fall into any of the above categories.
//
// This class serves as a kind of union over these four things. It does so by just holding a
// JSCell*. We determine which of the modes its in by doing type checks on the cell. Note that we
// cannot use WriteBarrier&lt;&gt; here because this gets used inside the compiler.</doc>
<fun r='_ZN3JSC11CallVariantC1EPNS_6JSCellE'/>
<fun r='_ZN3JSC11CallVariantC1EN3WTF25HashTableDeletedValueTypeE'/>
<fun r='_ZNK3JSC11CallVariantcvbEv'/>
<fun r='_ZNK3JSC11CallVariant18despecifiedClosureEv'/>
<fun r='_ZNK3JSC11CallVariant13rawCalleeCellEv'/>
<fun r='_ZNK3JSC11CallVariant16internalFunctionEv'/>
<fun r='_ZNK3JSC11CallVariant8functionEv'/>
<fun r='_ZNK3JSC11CallVariant13isClosureCallEv'/>
<fun r='_ZNK3JSC11CallVariant10executableEv'/>
<fun r='_ZNK3JSC11CallVariant19nonExecutableCalleeEv'/>
<fun r='_ZNK3JSC11CallVariant12intrinsicForENS_22CodeSpecializationKindE'/>
<fun r='_ZNK3JSC11CallVariant18functionExecutableEv'/>
<fun r='_ZNK3JSC11CallVariant16nativeExecutableEv'/>
<fun r='_ZNK3JSC11CallVariant12signatureForENS_22CodeSpecializationKindE'/>
<fun r='_ZN3JSC11CallVariant8finalizeERNS_2VME'/>
<fun r='_ZN3JSC11CallVariant5mergeERKS0_'/>
<fun r='_ZN3JSC11CallVariant6filterERNS_2VMENS_7JSValueE'/>
<fun r='_ZNK3JSC11CallVariant4dumpERN3WTF11PrintStreamE'/>
<fun r='_ZNK3JSC11CallVariant23isHashTableDeletedValueEv'/>
<fun r='_ZNK3JSC11CallVarianteqERKS0_'/>
<fun r='_ZNK3JSC11CallVariantneERKS0_'/>
<fun r='_ZNK3JSC11CallVariantltERKS0_'/>
<fun r='_ZNK3JSC11CallVariantgtERKS0_'/>
<fun r='_ZNK3JSC11CallVariantleERKS0_'/>
<fun r='_ZNK3JSC11CallVariantgeERKS0_'/>
<fun r='_ZNK3JSC11CallVariant4hashEv'/>
<fun r='_ZN3JSC11CallVariant12deletedTokenEv'/>
<mbr r='JSC::CallVariant::m_callee' o='0' t='JSC::JSCell *'/>
