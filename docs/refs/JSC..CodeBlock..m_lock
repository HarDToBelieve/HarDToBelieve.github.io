<use f='webkit/Source/JavaScriptCore/bytecode/CodeBlock.h' l='333' u='a' c='_ZN3JSC9CodeBlock13setJITCodeMapEONS_10JITCodeMapE'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CodeBlock.h' l='338' u='a' c='_ZN3JSC9CodeBlock10jitCodeMapEv'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CodeBlock.h' l='405' u='a' c='_ZN3JSC9CodeBlock10setJITCodeEON3WTF3RefINS_7JITCodeENS1_12RawPtrTraitsIS3_EEEE'/>
<dec f='webkit/Source/JavaScriptCore/bytecode/CodeBlock.h' l='844' type='JSC::ConcurrentJSLock'/>
<offset>128</offset>
<doc f='webkit/Source/JavaScriptCore/bytecode/CodeBlock.h' l='828'>// This is intentionally public; it&apos;s the responsibility of anyone doing any
    // of the following to hold the lock:
    //
    // - Modifying any inline cache in this code block.
    //
    // - Quering any inline cache in this code block, from a thread other than
    //   the main thread.
    //
    // Additionally, it&apos;s only legal to modify the inline cache on the main
    // thread. This means that the main thread can query the inline cache without
    // locking. This is crucial since executing the inline cache is effectively
    // &quot;querying&quot; it.
    //
    // Another exception to the rules is that the GC can do whatever it wants
    // without holding any locks, because the GC is guaranteed to wait until any
    // concurrent compilation threads finish what they&apos;re doing.</doc>
<use f='webkit/Source/JavaScriptCore/dfg/DFGDesiredWatchpoints.h' l='111' u='a' c='_ZN3JSC3DFG17SetPointerAdaptor3addEPNS_9CodeBlockET_RNS0_19WatchpointCollectorE'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CodeBlock.h' l='333' u='a' c='_ZN3JSC9CodeBlock13setJITCodeMapEONS_10JITCodeMapE'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CodeBlock.h' l='338' u='a' c='_ZN3JSC9CodeBlock10jitCodeMapEv'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CodeBlock.h' l='405' u='a' c='_ZN3JSC9CodeBlock10setJITCodeEON3WTF3RefINS_7JITCodeENS1_12RawPtrTraitsIS3_EEEE'/>
<dec f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CodeBlock.h' l='844' type='JSC::ConcurrentJSLock'/>
<offset>128</offset>
<doc f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CodeBlock.h' l='828'>// This is intentionally public; it&apos;s the responsibility of anyone doing any
    // of the following to hold the lock:
    //
    // - Modifying any inline cache in this code block.
    //
    // - Quering any inline cache in this code block, from a thread other than
    //   the main thread.
    //
    // Additionally, it&apos;s only legal to modify the inline cache on the main
    // thread. This means that the main thread can query the inline cache without
    // locking. This is crucial since executing the inline cache is effectively
    // &quot;querying&quot; it.
    //
    // Another exception to the rules is that the GC can do whatever it wants
    // without holding any locks, because the GC is guaranteed to wait until any
    // concurrent compilation threads finish what they&apos;re doing.</doc>
