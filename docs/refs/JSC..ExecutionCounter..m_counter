<use f='webkit/Source/JavaScriptCore/bytecode/ExecutionCounter.h' l='62' u='r' c='_ZNK3JSC16ExecutionCounter19hasCrossedThresholdEv'/>
<use f='webkit/Source/JavaScriptCore/bytecode/ExecutionCounter.h' l='65' u='r' c='_ZNK3JSC16ExecutionCounter5countEv'/>
<use f='webkit/Source/JavaScriptCore/bytecode/ExecutionCounter.h' l='71' u='w' c='_ZN3JSC16ExecutionCounter25setNewThresholdForOSRExitEjd'/>
<dec f='webkit/Source/JavaScriptCore/bytecode/ExecutionCounter.h' l='113' type='int32_t'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CodeBlock.h' l='707' u='a' c='_ZN3JSC9CodeBlock26addressOfJITExecuteCounterEv'/>
<use f='webkit/Source/JavaScriptCore/bytecode/CodeBlock.h' l='710' u='a' c='_ZN3JSC9CodeBlock25offsetOfJITExecuteCounterEv'/>
<doc f='webkit/Source/JavaScriptCore/bytecode/ExecutionCounter.h' l='107'>// NB. These are intentionally public because it will be modified from machine code.
    
    // This counter is incremented by the JIT or LLInt. It starts out negative and is
    // counted up until it becomes non-negative. At the start of a counting period,
    // the threshold we wish to reach is m_totalCount + m_counter, in the sense that
    // we will add X to m_totalCount and subtract X from m_counter.</doc>
<use f='webkit/Source/JavaScriptCore/dfg/DFGSpeculativeJIT64.cpp' l='5728' u='a' c='_ZN3JSC3DFG14SpeculativeJIT7compileEPNS0_4NodeE'/>
<use f='webkit/Source/JavaScriptCore/dfg/DFGSpeculativeJIT64.cpp' l='5752' u='a' c='_ZN3JSC3DFG14SpeculativeJIT7compileEPNS0_4NodeE'/>
<use f='webkit/Source/JavaScriptCore/dfg/DFGSpeculativeJIT64.cpp' l='5779' u='a' c='_ZN3JSC3DFG14SpeculativeJIT7compileEPNS0_4NodeE'/>
<use f='webkit/WebKitBuild/Debug/LLIntOffsets/arm64/LLIntDesiredOffsets.h' l='1432' u='a' c='_ZN3JSC21LLIntOffsetsExtractor5dummyEv'/>
<use f='webkit/WebKitBuild/Debug/LLIntOffsets/arm64/LLIntDesiredOffsets.h' l='2194' u='a' c='_ZN3JSC21LLIntOffsetsExtractor5dummyEv'/>
<use f='webkit/Source/JavaScriptCore/wasm/WasmAirIRGenerator.cpp' l='2811' u='a' c='_ZN3JSC4Wasm14AirIRGenerator20emitEntryTierUpCheckEv'/>
<use f='webkit/Source/JavaScriptCore/wasm/WasmAirIRGenerator.cpp' l='2862' u='a' c='_ZN3JSC4Wasm14AirIRGenerator19emitLoopTierUpCheckEjRKN3WTF6VectorINS0_14FunctionParserIS1_E15TypedExpressionELm16ENS2_20UnsafeVectorOverflowELm16ENS2_10FastMallocEEE'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/ExecutionCounter.h' l='62' u='r' c='_ZNK3JSC16ExecutionCounter19hasCrossedThresholdEv'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/ExecutionCounter.h' l='65' u='r' c='_ZNK3JSC16ExecutionCounter5countEv'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/ExecutionCounter.h' l='71' u='w' c='_ZN3JSC16ExecutionCounter25setNewThresholdForOSRExitEjd'/>
<dec f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/ExecutionCounter.h' l='113' type='int32_t'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CodeBlock.h' l='707' u='a' c='_ZN3JSC9CodeBlock26addressOfJITExecuteCounterEv'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/CodeBlock.h' l='710' u='a' c='_ZN3JSC9CodeBlock25offsetOfJITExecuteCounterEv'/>
<doc f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/ExecutionCounter.h' l='107'>// NB. These are intentionally public because it will be modified from machine code.
    
    // This counter is incremented by the JIT or LLInt. It starts out negative and is
    // counted up until it becomes non-negative. At the start of a counting period,
    // the threshold we wish to reach is m_totalCount + m_counter, in the sense that
    // we will add X to m_totalCount and subtract X from m_counter.</doc>
