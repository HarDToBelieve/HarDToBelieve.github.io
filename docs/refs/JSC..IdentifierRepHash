<inh f='webkit/WebKitBuild/Debug/usr/local/include/wtf/HashFunctions.h' l='149' c='WTF::PtrHash'/>
<def f='webkit/Source/JavaScriptCore/runtime/Identifier.h' l='297' ll='301'/>
<use f='webkit/Source/JavaScriptCore/runtime/Identifier.h' l='308'/>
<use f='webkit/Source/JavaScriptCore/runtime/Identifier.h' l='309'/>
<use f='webkit/Source/JavaScriptCore/runtime/Identifier.h' l='310'/>
<use f='webkit/Source/JavaScriptCore/parser/VariableEnvironment.h' l='143'/>
<use f='webkit/Source/JavaScriptCore/parser/VariableEnvironment.h' l='148'/>
<use f='webkit/Source/JavaScriptCore/parser/VariableEnvironment.h' l='336'/>
<size>1</size>
<doc f='webkit/Source/JavaScriptCore/runtime/Identifier.h' l='293'>// FIXME: It may be better for this to just be a typedef for PtrHash, since PtrHash may be cheaper to
// compute than loading the StringImpl&apos;s hash from memory. That change would also reduce the likelihood of
// crashes in code that somehow dangled a StringImpl.
// https://bugs.webkit.org/show_bug.cgi?id=150137</doc>
<fun r='_ZN3JSC17IdentifierRepHash4hashERKN3WTF6RefPtrINS1_17UniquedStringImplENS1_12RawPtrTraitsIS3_EENS1_21DefaultRefDerefTraitsIS3_EEEE'/>
<fun r='_ZN3JSC17IdentifierRepHash4hashEPN3WTF17UniquedStringImplE'/>
<smbr r='JSC::IdentifierRepHash::hasHashInValue' t='const bool'/>
<use f='webkit/Source/JavaScriptCore/runtime/JSScope.h' l='38'/>
<use f='webkit/Source/JavaScriptCore/runtime/TypeSet.h' l='76'/>
<use f='webkit/Source/JavaScriptCore/runtime/TypeSet.h' l='77'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='449'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='450'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='451'/>
<use f='webkit/Source/JavaScriptCore/runtime/JSGlobalObject.h' l='554'/>
<size>1</size>
<use f='webkit/Source/JavaScriptCore/runtime/AbstractModuleRecord.h' l='99'/>
<use f='webkit/Source/JavaScriptCore/runtime/AbstractModuleRecord.h' l='100'/>
<use f='webkit/Source/JavaScriptCore/runtime/AbstractModuleRecord.h' l='101'/>
<use f='webkit/Source/JavaScriptCore/runtime/AbstractModuleRecord.h' l='209'/>
<size>1</size>
<use f='webkit/Source/JavaScriptCore/bytecode/BytecodeIntrinsicRegistry.h' l='216'/>
<size>1</size>
<inh f='webkit/WebKitBuild/Debug/usr/local/include/wtf/HashFunctions.h' l='149' c='WTF::PtrHash'/>
<def f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/Identifier.h' l='297' ll='301'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/Identifier.h' l='308'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/Identifier.h' l='309'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/Identifier.h' l='310'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/VariableEnvironment.h' l='143'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/VariableEnvironment.h' l='148'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/VariableEnvironment.h' l='336'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/JSScope.h' l='38'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/TypeSet.h' l='76'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/TypeSet.h' l='77'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='449'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='450'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='451'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/JSGlobalObject.h' l='554'/>
<size>1</size>
<doc f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/Identifier.h' l='293'>// FIXME: It may be better for this to just be a typedef for PtrHash, since PtrHash may be cheaper to
// compute than loading the StringImpl&apos;s hash from memory. That change would also reduce the likelihood of
// crashes in code that somehow dangled a StringImpl.
// https://bugs.webkit.org/show_bug.cgi?id=150137</doc>
<fun r='_ZN3JSC17IdentifierRepHash4hashERKN3WTF6RefPtrINS1_17UniquedStringImplENS1_12RawPtrTraitsIS3_EENS1_21DefaultRefDerefTraitsIS3_EEEE'/>
<fun r='_ZN3JSC17IdentifierRepHash4hashEPN3WTF17UniquedStringImplE'/>
<smbr r='JSC::IdentifierRepHash::hasHashInValue' t='const bool'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/BytecodeIntrinsicRegistry.h' l='216'/>
<size>1</size>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/AbstractModuleRecord.h' l='99'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/AbstractModuleRecord.h' l='100'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/AbstractModuleRecord.h' l='101'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/AbstractModuleRecord.h' l='209'/>
<size>1</size>
<use f='webkit/Source/WebCore/bindings/js/SerializedScriptValue.cpp' l='1782'/>
<size>1</size>
