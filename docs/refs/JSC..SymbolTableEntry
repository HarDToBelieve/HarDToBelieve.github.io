<def f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='78' ll='436'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='114' c='_ZN3JSC16SymbolTableEntry4FastC1ERKS0_'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='163'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='191' c='_ZN3JSC16SymbolTableEntryC1ERKS0_'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='197' c='_ZN3JSC16SymbolTableEntryaSERKS0_'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='197' c='_ZN3JSC16SymbolTableEntryaSERKS0_'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='206' c='_ZN3JSC16SymbolTableEntryC1EOS0_'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='212' c='_ZN3JSC16SymbolTableEntryaSEOS0_'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='212' c='_ZN3JSC16SymbolTableEntryaSEOS0_'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='218' c='_ZN3JSC16SymbolTableEntry4swapERS0_'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='350' c='_ZN3JSC16SymbolTableEntry8copySlowERKS0_'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='350' c='_ZN3JSC16SymbolTableEntry8copySlowERKS0_'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='438'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='449'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='453'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='488' c='_ZN3JSC11SymbolTable3getERKNS_18ConcurrentJSLockerEPN3WTF17UniquedStringImplE'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='493' c='_ZN3JSC11SymbolTable3getEPN3WTF17UniquedStringImplE'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='499' c='_ZN3JSC11SymbolTable9inlineGetERKNS_18ConcurrentJSLockerEPN3WTF17UniquedStringImplE'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='504' c='_ZN3JSC11SymbolTable9inlineGetEPN3WTF17UniquedStringImplE'/>
<use f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='699' c='_ZN3JSC11SymbolTable8entryForERKNS_18ConcurrentJSLockerENS_11ScopeOffsetE'/>
<use f='webkit/Source/JavaScriptCore/runtime/JSSymbolTableObject.h' l='102' c='_ZN3JSC14symbolTableGetEPT_NS_12PropertyNameERNS_16SymbolTableEntryERNS_18PropertyDescriptorE'/>
<size>8</size>
<doc f='webkit/Source/JavaScriptCore/runtime/SymbolTable.h' l='52'>// The bit twiddling in this class assumes that every register index is a
// reasonably small positive or negative number, and therefore has its high
// four bits all set or all unset.

// In addition to implementing semantics-mandated variable attributes and
// implementation-mandated variable indexing, this class also implements
// watchpoints to be used for JIT optimizations. Because watchpoints are
// meant to be relatively rare, this class optimizes heavily for the case
// that they are not being used. To that end, this class uses the thin-fat
// idiom: either it is thin, in which case it contains an in-place encoded
// word that consists of attributes, the index, and a bit saying that it is
// thin; or it is fat, in which case it contains a pointer to a malloc&apos;d
// data structure and a bit saying that it is fat. The malloc&apos;d data
// structure will be malloced a second time upon copy, to preserve the
// property that in-place edits to SymbolTableEntry do not manifest in any
// copies. However, the malloc&apos;d FatEntry data structure contains a ref-
// counted pointer to a shared WatchpointSet. Thus, in-place edits of the
// WatchpointSet will manifest in all copies. Here&apos;s a picture:
//
// SymbolTableEntry --&gt; FatEntry --&gt; WatchpointSet
//
// If you make a copy of a SymbolTableEntry, you will have:
//
// original: SymbolTableEntry --&gt; FatEntry --&gt; WatchpointSet
// copy:     SymbolTableEntry --&gt; FatEntry -----^</doc>
<fun r='_ZN3JSC16SymbolTableEntry17varOffsetFromBitsEl'/>
<fun r='_ZN3JSC16SymbolTableEntry19scopeOffsetFromBitsEl'/>
<fun r='_ZN3JSC16SymbolTableEntryC1Ev'/>
<fun r='_ZN3JSC16SymbolTableEntryC1ENS_9VarOffsetE'/>
<fun r='_ZN3JSC16SymbolTableEntryC1ENS_9VarOffsetEj'/>
<fun r='_ZN3JSC16SymbolTableEntryD1Ev'/>
<fun r='_ZN3JSC16SymbolTableEntryC1ERKS0_'/>
<fun r='_ZN3JSC16SymbolTableEntryaSERKS0_'/>
<fun r='_ZN3JSC16SymbolTableEntryC1EOS0_'/>
<fun r='_ZN3JSC16SymbolTableEntryaSEOS0_'/>
<fun r='_ZN3JSC16SymbolTableEntry4swapERS0_'/>
<fun r='_ZNK3JSC16SymbolTableEntry6isNullEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry9varOffsetEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry11isWatchableEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry11scopeOffsetEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry7getFastEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry7getFastERb'/>
<fun r='_ZNK3JSC16SymbolTableEntry13getAttributesEv'/>
<fun r='_ZN3JSC16SymbolTableEntry11setReadOnlyEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry10isReadOnlyEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry12constantModeEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry10isDontEnumEv'/>
<fun r='_ZN3JSC16SymbolTableEntry15disableWatchingERNS_2VME'/>
<fun r='_ZN3JSC16SymbolTableEntry14prepareToWatchEv'/>
<fun r='_ZN3JSC16SymbolTableEntry13watchpointSetEv'/>
<smbr r='JSC::SymbolTableEntry::SlimFlag' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::ReadOnlyFlag' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::DontEnumFlag' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::NotNullFlag' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::KindBitsMask' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::ScopeKindBits' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::UnwatchableScopeKindBits' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::StackKindBits' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::DirectArgumentKindBits' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::FlagBits' t='const intptr_t'/>
<fun r='_ZN3JSC16SymbolTableEntry8copySlowERKS0_'/>
<fun r='_ZNK3JSC16SymbolTableEntry5isFatEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry8fatEntryEv'/>
<fun r='_ZN3JSC16SymbolTableEntry8fatEntryEv'/>
<fun r='_ZN3JSC16SymbolTableEntry7inflateEv'/>
<fun r='_ZN3JSC16SymbolTableEntry11inflateSlowEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry4bitsEv'/>
<fun r='_ZN3JSC16SymbolTableEntry4bitsEv'/>
<fun r='_ZN3JSC16SymbolTableEntry12freeFatEntryEv'/>
<fun r='_ZN3JSC16SymbolTableEntry16freeFatEntrySlowEv'/>
<fun r='_ZN3JSC16SymbolTableEntry4packENS_9VarOffsetEbbb'/>
<fun r='_ZN3JSC16SymbolTableEntry16isValidVarOffsetENS_9VarOffsetE'/>
<mbr r='JSC::SymbolTableEntry::m_bits' o='0' t='intptr_t'/>
<def f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='78' ll='436'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='114' c='_ZN3JSC16SymbolTableEntry4FastC1ERKS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='163'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='191' c='_ZN3JSC16SymbolTableEntryC1ERKS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='197' c='_ZN3JSC16SymbolTableEntryaSERKS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='197' c='_ZN3JSC16SymbolTableEntryaSERKS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='206' c='_ZN3JSC16SymbolTableEntryC1EOS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='212' c='_ZN3JSC16SymbolTableEntryaSEOS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='212' c='_ZN3JSC16SymbolTableEntryaSEOS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='218' c='_ZN3JSC16SymbolTableEntry4swapERS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='350' c='_ZN3JSC16SymbolTableEntry8copySlowERKS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='350' c='_ZN3JSC16SymbolTableEntry8copySlowERKS0_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='438'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='449'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='453'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='488' c='_ZN3JSC11SymbolTable3getERKNS_18ConcurrentJSLockerEPN3WTF17UniquedStringImplE'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='493' c='_ZN3JSC11SymbolTable3getEPN3WTF17UniquedStringImplE'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='499' c='_ZN3JSC11SymbolTable9inlineGetERKNS_18ConcurrentJSLockerEPN3WTF17UniquedStringImplE'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='504' c='_ZN3JSC11SymbolTable9inlineGetEPN3WTF17UniquedStringImplE'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='699' c='_ZN3JSC11SymbolTable8entryForERKNS_18ConcurrentJSLockerENS_11ScopeOffsetE'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/JSSymbolTableObject.h' l='102' c='_ZN3JSC14symbolTableGetEPT_NS_12PropertyNameERNS_16SymbolTableEntryERNS_18PropertyDescriptorE'/>
<size>8</size>
<doc f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/SymbolTable.h' l='52'>// The bit twiddling in this class assumes that every register index is a
// reasonably small positive or negative number, and therefore has its high
// four bits all set or all unset.

// In addition to implementing semantics-mandated variable attributes and
// implementation-mandated variable indexing, this class also implements
// watchpoints to be used for JIT optimizations. Because watchpoints are
// meant to be relatively rare, this class optimizes heavily for the case
// that they are not being used. To that end, this class uses the thin-fat
// idiom: either it is thin, in which case it contains an in-place encoded
// word that consists of attributes, the index, and a bit saying that it is
// thin; or it is fat, in which case it contains a pointer to a malloc&apos;d
// data structure and a bit saying that it is fat. The malloc&apos;d data
// structure will be malloced a second time upon copy, to preserve the
// property that in-place edits to SymbolTableEntry do not manifest in any
// copies. However, the malloc&apos;d FatEntry data structure contains a ref-
// counted pointer to a shared WatchpointSet. Thus, in-place edits of the
// WatchpointSet will manifest in all copies. Here&apos;s a picture:
//
// SymbolTableEntry --&gt; FatEntry --&gt; WatchpointSet
//
// If you make a copy of a SymbolTableEntry, you will have:
//
// original: SymbolTableEntry --&gt; FatEntry --&gt; WatchpointSet
// copy:     SymbolTableEntry --&gt; FatEntry -----^</doc>
<fun r='_ZN3JSC16SymbolTableEntry17varOffsetFromBitsEl'/>
<fun r='_ZN3JSC16SymbolTableEntry19scopeOffsetFromBitsEl'/>
<fun r='_ZN3JSC16SymbolTableEntryC1Ev'/>
<fun r='_ZN3JSC16SymbolTableEntryC1ENS_9VarOffsetE'/>
<fun r='_ZN3JSC16SymbolTableEntryC1ENS_9VarOffsetEj'/>
<fun r='_ZN3JSC16SymbolTableEntryD1Ev'/>
<fun r='_ZN3JSC16SymbolTableEntryC1ERKS0_'/>
<fun r='_ZN3JSC16SymbolTableEntryaSERKS0_'/>
<fun r='_ZN3JSC16SymbolTableEntryC1EOS0_'/>
<fun r='_ZN3JSC16SymbolTableEntryaSEOS0_'/>
<fun r='_ZN3JSC16SymbolTableEntry4swapERS0_'/>
<fun r='_ZNK3JSC16SymbolTableEntry6isNullEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry9varOffsetEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry11isWatchableEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry11scopeOffsetEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry7getFastEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry7getFastERb'/>
<fun r='_ZNK3JSC16SymbolTableEntry13getAttributesEv'/>
<fun r='_ZN3JSC16SymbolTableEntry11setReadOnlyEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry10isReadOnlyEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry12constantModeEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry10isDontEnumEv'/>
<fun r='_ZN3JSC16SymbolTableEntry15disableWatchingERNS_2VME'/>
<fun r='_ZN3JSC16SymbolTableEntry14prepareToWatchEv'/>
<fun r='_ZN3JSC16SymbolTableEntry13watchpointSetEv'/>
<smbr r='JSC::SymbolTableEntry::SlimFlag' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::ReadOnlyFlag' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::DontEnumFlag' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::NotNullFlag' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::KindBitsMask' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::ScopeKindBits' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::UnwatchableScopeKindBits' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::StackKindBits' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::DirectArgumentKindBits' t='const intptr_t'/>
<smbr r='JSC::SymbolTableEntry::FlagBits' t='const intptr_t'/>
<fun r='_ZN3JSC16SymbolTableEntry8copySlowERKS0_'/>
<fun r='_ZNK3JSC16SymbolTableEntry5isFatEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry8fatEntryEv'/>
<fun r='_ZN3JSC16SymbolTableEntry8fatEntryEv'/>
<fun r='_ZN3JSC16SymbolTableEntry7inflateEv'/>
<fun r='_ZN3JSC16SymbolTableEntry11inflateSlowEv'/>
<fun r='_ZNK3JSC16SymbolTableEntry4bitsEv'/>
<fun r='_ZN3JSC16SymbolTableEntry4bitsEv'/>
<fun r='_ZN3JSC16SymbolTableEntry12freeFatEntryEv'/>
<fun r='_ZN3JSC16SymbolTableEntry16freeFatEntrySlowEv'/>
<fun r='_ZN3JSC16SymbolTableEntry4packENS_9VarOffsetEbbb'/>
<fun r='_ZN3JSC16SymbolTableEntry16isValidVarOffsetENS_9VarOffsetE'/>
<mbr r='JSC::SymbolTableEntry::m_bits' o='0' t='intptr_t'/>
