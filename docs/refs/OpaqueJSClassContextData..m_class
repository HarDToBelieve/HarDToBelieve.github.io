<dec f='webkit/Source/JavaScriptCore/API/JSClassRef.h' l='83' type='RefPtr&lt;OpaqueJSClass&gt;'/>
<offset>0</offset>
<doc f='webkit/Source/JavaScriptCore/API/JSClassRef.h' l='77'>// It is necessary to keep OpaqueJSClass alive because of the following rare scenario:
    // 1. A class is created and used, so its context data is stored in VM hash map.
    // 2. The class is released, and when all JS objects that use it are collected, OpaqueJSClass
    // is deleted (that&apos;s the part prevented by this RefPtr).
    // 3. Another class is created at the same address.
    // 4. When it is used, the old context data is found in VM and used.</doc>
<dec f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/JSClassRef.h' l='83' type='RefPtr&lt;OpaqueJSClass&gt;'/>
<offset>0</offset>
<doc f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/JSClassRef.h' l='77'>// It is necessary to keep OpaqueJSClass alive because of the following rare scenario:
    // 1. A class is created and used, so its context data is stored in VM hash map.
    // 2. The class is released, and when all JS objects that use it are collected, OpaqueJSClass
    // is deleted (that&apos;s the part prevented by this RefPtr).
    // 3. Another class is created at the same address.
    // 4. When it is used, the old context data is found in VM and used.</doc>
