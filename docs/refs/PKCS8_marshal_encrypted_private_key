<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/pkcs8.h' l='94' type='int PKCS8_marshal_encrypted_private_key(CBB * out, int pbe_nid, const EVP_CIPHER * cipher, const char * pass, size_t pass_len, const uint8_t * salt, size_t salt_len, int iterations, const EVP_PKEY * pkey)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/pkcs8.h' l='91'>// PKCS8_marshal_encrypted_private_key behaves like |PKCS8_encrypt| but encrypts
// an |EVP_PKEY| and writes the serialized EncryptedPrivateKeyInfo to |out|. It
// returns one on success and zero on error.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/pkcs8/pkcs8.c' l='445' ll='530' type='int PKCS8_marshal_encrypted_private_key(CBB * out, int pbe_nid, const EVP_CIPHER * cipher, const char * pass, size_t pass_len, const uint8_t * salt, size_t salt_len, int iterations, const EVP_PKEY * pkey)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/pkcs8/pkcs8_x509.c' l='253' u='c' c='PKCS8_encrypt'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/pkcs8/pkcs8_x509.c' l='1319' u='c' c='PKCS12_create'/>
