<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/rsa.h' l='512' type='int RSA_padding_add_PKCS1_OAEP_mgf1(uint8_t * to, size_t to_len, const uint8_t * from, size_t from_len, const uint8_t * param, size_t param_len, const EVP_MD * md, const EVP_MD * mgf1md)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/rsa.h' l='506'>// RSA_padding_add_PKCS1_OAEP_mgf1 writes an OAEP padding of |from| to |to|
// with the given parameters and hash functions. If |md| is NULL then SHA-1 is
// used. If |mgf1md| is NULL then the value of |md| is used (which means SHA-1
// if that, in turn, is NULL).
//
// It returns one on success or zero on error.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/evp/p_rsa.c' l='325' u='c' c='pkey_rsa_encrypt'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/rsa/padding.c' l='316' ll='385' type='int RSA_padding_add_PKCS1_OAEP_mgf1(uint8_t * to, size_t to_len, const uint8_t * from, size_t from_len, const uint8_t * param, size_t param_len, const EVP_MD * md, const EVP_MD * mgf1md)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/rsa/rsa_impl.c' l='299' u='c' c='RSA_encrypt'/>
