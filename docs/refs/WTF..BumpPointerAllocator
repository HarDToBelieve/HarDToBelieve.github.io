<use f='webkit/WebKitBuild/Debug/usr/local/include/wtf/BumpPointerAllocator.h' l='203'/>
<def f='webkit/WebKitBuild/Debug/usr/local/include/wtf/BumpPointerAllocator.h' l='221' ll='250'/>
<use f='webkit/Source/JavaScriptCore/runtime/VM.h' l='1023'/>
<size>8</size>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/wtf/BumpPointerAllocator.h' l='206'>// A BumpPointerAllocator manages a set of BumpPointerPool objects, which
// can be used for LIFO (stack like) allocation.
//
// To begin allocating using this class call startAllocator().  The result
// of this method will be null if the initial pool allocation fails, or a
// pointer to a BumpPointerPool object that can be used to perform
// allocations.  Whilst running no memory will be released until
// stopAllocator() is called.  At this point all allocations made through
// this allocator will be reaped, and underlying memory may be freed.
//
// (In practice we will still hold on to the initial pool to allow allocation
// to be quickly restared, but aditional pools will be freed).
//
// This allocator is non-renetrant, it is encumbant on the clients to ensure
// startAllocator() is not called again until stopAllocator() has been called.</doc>
<fun r='_ZN3WTF20BumpPointerAllocatorC1Ev'/>
<fun r='_ZN3WTF20BumpPointerAllocatorD1Ev'/>
<fun r='_ZN3WTF20BumpPointerAllocator14startAllocatorEv'/>
<fun r='_ZN3WTF20BumpPointerAllocator13stopAllocatorEv'/>
<mbr r='WTF::BumpPointerAllocator::m_head' o='0' t='WTF::BumpPointerPool *'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/VM.h' l='1023'/>
<size>8</size>
