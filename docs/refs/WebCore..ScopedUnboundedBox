<def f='webkit/Source/WebCore/rendering/RenderFlexibleBox.cpp' l='1376' ll='1411'/>
<use f='webkit/Source/WebCore/rendering/RenderFlexibleBox.cpp' l='1377' c='_ZN7WebCore18ScopedUnboundedBoxC1ERKS0_'/>
<use f='webkit/Source/WebCore/rendering/RenderFlexibleBox.cpp' l='1377' c='_ZN7WebCore18ScopedUnboundedBoxaSERKS0_'/>
<use f='webkit/Source/WebCore/rendering/RenderFlexibleBox.cpp' l='1377' c='_ZN7WebCore18ScopedUnboundedBoxaSERKS0_'/>
<use f='webkit/Source/WebCore/rendering/RenderFlexibleBox.cpp' l='1419' c='_ZN7WebCore17RenderFlexibleBox17constructFlexItemERNS_9RenderBoxEb'/>
<size>32</size>
<doc f='webkit/Source/WebCore/rendering/RenderFlexibleBox.cpp' l='1371'>// A scoped class that resets either min-width &amp; max-width or min-height &amp; max-height (depending on the
// flex container main size) to their initial values on instantiation. It later resets them back to their
// original values on destruction. It&apos;s used when computing the flex base sizes of flex items as &quot;when determining 
// the flex base size, the itemâ€™s min and max main sizes are ignored (no clamping occurs)&quot;. See
// https://drafts.csswg.org/css-flexbox/#line-sizing</doc>
<fun r='_ZN7WebCore18ScopedUnboundedBoxC1ERKS0_'/>
<fun r='_ZN7WebCore18ScopedUnboundedBoxC1ERNS_9RenderBoxEb'/>
<fun r='_ZN7WebCore18ScopedUnboundedBoxD1Ev'/>
<mbr r='WebCore::ScopedUnboundedBox::m_box' o='0' t='WebCore::RenderBox &amp;'/>
<mbr r='WebCore::ScopedUnboundedBox::m_isHorizontalWritingModeInParallelFlow' o='64' t='bool'/>
<mbr r='WebCore::ScopedUnboundedBox::m_originalMin' o='96' t='WebCore::Length'/>
<mbr r='WebCore::ScopedUnboundedBox::m_originalMax' o='160' t='WebCore::Length'/>
