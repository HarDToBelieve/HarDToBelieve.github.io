<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/isac/main/include/isac.h' l='158' type='int WebRtcIsac_Decode(ISACStruct * ISAC_main_inst, const uint8_t * encoded, size_t len, int16_t * decoded, int16_t * speechType)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/isac/main/source/isac_float_type.h' l='41' u='c' c='_ZN6webrtc9IsacFloat14DecodeInternalEP16WebRtcISACStructPKhmPsS5_'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/isac/main/include/isac.h' l='138'>/******************************************************************************
 * WebRtcIsac_Decode(...)
 *
 * This function decodes an ISAC frame. At 16 kHz sampling rate, the length
 * of the output audio could be either 480 or 960 samples, equivalent to
 * 30 or 60 ms respectively. At 32 kHz sampling rate, the length of the
 * output audio is 960 samples, which is 30 ms.
 *
 * Input:
 *        - ISAC_main_inst    : ISAC instance.
 *        - encoded           : encoded ISAC frame(s).
 *        - len               : bytes in encoded vector.
 *
 * Output:
 *        - decoded           : The decoded vector.
 *
 * Return value               : &gt;0 - number of samples in decoded vector.
 *                              -1 - Error.
 */</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/isac/main/source/isac.c' l='1280' ll='1288' type='int WebRtcIsac_Decode(ISACStruct * ISAC_main_inst, const uint8_t * encoded, size_t lenEncodedBytes, int16_t * decoded, int16_t * speechType)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/isac/main/source/isac.c' l='1261'>/****************************************************************************
 * WebRtcIsac_Decode(...)
 *
 * This function decodes a ISAC frame. Output speech length
 * will be a multiple of 480 samples: 480 or 960 samples,
 * depending on the  frameSize (30 or 60 ms).
 *
 * Input:
 *        - ISAC_main_inst    : ISAC instance.
 *        - encoded           : encoded ISAC frame(s)
 *        - len               : bytes in encoded vector
 *
 * Output:
 *        - decoded           : The decoded vector
 *
 * Return value               : &gt;0 - number of samples in decoded vector
 *                              -1 - Error
 */</doc>
