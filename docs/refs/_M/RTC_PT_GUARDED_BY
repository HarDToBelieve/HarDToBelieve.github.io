<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/thread_annotations.h' l='39'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/thread_annotations.h' l='33'>// Document if the memory location pointed to by a pointer should be guarded
// by a lock when dereferencing the pointer. Note that a pointer variable to a
// shared memory location could itself be a shared variable. For example, if a
// shared global pointer q, which is guarded by mu1, points to a shared memory
// location that is guarded by mu2, q should be annotated as follows:
//     int *q GUARDED_BY(mu1) PT_GUARDED_BY(mu2);</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/base/media_channel.h' l='306' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/timing.h' l='120' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/timing.h' l='122' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/video_stream_decoder_impl.h' l='96' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/video_stream_decoder_impl.h' l='101' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/call/rtp_transport_controller_send.h' l='168' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/call/rtp_transport_controller_send.h' l='170' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/call/rtp_transport_controller_send.h' l='173' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/call/rtp_transport_controller_send.h' l='176' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/remote_bitrate_estimator/remote_estimator_proxy.h' l='112' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/rtp_video_stream_receiver2.h' l='356' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/dtmf_sender.h' l='98' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/peer_connection.h' l='614' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/adaptation/overuse_frame_detector.h' l='160' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/rtp_video_stream_receiver.h' l='407' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/video_stream_encoder.h' l='244' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/video_stream_encoder.h' l='247' u='c'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/thread_annotations.h' l='39'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/media/base/media_channel.h' l='306' u='c'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/pc/dtmf_sender.h' l='98' u='c'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/thread_annotations.h' l='33'>// Document if the memory location pointed to by a pointer should be guarded
// by a lock when dereferencing the pointer. Note that a pointer variable to a
// shared memory location could itself be a shared variable. For example, if a
// shared global pointer q, which is guarded by mu1, points to a shared memory
// location that is guarded by mu2, q should be annotated as follows:
//     int *q GUARDED_BY(mu1) PT_GUARDED_BY(mu2);</doc>
