<dec f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_state_cache.h' l='532' type='void rx::mtl::RenderPipelineCache::setVertexShader(rx::mtl::Context * context, id&lt;MTLFunction&gt; shader)'/>
<doc f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_state_cache.h' l='527'>// Set non-specialized vertex/fragment shader to be used by render pipeline cache to create
    // render pipeline state. If the internal
    // RenderPipelineCacheSpecializeShaderFactory.hasSpecializedShader() returns false for a
    // particular RenderPipelineDesc, the render pipeline cache will use the non-specialized
    // shaders.</doc>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_render_utils.mm' l='600' u='c' c='_ZN2rx3mtl12_GLOBAL__N_146EnsureVertexShaderOnlyPipelineCacheInitializedEPNS0_7ContextEP8NSStringPU21objcproto10MTLLibrary11objc_objectPNS0_19RenderPipelineCacheE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_render_utils.mm' l='644' u='c' c='_ZN2rx3mtl12_GLOBAL__N_157EnsureSpecializedVertexShaderOnlyPipelineCacheInitializedEPNS0_7ContextEP8NSStringP25MTLFunctionConstantValuesPNS0_19RenderPipelineCacheE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_render_utils.mm' l='1265' u='c' c='_ZN2rx3mtl10ClearUtils41ensureRenderPipelineStateCacheInitializedEPNS_10ContextMtlEj'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_render_utils.mm' l='1498' u='c' c='_ZN2rx3mtl14ColorBlitUtils41ensureRenderPipelineStateCacheInitializedEPNS_10ContextMtlEjiiPNS0_19RenderPipelineCacheE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_render_utils.mm' l='1672' u='c' c='_ZN2rx3mtl21DepthStencilBlitUtils41ensureRenderPipelineStateCacheInitializedEPNS_10ContextMtlEiiPNS0_19RenderPipelineCacheE'/>
<def f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_state_cache.mm' l='872' ll='884' type='void rx::mtl::RenderPipelineCache::setVertexShader(rx::mtl::Context * context, id&lt;MTLFunction&gt; shader)'/>
