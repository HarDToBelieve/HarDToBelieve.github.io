<dec f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/RewriteOutArgs.h' l='29' type='bool sh::RewriteOutArgs(sh::TCompiler &amp; compiler, sh::TIntermBlock &amp; root, sh::SymbolEnv &amp; symbolEnv)'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect.cpp' l='1444' u='c' c='_ZN2sh21TranslatorMetalDirect13translateImplERNS_12TIntermBlockEy'/>
<doc f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/RewriteOutArgs.h' l='17'>// e.g.:
//    /*void foo(out int x, inout int y)*/
//    foo(z, w);
// becomes
//    foo(Out(z), InOut(w));
// unless `z` and `w` are detected to never alias.
// The translated example effectively behaves the same as:
//    int _1;
//    int _2 = w;
//    foo(_1, _2);
//    z = _1;
//    w = _2;</doc>
<def f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/RewriteOutArgs.cpp' l='212' ll='220' type='bool sh::RewriteOutArgs(sh::TCompiler &amp; compiler, sh::TIntermBlock &amp; root, sh::SymbolEnv &amp; symbolEnv)'/>
