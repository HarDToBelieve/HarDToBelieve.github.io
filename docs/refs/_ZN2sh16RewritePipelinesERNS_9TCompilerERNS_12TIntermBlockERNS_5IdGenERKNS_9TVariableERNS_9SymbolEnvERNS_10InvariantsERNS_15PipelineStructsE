<dec f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/RewritePipelines.h' l='35' type='bool sh::RewritePipelines(sh::TCompiler &amp; compiler, sh::TIntermBlock &amp; root, sh::IdGen &amp; idGen, const sh::TVariable &amp; angleUniformsGlobalInstanceVar, sh::SymbolEnv &amp; symbolEnv, sh::Invariants &amp; invariants, sh::PipelineStructs &amp; outStructs)'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect.cpp' l='1417' u='c' c='_ZN2sh21TranslatorMetalDirect13translateImplERNS_12TIntermBlockEy'/>
<doc f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/RewritePipelines.h' l='20'>// This rewrites all pipelines.
//
// For each pipeline:
//    - Discover all variables that are used by the pipeline
//    - Move the variables into an internal pipeline struct instance and update old variables to be
//      member access instead.
//    - Dependency inject the internal pipeline struct to all functions that access variables from
//      the struct.
//    - A new external pipeline struct is created if needed for impedance reasons. Otherwise the
//      external and internal pipeline structs are the same.
//    - Add `main` parameter or return value for the external pipeline struct as needed.
//    - Inside `main`, map the external struct to the internal struct if they differ and is provided
//      as a parameter to `main`.
//    - Inside `main`, map the internal struct to the external struct if they differ and is returned
//      from `main`.</doc>
<def f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/RewritePipelines.cpp' l='933' ll='974' type='bool sh::RewritePipelines(sh::TCompiler &amp; compiler, sh::TIntermBlock &amp; root, sh::IdGen &amp; idGen, const sh::TVariable &amp; angleUniformsGlobalInstanceVar, sh::SymbolEnv &amp; symbolEnv, sh::Invariants &amp; invariants, sh::PipelineStructs &amp; outStructs)'/>
