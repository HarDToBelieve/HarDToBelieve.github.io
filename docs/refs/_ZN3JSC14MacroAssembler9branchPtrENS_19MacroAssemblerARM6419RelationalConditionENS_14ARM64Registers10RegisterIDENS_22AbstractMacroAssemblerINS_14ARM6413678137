<def f='webkit/Source/JavaScriptCore/assembler/MacroAssembler.h' l='368' ll='371' type='void JSC::MacroAssembler::branchPtr(JSC::MacroAssemblerARM64::RelationalCondition cond, JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::RegisterID op1, JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::TrustedImmPtr imm, JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::Label target)'/>
<doc f='webkit/Source/JavaScriptCore/assembler/MacroAssembler.h' l='367'>// Backwards banches, these are currently all implemented using existing forwards branch mechanisms.</doc>
<def f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/MacroAssembler.h' l='368' ll='371' type='void JSC::MacroAssembler::branchPtr(JSC::MacroAssemblerARM64::RelationalCondition cond, JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::RegisterID op1, JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::TrustedImmPtr imm, JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::Label target)'/>
<doc f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/MacroAssembler.h' l='367'>// Backwards banches, these are currently all implemented using existing forwards branch mechanisms.</doc>
