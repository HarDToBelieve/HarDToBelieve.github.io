<dec f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/validationEGL.h' l='49' type='const egl::Thread * egl::GetThreadIfValid(const egl::Thread * thread)'/>
<def f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/validationEGL.cpp' l='1069' ll='1073' type='const egl::Thread * egl::GetThreadIfValid(const egl::Thread * thread)'/>
<doc f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/validationEGL.h' l='48'>// Return the requested object only if it is valid (otherwise nullptr)</doc>
<use f='webkit/Source/ThirdParty/ANGLE/src/libGLESv2/entry_points_egl.cpp' l='572' u='c' c='EGL_WaitNative'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libGLESv2/entry_points_egl.cpp' l='577' u='c' c='EGL_WaitNative'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libGLESv2/entry_points_egl.cpp' l='744' u='c' c='EGL_BindAPI'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libGLESv2/entry_points_egl.cpp' l='1041' u='c' c='EGL_GetPlatformDisplay'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libGLESv2/entry_points_egl_ext.cpp' l='183' u='c' c='EGL_GetPlatformDisplayEXT'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libGLESv2/entry_points_egl_ext.cpp' l='500' u='c' c='EGL_CreateDeviceANGLE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libGLESv2/entry_points_egl_ext.cpp' l='509' u='c' c='EGL_CreateDeviceANGLE'/>
