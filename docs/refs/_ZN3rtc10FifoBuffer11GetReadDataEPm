<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/memory/fifo_buffer.h' l='86' type='const void * rtc::FifoBuffer::GetReadData(size_t * data_len)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/memory/fifo_buffer.cc' l='143' ll='149' type='const void * rtc::FifoBuffer::GetReadData(size_t * size)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/memory/fifo_buffer.h' l='79'>// GetReadData returns a pointer to a buffer which is owned by the stream.
  // The buffer contains data_len bytes.  null is returned if no data is
  // available, or if the method fails.  If the caller processes the data, it
  // must call ConsumeReadData with the number of processed bytes.  GetReadData
  // does not require a matching call to ConsumeReadData if the data is not
  // processed.  Read and ConsumeReadData invalidate the buffer returned by
  // GetReadData.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/proxy_server.cc' l='142' u='c' c='_ZN3rtc12ProxyBinding5WriteEPNS_11AsyncSocketEPNS_10FifoBufferE'/>
