<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/ssl_identity.h' l='111' type='static std::unique_ptr&lt;SSLIdentity&gt; rtc::SSLIdentity::Create(const std::string &amp; common_name, const rtc::KeyParams &amp; key_param, time_t certificate_lifetime)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/ssl_identity.h' l='103'>// Generates an identity (keypair and self-signed certificate). If
  // |common_name| is non-empty, it will be used for the certificate&apos;s subject
  // and issuer name, otherwise a random string will be used. The key type and
  // parameters are defined in |key_param|. The certificate&apos;s lifetime in
  // seconds from the current time is defined in |certificate_lifetime|; it
  // should be a non-negative number.
  // Returns null on failure.
  // Caller is responsible for freeing the returned object.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/rtc_certificate_generator.cc' l='57' u='c' c='_ZN3rtc23RTCCertificateGenerator19GenerateCertificateERKNS_9KeyParamsERKNSt3__18optionalIyEE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/ssl_identity.cc' l='217' ll='227' type='static std::unique_ptr&lt;SSLIdentity&gt; rtc::SSLIdentity::Create(const std::string &amp; common_name, const rtc::KeyParams &amp; key_param, time_t certificate_lifetime)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/ssl_identity.cc' l='232' u='c' c='_ZN3rtc11SSLIdentity6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_9KeyParamsE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/ssl_identity.cc' l='238' u='c' c='_ZN3rtc11SSLIdentity6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_7KeyTypeE'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/ssl_identity.cc' l='216'>// static</doc>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/ssl_identity.h' l='111' type='static std::unique_ptr&lt;SSLIdentity&gt; rtc::SSLIdentity::Create(const std::string &amp; common_name, const rtc::KeyParams &amp; key_param, time_t certificate_lifetime)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/ssl_identity.h' l='103'>// Generates an identity (keypair and self-signed certificate). If
  // |common_name| is non-empty, it will be used for the certificate&apos;s subject
  // and issuer name, otherwise a random string will be used. The key type and
  // parameters are defined in |key_param|. The certificate&apos;s lifetime in
  // seconds from the current time is defined in |certificate_lifetime|; it
  // should be a non-negative number.
  // Returns null on failure.
  // Caller is responsible for freeing the returned object.</doc>
