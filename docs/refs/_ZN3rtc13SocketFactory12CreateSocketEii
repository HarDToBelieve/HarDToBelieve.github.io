<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/socket_factory.h' l='25' type='rtc::Socket * rtc::SocketFactory::CreateSocket(int family, int type)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/socket_factory.h' l='23'>// Returns a new socket for blocking communication.  The type can be
  // SOCK_DGRAM and SOCK_STREAM.</doc>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/firewall_socket_server.cc' l='205' c='_ZN3rtc20FirewallSocketServer12CreateSocketEii'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/null_socket_server.cc' l='32' c='_ZN3rtc16NullSocketServer12CreateSocketEii'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/physical_socket_server.cc' l='1091' c='_ZN3rtc20PhysicalSocketServer12CreateSocketEii'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/socket_factory.h' l='25' type='rtc::Socket * rtc::SocketFactory::CreateSocket(int family, int type)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/socket_factory.h' l='23'>// Returns a new socket for blocking communication.  The type can be
  // SOCK_DGRAM and SOCK_STREAM.</doc>
