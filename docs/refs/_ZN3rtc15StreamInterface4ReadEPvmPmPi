<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/stream.h' l='70' type='rtc::StreamResult rtc::StreamInterface::Read(void * buffer, size_t buffer_len, size_t * read, int * error)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/stream.h' l='57'>// Read attempts to fill buffer of size buffer_len.  Write attempts to send
  // data_len bytes stored in data.  The variables read and write are set only
  // on SR_SUCCESS (see below).  Likewise, error is only set on SR_ERROR.
  // Read and Write return a value indicating:
  //  SR_ERROR: an error occurred, which is returned in a non-null error
  //    argument.  Interpretation of the error requires knowledge of the
  //    stream&apos;s concrete type, which limits its usefulness.
  //  SR_SUCCESS: some number of bytes were successfully written, which is
  //    returned in a non-null read/write argument.
  //  SR_BLOCK: the stream is in non-blocking mode, and the operation would
  //    block, or the stream is in SS_OPENING state.
  //  SR_EOS: the end-of-stream has been reached, or the stream is in the
  //    SS_CLOSED state.</doc>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/dtls_transport.cc' l='72' c='_ZN7cricket22StreamInterfaceChannel4ReadEPvmPmPi'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/dtls_transport.cc' l='667' u='c' c='_ZN7cricket13DtlsTransport11OnDtlsEventEPN3rtc15StreamInterfaceEii'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/memory/fifo_buffer.cc' l='87' c='_ZN3rtc10FifoBuffer4ReadEPvmPmPi'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/memory_stream.cc' l='26' c='_ZN3rtc12MemoryStream4ReadEPvmPmPi'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/openssl_stream_adapter.cc' l='215' u='c' c='_ZN3rtcL11stream_readEP6bio_stPci'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/openssl_stream_adapter.cc' l='627' c='_ZN3rtc20OpenSSLStreamAdapter4ReadEPvmPmPi'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/openssl_stream_adapter.cc' l='635' u='c' c='_ZN3rtc20OpenSSLStreamAdapter4ReadEPvmPmPi'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/socket_stream.cc' l='63' c='_ZN3rtc12SocketStream4ReadEPvmPmPi'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/stream.h' l='70' type='rtc::StreamResult rtc::StreamInterface::Read(void * buffer, size_t buffer_len, size_t * read, int * error)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/stream.h' l='57'>// Read attempts to fill buffer of size buffer_len.  Write attempts to send
  // data_len bytes stored in data.  The variables read and write are set only
  // on SR_SUCCESS (see below).  Likewise, error is only set on SR_ERROR.
  // Read and Write return a value indicating:
  //  SR_ERROR: an error occurred, which is returned in a non-null error
  //    argument.  Interpretation of the error requires knowledge of the
  //    stream&apos;s concrete type, which limits its usefulness.
  //  SR_SUCCESS: some number of bytes were successfully written, which is
  //    returned in a non-null read/write argument.
  //  SR_BLOCK: the stream is in non-blocking mode, and the operation would
  //    block, or the stream is in SS_OPENING state.
  //  SR_EOS: the end-of-stream has been reached, or the stream is in the
  //    SS_CLOSED state.</doc>
