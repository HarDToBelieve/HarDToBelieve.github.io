<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/ssl_stream_adapter.h' l='186' type='bool rtc::SSLStreamAdapter::SetPeerCertificateDigest(const std::string &amp; digest_alg, const unsigned char * digest_val, size_t digest_len, rtc::SSLPeerCertificateDigestError * error = nullptr)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/ssl_stream_adapter.h' l='178'>// Specify the digest of the certificate that our peer is expected to use.
  // Only this certificate will be accepted during SSL verification. The
  // certificate is assumed to have been obtained through some other secure
  // channel (such as the signaling channel). This must specify the terminal
  // certificate, not just a CA. SSLStream makes a copy of the digest value.
  //
  // Returns true if successful.
  // |error| is optional and provides more information about the failure.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/dtls_transport.cc' l='273' u='c' c='_ZN7cricket13DtlsTransport20SetRemoteFingerprintERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKhm'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/dtls_transport.cc' l='348' u='c' c='_ZN7cricket13DtlsTransport9SetupDtlsEv'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/openssl_stream_adapter.cc' l='330' c='_ZN3rtc20OpenSSLStreamAdapter24SetPeerCertificateDigestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKhmPNS_29SSLPeerCertificateDigestErrorE'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/ssl_stream_adapter.h' l='186' type='bool rtc::SSLStreamAdapter::SetPeerCertificateDigest(const std::string &amp; digest_alg, const unsigned char * digest_val, size_t digest_len, rtc::SSLPeerCertificateDigestError * error = nullptr)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/ssl_stream_adapter.h' l='178'>// Specify the digest of the certificate that our peer is expected to use.
  // Only this certificate will be accepted during SSL verification. The
  // certificate is assumed to have been obtained through some other secure
  // channel (such as the signaling channel). This must specify the terminal
  // certificate, not just a CA. SSLStream makes a copy of the digest value.
  //
  // Returns true if successful.
  // |error| is optional and provides more information about the failure.</doc>
