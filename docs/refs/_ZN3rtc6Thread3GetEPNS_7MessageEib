<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/thread.h' l='297' type='bool rtc::Thread::Get(rtc::Message * pmsg, int cmsWait = kForever, bool process_io = true)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/thread.h' l='293'>// Get() will process I/O until:
  //  1) A message is available (returns true)
  //  2) cmsWait seconds have elapsed (returns false)
  //  3) Stop() is called (returns false)</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/thread.cc' l='465' u='c' c='_ZN3rtc6Thread4PeekEPNS_7MessageEi'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/thread.cc' l='472' ll='561' type='bool rtc::Thread::Get(rtc::Message * pmsg, int cmsWait = kForever, bool process_io = true)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/thread.cc' l='1146' u='c' c='_ZN3rtc6Thread15ProcessMessagesEi'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/thread.h' l='297' type='bool rtc::Thread::Get(rtc::Message * pmsg, int cmsWait = kForever, bool process_io = true)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/thread.h' l='293'>// Get() will process I/O until:
  //  1) A message is available (returns true)
  //  2) cmsWait seconds have elapsed (returns false)
  //  3) Stop() is called (returns false)</doc>
