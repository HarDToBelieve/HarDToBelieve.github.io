<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/bit_buffer.h' l='82' type='bool rtc::BitBuffer::ReadNonSymmetric(uint32_t num_values, uint32_t &amp; val)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/bit_buffer.h' l='85' u='c' c='_ZN3rtc9BitBuffer16ReadNonSymmetricEPjj'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/bit_buffer.h' l='72'>// Reads value in range [0, num_values - 1].
  // This encoding is similar to ReadBits(val, Ceil(Log2(num_values)),
  // but reduces wastage incurred when encoding non-power of two value ranges
  // Non symmetric values are encoded as:
  // 1) n = countbits(num_values)
  // 2) k = (1 &lt;&lt; n) - num_values
  // Value v in range [0, k - 1] is encoded in (n-1) bits.
  // Value v in range [k, num_values - 1] is encoded as (v+k) in n bits.
  // https://aomediacodec.github.io/av1-spec/#nsn
  // Returns false if there isn&apos;t enough data left.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_dependency_descriptor_reader.cc' l='57' u='c' c='_ZN6webrtc29RtpDependencyDescriptorReader16ReadNonSymmetricEm'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/bit_buffer.cc' l='200' ll='227' type='bool rtc::BitBuffer::ReadNonSymmetric(uint32_t num_values, uint32_t &amp; val)'/>
