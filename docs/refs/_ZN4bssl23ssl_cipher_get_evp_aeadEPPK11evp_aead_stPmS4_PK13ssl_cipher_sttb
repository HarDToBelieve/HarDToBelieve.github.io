<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/internal.h' l='628' type='bool bssl::ssl_cipher_get_evp_aead(const EVP_AEAD ** out_aead, size_t * out_mac_secret_len, size_t * out_fixed_iv_len, const SSL_CIPHER * cipher, uint16_t version, bool is_dtls)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/internal.h' l='623'>// ssl_cipher_get_evp_aead sets |*out_aead| to point to the correct EVP_AEAD
// object for |cipher| protocol version |version|. It sets |*out_mac_secret_len|
// and |*out_fixed_iv_len| to the MAC key length and fixed IV length,
// respectively. The MAC key length is zero except for legacy block and stream
// ciphers. It returns true on success and false on error.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_aead_ctx.cc' l='64' u='c' c='_ZN4bssl14SSLAEADContext6CreateE20evp_aead_direction_ttbPK13ssl_cipher_stNS_4SpanIKhEES7_S7_'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_cipher.cc' l='559' ll='635' type='bool bssl::ssl_cipher_get_evp_aead(const EVP_AEAD ** out_aead, size_t * out_mac_secret_len, size_t * out_fixed_iv_len, const SSL_CIPHER * cipher, uint16_t version, bool is_dtls)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_enc.cc' l='171' u='c' c='_ZN4bsslL21get_key_block_lengthsEPK6ssl_stPmS3_S3_PK13ssl_cipher_st'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/tls13_enc.cc' l='157' u='c' c='_ZN4bssl21tls13_set_traffic_keyEP6ssl_st22ssl_encryption_level_t20evp_aead_direction_tPK14ssl_session_stNS_4SpanIKhEE'/>
