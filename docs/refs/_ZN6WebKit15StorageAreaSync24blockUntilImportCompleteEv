<dec f='webkit/Source/WebKitLegacy/Storage/StorageAreaSync.h' l='49' type='void WebKit::StorageAreaSync::blockUntilImportComplete()'/>
<use f='webkit/Source/WebKitLegacy/Storage/StorageAreaImpl.cpp' l='227' u='c' c='_ZNK6WebKit15StorageAreaImpl24blockUntilImportCompleteEv'/>
<use f='webkit/Source/WebKitLegacy/Storage/StorageAreaSync.cpp' l='92' u='c' c='_ZN6WebKit15StorageAreaSync17scheduleFinalSyncEv'/>
<def f='webkit/Source/WebKitLegacy/Storage/StorageAreaSync.cpp' l='369' ll='381' type='void WebKit::StorageAreaSync::blockUntilImportComplete()'/>
<doc f='webkit/Source/WebKitLegacy/Storage/StorageAreaSync.cpp' l='362'>// FIXME: In the future, we should allow use of StorageAreas while it&apos;s importing (when safe to do so).
// Blocking everything until the import is complete is by far the simplest and safest thing to do, but
// there is certainly room for safe optimization: Key/length will never be able to make use of such an
// optimization (since the order of iteration can change as items are being added). Get can return any
// item currently in the map. Get/remove can work whether or not it&apos;s in the map, but we&apos;ll need a list
// of items the import should not overwrite. Clear can also work, but it&apos;ll need to kill the import
// job first.</doc>
