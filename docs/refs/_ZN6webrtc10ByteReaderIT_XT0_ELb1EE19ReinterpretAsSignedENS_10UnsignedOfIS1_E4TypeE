<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/byte_io.h' l='113' u='c' c='_ZN6webrtc10ByteReaderIT_XT0_ELb1EE13ReadBigEndianEPKh'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/byte_io.h' l='120' u='c' c='_ZN6webrtc10ByteReaderIT_XT0_ELb1EE16ReadLittleEndianEPKh'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/byte_io.h' l='128' ll='146' type='static T webrtc::ByteReader&lt;type-parameter-0-0, B, true&gt;::ReinterpretAsSigned(webrtc::ByteReader&lt;type-parameter-0-0, B, true&gt;::U unsigned_val)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/byte_io.h' l='124'>// As a hack to avoid implementation-specific or undefined behavior when
  // bit-shifting or casting signed integers, read as a signed equivalent
  // instead and convert to signed. This is safe since we have asserted that
  // two&apos;s complement for is used.</doc>
