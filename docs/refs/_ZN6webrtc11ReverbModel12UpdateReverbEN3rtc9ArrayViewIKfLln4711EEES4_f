<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/aec3/reverb_model.h' l='47' type='void webrtc::ReverbModel::UpdateReverb(rtc::ArrayView&lt;const float&gt; power_spectrum, rtc::ArrayView&lt;const float&gt; power_spectrum_scaling, float reverb_decay)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/aec3/reverb_model.h' l='46'>// Update the reverb based on new data.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/aec3/residual_echo_estimator.cc' l='328' u='c' c='_ZN6webrtc21ResidualEchoEstimator9AddReverbENS0_10ReverbTypeERKNS_8AecStateERKNS_12RenderBufferEN3rtc9ArrayViewINSt3__15arrayIfLm65EEELln4711EEE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/aec3/reverb_model.cc' l='45' ll='57' type='void webrtc::ReverbModel::UpdateReverb(rtc::ArrayView&lt;const float&gt; power_spectrum, rtc::ArrayView&lt;const float&gt; power_spectrum_scaling, float reverb_decay)'/>
