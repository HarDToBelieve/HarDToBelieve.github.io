<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/audio_codecs/audio_decoder.h' l='105' type='int webrtc::AudioDecoder::Decode(const uint8_t * encoded, size_t encoded_len, int sample_rate_hz, size_t max_decoded_bytes, int16_t * decoded, webrtc::AudioDecoder::SpeechType * speech_type)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/audio_codecs/audio_decoder.h' l='94'>// TODO(bugs.webrtc.org/10098): The Decode and DecodeRedundant methods are
  // obsolete; callers should call ParsePayload instead. For now, subclasses
  // must still implement DecodeInternal.

  // Decodes |encode_len| bytes from |encoded| and writes the result in
  // |decoded|. The maximum bytes allowed to be written into |decoded| is
  // |max_decoded_bytes|. Returns the total number of samples across all
  // channels. If the decoder produced comfort noise, |speech_type|
  // is set to kComfortNoise, otherwise it is kSpeech. The desired output
  // sample rate is provided in |sample_rate_hz|, which must be valid for the
  // codec at hand.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/audio_codecs/audio_decoder.cc' l='40' u='c' c='_ZNK6webrtc12_GLOBAL__N_120OldStyleEncodedFrame6DecodeEN3rtc9ArrayViewIsLln4711EEE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/audio_codecs/audio_decoder.cc' l='83' ll='98' type='int webrtc::AudioDecoder::Decode(const uint8_t * encoded, size_t encoded_len, int sample_rate_hz, size_t max_decoded_bytes, int16_t * decoded, webrtc::AudioDecoder::SpeechType * speech_type)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/legacy_encoded_audio_frame.cc' l='35' u='c' c='_ZNK6webrtc23LegacyEncodedAudioFrame6DecodeEN3rtc9ArrayViewIsLln4711EEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/opus/audio_coder_opus_common.h' l='65' u='c' c='_ZNK6webrtc9OpusFrame6DecodeEN3rtc9ArrayViewIsLln4711EEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/neteq_impl.cc' l='1501' u='c' c='_ZN6webrtc9NetEqImpl9DecodeCngEPNS_12AudioDecoderEPiPNS1_10SpeechTypeE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/tools/fake_decode_from_file.cc' l='35' u='c' c='_ZNK6webrtc4test12_GLOBAL__N_116FakeEncodedFrame6DecodeEN3rtc9ArrayViewIsLln4711EEE'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/audio_codecs/audio_decoder.h' l='105' type='int webrtc::AudioDecoder::Decode(const uint8_t * encoded, size_t encoded_len, int sample_rate_hz, size_t max_decoded_bytes, int16_t * decoded, webrtc::AudioDecoder::SpeechType * speech_type)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/audio_codecs/audio_decoder.h' l='94'>// TODO(bugs.webrtc.org/10098): The Decode and DecodeRedundant methods are
  // obsolete; callers should call ParsePayload instead. For now, subclasses
  // must still implement DecodeInternal.

  // Decodes |encode_len| bytes from |encoded| and writes the result in
  // |decoded|. The maximum bytes allowed to be written into |decoded| is
  // |max_decoded_bytes|. Returns the total number of samples across all
  // channels. If the decoder produced comfort noise, |speech_type|
  // is set to kComfortNoise, otherwise it is kSpeech. The desired output
  // sample rate is provided in |sample_rate_hz|, which must be valid for the
  // codec at hand.</doc>
