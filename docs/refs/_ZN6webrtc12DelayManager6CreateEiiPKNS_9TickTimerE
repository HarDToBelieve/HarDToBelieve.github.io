<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/delay_manager.h' l='41' type='static std::unique_ptr&lt;DelayManager&gt; webrtc::DelayManager::Create(int max_packets_in_buffer, int base_minimum_delay_ms, const webrtc::TickTimer * tick_timer)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/delay_manager.h' l='36'>// Create a DelayManager object. Notify the delay manager that the packet
  // buffer can hold no more than |max_packets_in_buffer| packets (i.e., this
  // is the number of packet slots in the buffer) and that the target delay
  // should be greater than or equal to |base_minimum_delay_ms|. Supply a
  // PeakDetector object to the DelayManager.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/decision_logic.cc' l='38' u='c' c='_ZN6webrtc13DecisionLogicC1ENS_15NetEqController6ConfigE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/delay_manager.cc' l='124' ll='137' type='static std::unique_ptr&lt;DelayManager&gt; webrtc::DelayManager::Create(int max_packets_in_buffer, int base_minimum_delay_ms, const webrtc::TickTimer * tick_timer)'/>
