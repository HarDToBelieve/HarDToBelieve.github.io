<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/srtp_transport.h' l='64' type='bool webrtc::SrtpTransport::SetRtpParams(int send_cs, const uint8_t * send_key, int send_key_len, const std::vector&lt;int&gt; &amp; send_extension_ids, int recv_cs, const uint8_t * recv_key, int recv_key_len, const std::vector&lt;int&gt; &amp; recv_extension_ids)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/srtp_transport.h' l='61'>// Create new send/recv sessions and set the negotiated crypto keys for RTP
  // packet encryption. The keys can either come from SDES negotiation or DTLS
  // handshake.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/dtls_srtp_transport.cc' l='165' u='c' c='_ZN6webrtc17DtlsSrtpTransport16SetupRtpDtlsSrtpEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/jsep_transport.cc' l='510' u='c' c='_ZN7cricket13JsepTransport7SetSdesERKNSt3__16vectorINS_12CryptoParamsENS1_9allocatorIS3_EEEERKNS2_IiNS4_IiEEEEN6webrtc7SdpTypeENS_13ContentSourceE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/srtp_transport.cc' l='273' ll='315' type='bool webrtc::SrtpTransport::SetRtpParams(int send_cs, const uint8_t * send_key, int send_key_len, const std::vector&lt;int&gt; &amp; send_extension_ids, int recv_cs, const uint8_t * recv_key, int recv_key_len, const std::vector&lt;int&gt; &amp; recv_extension_ids)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/srtp_transport.cc' l='484' u='c' c='_ZN6webrtc13SrtpTransport17MaybeSetKeyParamsEv'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/pc/srtp_transport.h' l='64' type='bool webrtc::SrtpTransport::SetRtpParams(int send_cs, const uint8_t * send_key, int send_key_len, const std::vector&lt;int&gt; &amp; send_extension_ids, int recv_cs, const uint8_t * recv_key, int recv_key_len, const std::vector&lt;int&gt; &amp; recv_extension_ids)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/pc/srtp_transport.h' l='61'>// Create new send/recv sessions and set the negotiated crypto keys for RTP
  // packet encryption. The keys can either come from SDES negotiation or DTLS
  // handshake.</doc>
