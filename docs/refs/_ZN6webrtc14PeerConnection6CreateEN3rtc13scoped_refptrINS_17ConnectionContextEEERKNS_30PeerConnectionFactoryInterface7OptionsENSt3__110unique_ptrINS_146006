<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/peer_connection.h' l='128' type='static RTCErrorOr&lt;rtc::scoped_refptr&lt;PeerConnection&gt;&gt; webrtc::PeerConnection::Create(rtc::scoped_refptr&lt;ConnectionContext&gt; context, const PeerConnectionFactoryInterface::Options &amp; options, std::unique_ptr&lt;RtcEventLog&gt; event_log, std::unique_ptr&lt;Call&gt; call, const PeerConnectionInterface::RTCConfiguration &amp; configuration, webrtc::PeerConnectionDependencies dependencies)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/peer_connection.h' l='122'>// Creates a PeerConnection and initializes it with the given values.
  // If the initialization fails, the function releases the PeerConnection
  // and returns nullptr.
  //
  // Note that the function takes ownership of dependencies, and will
  // either use them or release them, whether it succeeds or fails.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/peer_connection.cc' l='408' ll='477' type='static RTCErrorOr&lt;rtc::scoped_refptr&lt;PeerConnection&gt;&gt; webrtc::PeerConnection::Create(rtc::scoped_refptr&lt;ConnectionContext&gt; context, const PeerConnectionFactoryInterface::Options &amp; options, std::unique_ptr&lt;RtcEventLog&gt; event_log, std::unique_ptr&lt;Call&gt; call, const PeerConnectionInterface::RTCConfiguration &amp; configuration, webrtc::PeerConnectionDependencies dependencies)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/peer_connection_factory.cc' l='236' u='c' c='_ZN6webrtc21PeerConnectionFactory27CreatePeerConnectionOrErrorERKNS_23PeerConnectionInterface16RTCConfigurationENS_26PeerConnectionDependenciesE'/>
