<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/include/flexfec_receiver.h' l='51' type='std::unique_ptr&lt;ForwardErrorCorrection::ReceivedPacket&gt; webrtc::FlexfecReceiver::AddReceivedPacket(const webrtc::RtpPacketReceived &amp; packet)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/flexfec_receiver.cc' l='72' u='c' c='_ZN6webrtc15FlexfecReceiver11OnRtpPacketERKNS_17RtpPacketReceivedE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/flexfec_receiver.cc' l='86' ll='134' type='std::unique_ptr&lt;ForwardErrorCorrection::ReceivedPacket&gt; webrtc::FlexfecReceiver::AddReceivedPacket(const webrtc::RtpPacketReceived &amp; packet)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/flexfec_receiver.cc' l='84'>// TODO(eladalon): Consider using packet.recovered() to avoid processing
// recovered packets here.</doc>
