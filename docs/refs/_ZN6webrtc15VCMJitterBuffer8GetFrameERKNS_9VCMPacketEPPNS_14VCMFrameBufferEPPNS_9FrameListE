<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/jitter_buffer.h' l='143' type='webrtc::VCMFrameBufferEnum webrtc::VCMJitterBuffer::GetFrame(const webrtc::VCMPacket &amp; packet, webrtc::VCMFrameBuffer ** frame, webrtc::FrameList ** frame_list)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/jitter_buffer.cc' l='316' ll='346' type='webrtc::VCMFrameBufferEnum webrtc::VCMJitterBuffer::GetFrame(const webrtc::VCMPacket &amp; packet, webrtc::VCMFrameBuffer ** frame, webrtc::FrameList ** frame_list)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/jitter_buffer.cc' l='392' u='c' c='_ZN6webrtc15VCMJitterBuffer12InsertPacketERKNS_9VCMPacketEPb'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/jitter_buffer.cc' l='315'>// Gets frame to use for this timestamp. If no match, get empty frame.</doc>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/jitter_buffer.h' l='139'>// Gets the frame assigned to the timestamp of the packet. May recycle
  // existing frames if no free frames are available. Returns an error code if
  // failing, or kNoError on success. |frame_list| contains which list the
  // packet was in, or NULL if it was not in a FrameList (a new frame).</doc>
