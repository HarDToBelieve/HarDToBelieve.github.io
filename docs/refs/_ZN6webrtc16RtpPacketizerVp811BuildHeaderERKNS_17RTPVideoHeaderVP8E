<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_format_vp8.h' l='63' type='static webrtc::RtpPacketizerVp8::RawHeader webrtc::RtpPacketizerVp8::BuildHeader(const webrtc::RTPVideoHeaderVP8 &amp; header)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_format_vp8.cc' l='64' u='c' c='_ZN6webrtc16RtpPacketizerVp8C1EN3rtc9ArrayViewIKhLln4711EEENS_13RtpPacketizer17PayloadSizeLimitsERKNS_17RTPVideoHeaderVP8E'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_format_vp8.cc' l='111' ll='164' type='static RtpPacketizerVp8::RawHeader webrtc::RtpPacketizerVp8::BuildHeader(const webrtc::RTPVideoHeaderVP8 &amp; header)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_format_vp8.cc' l='97'>// Write the VP8 payload descriptor.
//       0
//       0 1 2 3 4 5 6 7 8
//      +-+-+-+-+-+-+-+-+-+
//      |X| |N|S| PART_ID |
//      +-+-+-+-+-+-+-+-+-+
// X:   |I|L|T|K|         | (mandatory if any of the below are used)
//      +-+-+-+-+-+-+-+-+-+
// I:   |PictureID   (16b)| (optional)
//      +-+-+-+-+-+-+-+-+-+
// L:   |   TL0PIC_IDX    | (optional)
//      +-+-+-+-+-+-+-+-+-+
// T/K: |TID:Y|  KEYIDX   | (optional)
//      +-+-+-+-+-+-+-+-+-+</doc>
