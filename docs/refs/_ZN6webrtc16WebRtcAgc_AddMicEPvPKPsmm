<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/agc/legacy/gain_control.h' l='82' type='int webrtc::WebRtcAgc_AddMic(void * agcInst, int16_t *const * inMic, size_t num_bands, size_t samples)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/agc/legacy/analog_agc.cc' l='137' ll='251' type='int webrtc::WebRtcAgc_AddMic(void * state, int16_t *const * in_mic, size_t num_bands, size_t samples)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/agc/legacy/analog_agc.cc' l='398' u='c' c='_ZN6webrtc20WebRtcAgc_VirtualMicEPvPKPsmmiPi'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/agc/legacy/gain_control.h' l='62'>/*
 * This function processes a 10 ms frame of microphone speech to determine
 * if there is active speech. The length of the input speech vector must be
 * given in samples (80 when FS=8000, and 160 when FS=16000, FS=32000 or
 * FS=48000). For very low input levels, the input signal is increased in level
 * by multiplying and overwriting the samples in inMic[].
 *
 * This function should be called before any further processing of the
 * near-end microphone signal.
 *
 * Input:
 *      - agcInst           : AGC instance.
 *      - inMic             : Microphone input speech vector for each band
 *      - num_bands         : Number of bands in input vector
 *      - samples           : Number of samples in input vector
 *
 * Return value:
 *                          :  0 - Normal operation.
 *                          : -1 - Error
 */</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/gain_control_impl.cc' l='167' u='c' c='_ZN6webrtc15GainControlImpl19AnalyzeCaptureAudioERKNS_11AudioBufferE'/>
