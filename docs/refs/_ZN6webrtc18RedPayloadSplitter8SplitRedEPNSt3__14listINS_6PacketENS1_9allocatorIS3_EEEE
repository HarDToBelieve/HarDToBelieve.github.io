<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/red_payload_splitter.h' l='39' type='bool webrtc::RedPayloadSplitter::SplitRed(webrtc::PacketList * packet_list)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/neteq_impl.cc' l='631' u='c' c='_ZN6webrtc9NetEqImpl20InsertPacketInternalERKNS_9RTPHeaderEN3rtc9ArrayViewIKhLln4711EEE'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/red_payload_splitter.h' l='33'>// Splits each packet in |packet_list| into its separate RED payloads. Each
  // RED payload is packetized into a Packet. The original elements in
  // |packet_list| are properly deleted, and replaced by the new packets.
  // Note that all packets in |packet_list| must be RED payloads, i.e., have
  // RED headers according to RFC 2198 at the very beginning of the payload.
  // Returns kOK or an error.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/red_payload_splitter.cc' l='36' ll='159' type='bool webrtc::RedPayloadSplitter::SplitRed(webrtc::PacketList * packet_list)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/red_payload_splitter.cc' l='29'>// The method loops through a list of packets {A, B, C, ...}. Each packet is
// split into its corresponding RED payloads, {A1, A2, ...}, which is
// temporarily held in the list |new_packets|.
// When the first packet in |packet_list| has been processed, the original
// packet is replaced by the new ones in |new_packets|, so that |packet_list|
// becomes: {A1, A2, ..., B, C, ...}. The method then continues with B, and C,
// until all the original packets have been replaced by their split payloads.</doc>
