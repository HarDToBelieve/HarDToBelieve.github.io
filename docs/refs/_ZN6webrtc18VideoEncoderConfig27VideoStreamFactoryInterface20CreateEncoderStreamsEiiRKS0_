<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder_config.h' l='133' type='std::vector&lt;VideoStream&gt; webrtc::VideoEncoderConfig::VideoStreamFactoryInterface::CreateEncoderStreams(int width, int height, const webrtc::VideoEncoderConfig &amp; encoder_config)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder_config.h' l='129'>// An implementation should return a std::vector&lt;VideoStream&gt; with the
    // wanted VideoStream settings for the given video resolution.
    // The size of the vector may not be larger than
    // |encoder_config.number_of_streams|.</doc>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/engine/webrtc_video_engine.cc' l='3495' c='_ZN7cricket20EncoderStreamFactory20CreateEncoderStreamsEiiRKN6webrtc18VideoEncoderConfigE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/video_stream_encoder.cc' l='880' u='c' c='_ZN6webrtc18VideoStreamEncoder18ReconfigureEncoderEv'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/video_codecs/video_encoder_config.h' l='133' type='std::vector&lt;VideoStream&gt; webrtc::VideoEncoderConfig::VideoStreamFactoryInterface::CreateEncoderStreams(int width, int height, const webrtc::VideoEncoderConfig &amp; encoder_config)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/video_codecs/video_encoder_config.h' l='129'>// An implementation should return a std::vector&lt;VideoStream&gt; with the
    // wanted VideoStream settings for the given video resolution.
    // The size of the vector may not be larger than
    // |encoder_config.number_of_streams|.</doc>
