<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/audio_codecs/audio_decoder_factory.h' l='46' type='std::unique_ptr&lt;AudioDecoder&gt; webrtc::AudioDecoderFactory::MakeAudioDecoder(const webrtc::SdpAudioFormat &amp; format, absl::optional&lt;AudioCodecPairId&gt; codec_pair_id)'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/audio_codecs/audio_decoder_factory_template.h' l='78' c='_ZN6webrtc35audio_decoder_factory_template_impl20AudioDecoderFactoryT16MakeAudioDecoderERKNS_14SdpAudioFormatENSt3__18optionalINS_16AudioCodecPairIdEEE'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/audio_codecs/audio_decoder_factory.h' l='32'>// Create a new decoder instance. The `codec_pair_id` argument is used to link
  // encoders and decoders that talk to the same remote entity: if a
  // AudioEncoderFactory::MakeAudioEncoder() and a
  // AudioDecoderFactory::MakeAudioDecoder() call receive non-null IDs that
  // compare equal, the factory implementations may assume that the encoder and
  // decoder form a pair. (The intended use case for this is to set up
  // communication between the AudioEncoder and AudioDecoder instances, which is
  // needed for some codecs with built-in bandwidth adaptation.)
  //
  // Returns null if the format isn&apos;t supported.
  //
  // Note: Implementations need to be robust against combinations other than
  // one encoder, one decoder getting the same ID; such decoders must still
  // work.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/decoder_database.cc' l='68' u='c' c='_ZNK6webrtc15DecoderDatabase11DecoderInfo10GetDecoderEv'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/audio_codecs/audio_decoder_factory.h' l='46' type='std::unique_ptr&lt;AudioDecoder&gt; webrtc::AudioDecoderFactory::MakeAudioDecoder(const webrtc::SdpAudioFormat &amp; format, absl::optional&lt;AudioCodecPairId&gt; codec_pair_id)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/audio_codecs/audio_decoder_factory.h' l='32'>// Create a new decoder instance. The `codec_pair_id` argument is used to link
  // encoders and decoders that talk to the same remote entity: if a
  // AudioEncoderFactory::MakeAudioEncoder() and a
  // AudioDecoderFactory::MakeAudioDecoder() call receive non-null IDs that
  // compare equal, the factory implementations may assume that the encoder and
  // decoder form a pair. (The intended use case for this is to set up
  // communication between the AudioEncoder and AudioDecoder instances, which is
  // needed for some codecs with built-in bandwidth adaptation.)
  //
  // Returns null if the format isn&apos;t supported.
  //
  // Note: Implementations need to be robust against combinations other than
  // one encoder, one decoder getting the same ID; such decoders must still
  // work.</doc>
