<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/audio_codecs/audio_encoder_factory.h' l='54' type='std::unique_ptr&lt;AudioEncoder&gt; webrtc::AudioEncoderFactory::MakeAudioEncoder(int payload_type, const webrtc::SdpAudioFormat &amp; format, absl::optional&lt;AudioCodecPairId&gt; codec_pair_id)'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/audio_codecs/audio_encoder_factory_template.h' l='91' c='_ZN6webrtc35audio_encoder_factory_template_impl20AudioEncoderFactoryT16MakeAudioEncoderEiRKNS_14SdpAudioFormatENSt3__18optionalINS_16AudioCodecPairIdEEE'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/audio_codecs/audio_encoder_factory.h' l='37'>// Creates an AudioEncoder for the specified format. The encoder will tags its
  // payloads with the specified payload type. The `codec_pair_id` argument is
  // used to link encoders and decoders that talk to the same remote entity: if
  // a AudioEncoderFactory::MakeAudioEncoder() and a
  // AudioDecoderFactory::MakeAudioDecoder() call receive non-null IDs that
  // compare equal, the factory implementations may assume that the encoder and
  // decoder form a pair. (The intended use case for this is to set up
  // communication between the AudioEncoder and AudioDecoder instances, which is
  // needed for some codecs with built-in bandwidth adaptation.)
  //
  // Returns null if the format isn&apos;t supported.
  //
  // Note: Implementations need to be robust against combinations other than
  // one encoder, one decoder getting the same ID; such encoders must still
  // work.
  //
  // TODO(ossu): Try to avoid audio encoders having to know their payload type.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/audio/audio_send_stream.cc' l='617' u='c' c='_ZN6webrtc8internal15AudioSendStream14SetupSendCodecERKNS_15AudioSendStream6ConfigE'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/audio_codecs/audio_encoder_factory.h' l='54' type='std::unique_ptr&lt;AudioEncoder&gt; webrtc::AudioEncoderFactory::MakeAudioEncoder(int payload_type, const webrtc::SdpAudioFormat &amp; format, absl::optional&lt;AudioCodecPairId&gt; codec_pair_id)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/audio_codecs/audio_encoder_factory.h' l='37'>// Creates an AudioEncoder for the specified format. The encoder will tags its
  // payloads with the specified payload type. The `codec_pair_id` argument is
  // used to link encoders and decoders that talk to the same remote entity: if
  // a AudioEncoderFactory::MakeAudioEncoder() and a
  // AudioDecoderFactory::MakeAudioDecoder() call receive non-null IDs that
  // compare equal, the factory implementations may assume that the encoder and
  // decoder form a pair. (The intended use case for this is to set up
  // communication between the AudioEncoder and AudioDecoder instances, which is
  // needed for some codecs with built-in bandwidth adaptation.)
  //
  // Returns null if the format isn&apos;t supported.
  //
  // Note: Implementations need to be robust against combinations other than
  // one encoder, one decoder getting the same ID; such encoders must still
  // work.
  //
  // TODO(ossu): Try to avoid audio encoders having to know their payload type.</doc>
