<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/three_band_filter_bank.h' l='60' type='void webrtc::ThreeBandFilterBank::Analysis(rtc::ArrayView&lt;const float, kFullBandSize&gt; in, rtc::ArrayView&lt;const rtc::ArrayView&lt;float&gt;, kNumBands&gt; out)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/three_band_filter_bank.h' l='58'>// Splits |in| of size kFullBandSize into 3 downsampled frequency bands in
  // |out|, each of size 160.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/splitting_filter.cc' l='112' u='c' c='_ZN6webrtc15SplittingFilter18ThreeBandsAnalysisEPKNS_13ChannelBufferIfEEPS2_'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/three_band_filter_bank.cc' l='172' ll='220' type='void webrtc::ThreeBandFilterBank::Analysis(rtc::ArrayView&lt;const float, kFullBandSize&gt; in, rtc::ArrayView&lt;const rtc::ArrayView&lt;float&gt;, ThreeBandFilterBank::kNumBands&gt; out)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/three_band_filter_bank.cc' l='166'>// The analysis can be separated in these steps:
//   1. Serial to parallel downsampling by a factor of |kNumBands|.
//   2. Filtering of |kSparsity| different delayed signals with polyphase
//      decomposition of the low-pass prototype filter and upsampled by a factor
//      of |kSparsity|.
//   3. Modulating with cosines and accumulating to get the desired band.</doc>
