<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/three_band_filter_bank.h' l='65' type='void webrtc::ThreeBandFilterBank::Synthesis(rtc::ArrayView&lt;const rtc::ArrayView&lt;float&gt;, kNumBands&gt; in, rtc::ArrayView&lt;float, kFullBandSize&gt; out)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/three_band_filter_bank.h' l='63'>// Merges the 3 downsampled frequency bands in |in|, each of size 160, into
  // |out|, which is of size kFullBandSize.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/splitting_filter.cc' l='134' u='c' c='_ZN6webrtc15SplittingFilter19ThreeBandsSynthesisEPKNS_13ChannelBufferIfEEPS2_'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/three_band_filter_bank.cc' l='228' ll='274' type='void webrtc::ThreeBandFilterBank::Synthesis(rtc::ArrayView&lt;const rtc::ArrayView&lt;float&gt;, ThreeBandFilterBank::kNumBands&gt; in, rtc::ArrayView&lt;float, kFullBandSize&gt; out)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/three_band_filter_bank.cc' l='222'>// The synthesis can be separated in these steps:
//   1. Modulating with cosines.
//   2. Filtering each one with a polyphase decomposition of the low-pass
//      prototype filter upsampled by a factor of |kSparsity| and accumulating
//      |kSparsity| signals with different delays.
//   3. Parallel to serial upsampling by a factor of |kNumBands|.</doc>
