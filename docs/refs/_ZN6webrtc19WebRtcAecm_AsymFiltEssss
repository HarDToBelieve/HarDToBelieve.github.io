<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/aecm/aecm_core.cc' l='598' ll='615' type='int16_t webrtc::WebRtcAecm_AsymFilt(const int16_t filtOld, const int16_t inVal, const int16_t stepSizePos, const int16_t stepSizeNeg)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/aecm/aecm_core.cc' l='710' u='c' c='_ZN6webrtc23WebRtcAecm_CalcEnergiesEPNS_8AecmCoreEPKtsjPi'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/aecm/aecm_core.cc' l='713' u='c' c='_ZN6webrtc23WebRtcAecm_CalcEnergiesEPNS_8AecmCoreEPKtsjPi'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/aecm/aecm_core.cc' l='584'>// WebRtcAecm_AsymFilt(...)
//
// Performs asymmetric filtering.
//
// Inputs:
//      - filtOld       : Previous filtered value.
//      - inVal         : New input value.
//      - stepSizePos   : Step size when we have a positive contribution.
//      - stepSizeNeg   : Step size when we have a negative contribution.
//
// Output:
//
// Return: - Filtered value.
//</doc>
