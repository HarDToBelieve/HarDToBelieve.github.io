<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/remote_bitrate_estimator/remote_estimator_proxy.h' l='98' type='std::unique_ptr&lt;rtcp::TransportFeedback&gt; webrtc::RemoteEstimatorProxy::MaybeBuildFeedbackPacket(bool include_timestamps, int64_t begin_sequence_number_inclusive, int64_t end_sequence_number_exclusive, bool is_periodic_update)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/remote_bitrate_estimator/remote_estimator_proxy.h' l='86'>// Returns a Transport Feedback packet with information about as many packets
  // that has been received between [`begin_sequence_number_incl`,
  // `end_sequence_number_excl`) that can fit in it. If `is_periodic_update`,
  // this represents sending a periodic feedback message, which will make it
  // update the `periodic_window_start_seq_` variable with the first packet that
  // was not included in the feedback packet, so that the next update can
  // continue from that sequence number.
  //
  // If no incoming packets were added, nullptr is returned.
  //
  // `include_timestamps` decide if the returned TransportFeedback should
  // include timestamps.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/remote_bitrate_estimator/remote_estimator_proxy.cc' l='201' u='c' c='_ZN6webrtc20RemoteEstimatorProxy21SendPeriodicFeedbacksEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/remote_bitrate_estimator/remote_estimator_proxy.cc' l='235' u='c' c='_ZN6webrtc20RemoteEstimatorProxy21SendFeedbackOnRequestExRKNS_15FeedbackRequestE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/remote_bitrate_estimator/remote_estimator_proxy.cc' l='251' ll='305' type='std::unique_ptr&lt;rtcp::TransportFeedback&gt; webrtc::RemoteEstimatorProxy::MaybeBuildFeedbackPacket(bool include_timestamps, int64_t begin_sequence_number_inclusive, int64_t end_sequence_number_exclusive, bool is_periodic_update)'/>
