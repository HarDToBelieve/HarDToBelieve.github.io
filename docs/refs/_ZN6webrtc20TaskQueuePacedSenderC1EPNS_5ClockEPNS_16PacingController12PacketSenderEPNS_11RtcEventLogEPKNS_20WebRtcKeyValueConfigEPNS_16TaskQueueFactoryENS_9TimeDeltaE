<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/pacing/task_queue_paced_sender.h' l='47' type='void webrtc::TaskQueuePacedSender::TaskQueuePacedSender(webrtc::Clock * clock, PacingController::PacketSender * packet_sender, webrtc::RtcEventLog * event_log, const webrtc::WebRtcKeyValueConfig * field_trials, webrtc::TaskQueueFactory * task_queue_factory, webrtc::TimeDelta hold_back_window = PacingController::kMinSleepTime)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/pacing/task_queue_paced_sender.h' l='42'>// The |hold_back_window| parameter sets a lower bound on time to sleep if
  // there is currently a pacer queue and packets can&apos;t immediately be
  // processed. Increasing this reduces thread wakeups at the expense of higher
  // latency.
  // TODO(bugs.webrtc.org/10809): Remove default value for hold_back_window.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/call/rtp_transport_controller_send.cc' l='102' u='c' c='_ZN6webrtc26RtpTransportControllerSendC1EPNS_5ClockEPNS_11RtcEventLogEPNS_37NetworkStatePredictorFactoryInterfaceEPNS_33NetworkControllerFactoryInterf6760082'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/pacing/task_queue_paced_sender.cc' l='33' ll='53' type='void webrtc::TaskQueuePacedSender::TaskQueuePacedSender(webrtc::Clock * clock, PacingController::PacketSender * packet_sender, webrtc::RtcEventLog * event_log, const webrtc::WebRtcKeyValueConfig * field_trials, webrtc::TaskQueueFactory * task_queue_factory, webrtc::TimeDelta hold_back_window = PacingController::kMinSleepTime)'/>
