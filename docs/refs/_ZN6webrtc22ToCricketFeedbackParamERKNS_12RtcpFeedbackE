<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/rtp_parameters_conversion.h' l='47' type='RTCErrorOr&lt;cricket::FeedbackParam&gt; webrtc::ToCricketFeedbackParam(const webrtc::RtcpFeedback &amp; feedback)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/rtp_parameters_conversion.h' l='26'>// NOTE: Some functions are templated for convenience, such that template-based
// code dealing with AudioContentDescription and VideoContentDescription can
// use this easily. Such methods are usable with cricket::AudioCodec and
// cricket::VideoCodec.

//***************************************************************************
// Functions for converting from new webrtc:: structures to old cricket::
// structures.
//
// As the return values imply, all of these functions do validation of the
// parameters and return an error if they&apos;re invalid. It&apos;s expected that any
// default values (such as video clock rate of 90000) have been filled by the
// time the webrtc:: structure is being converted to the cricket:: one.
//
// These are expected to be used when parameters are passed into an RtpSender
// or RtpReceiver, and need to be validated and converted so they can be
// applied to the media engine level.
//***************************************************************************

// Returns error on invalid input. Certain message types are only valid for
// certain feedback types.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/rtp_parameters_conversion.cc' l='29' ll='80' type='RTCErrorOr&lt;cricket::FeedbackParam&gt; webrtc::ToCricketFeedbackParam(const webrtc::RtcpFeedback &amp; feedback)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/rtp_parameters_conversion.cc' l='160' u='c' c='_ZN6webrtc14ToCricketCodecERKNS_18RtpCodecParametersE'/>
