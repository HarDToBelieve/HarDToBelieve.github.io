<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/aec3/refined_filter_update_gain.h' l='48' type='void webrtc::RefinedFilterUpdateGain::Compute(const std::array&lt;float, kFftLengthBy2Plus1&gt; &amp; render_power, const webrtc::RenderSignalAnalyzer &amp; render_signal_analyzer, const webrtc::SubtractorOutput &amp; subtractor_output, rtc::ArrayView&lt;const float&gt; erl, size_t size_partitions, bool saturated_capture_signal, bool disallow_leakage_diverged, webrtc::FftData * gain_fft)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/aec3/refined_filter_update_gain.h' l='47'>// Computes the gain.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/aec3/refined_filter_update_gain.cc' l='69' ll='140' type='void webrtc::RefinedFilterUpdateGain::Compute(const std::array&lt;float, kFftLengthBy2Plus1&gt; &amp; render_power, const webrtc::RenderSignalAnalyzer &amp; render_signal_analyzer, const webrtc::SubtractorOutput &amp; subtractor_output, rtc::ArrayView&lt;const float&gt; erl, size_t size_partitions, bool saturated_capture_signal, bool disallow_leakage_diverged, webrtc::FftData * gain_fft)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/aec3/subtractor.cc' l='248' u='c' c='_ZN6webrtc10Subtractor7ProcessERKNS_12RenderBufferERKNSt3__16vectorINS5_IfNS4_9allocatorIfEEEENS6_IS8_EEEERKNS_20RenderSignalAnalyzerERKNS_8AecStateEN6768899'/>
