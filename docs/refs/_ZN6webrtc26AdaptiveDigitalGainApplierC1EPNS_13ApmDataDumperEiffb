<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/agc2/adaptive_digital_gain_applier.h' l='43' type='void webrtc::AdaptiveDigitalGainApplier::AdaptiveDigitalGainApplier(webrtc::ApmDataDumper * apm_data_dumper, int adjacent_speech_frames_threshold, float max_gain_change_db_per_second, float max_output_noise_level_dbfs, bool dry_run)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/agc2/adaptive_agc.cc' l='62' u='c' c='_ZN6webrtc11AdaptiveAgcC1EPNS_13ApmDataDumperERKNS_15AudioProcessing6Config15GainController215AdaptiveDigitalE'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/agc2/adaptive_digital_gain_applier.h' l='38'>// Ctor. `adjacent_speech_frames_threshold` indicates how many adjacent speech
  // frames must be observed in order to consider the sequence as speech.
  // `max_gain_change_db_per_second` limits the adaptation speed (uniformly
  // operated across frames). `max_output_noise_level_dbfs` limits the output
  // noise level. If `dry_run` is true, `Process()` will not modify the audio.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/agc2/adaptive_digital_gain_applier.cc' l='111' ll='134' type='void webrtc::AdaptiveDigitalGainApplier::AdaptiveDigitalGainApplier(webrtc::ApmDataDumper * apm_data_dumper, int adjacent_speech_frames_threshold, float max_gain_change_db_per_second, float max_output_noise_level_dbfs, bool dry_run)'/>
