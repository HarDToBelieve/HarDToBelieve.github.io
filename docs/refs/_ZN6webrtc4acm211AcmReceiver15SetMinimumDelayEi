<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/acm2/acm_receiver.h' l='97' type='int webrtc::acm2::AcmReceiver::SetMinimumDelay(int delay_ms)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/audio/channel_receive.cc' l='510' u='c' c='_ZN6webrtc3voe12_GLOBAL__N_114ChannelReceiveC1EPNS_5ClockEPNS_13ProcessThreadEPNS_12NetEqFactoryEPNS_17AudioDeviceModuleEPNS_9TransportEPNS_11RtcEvent5750727'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/audio/channel_receive.cc' l='892' u='c' c='_ZN6webrtc3voe12_GLOBAL__N_114ChannelReceive22SetMinimumPlayoutDelayEi'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/acm2/acm_receiver.h' l='87'>//
  // Sets a minimum delay for packet buffer. The given delay is maintained,
  // unless channel condition dictates a higher delay.
  //
  // Input:
  //   - delay_ms             : minimum delay in milliseconds.
  //
  // Return value             : 0 if OK.
  //                           &lt;0 if NetEq returned an error.
  //</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/acm2/acm_receiver.cc' l='66' ll='71' type='int webrtc::acm2::AcmReceiver::SetMinimumDelay(int delay_ms)'/>
