<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/tools/input_audio_file.h' l='47' type='static void webrtc::test::InputAudioFile::DuplicateInterleaved(const int16_t * source, size_t samples, size_t channels, int16_t * destination)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/tools/fake_decode_from_file.cc' l='116' u='c' c='_ZN6webrtc4test18FakeDecodeFromFile14DecodeInternalEPKhmiPsPNS_12AudioDecoder10SpeechTypeE'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/tools/input_audio_file.h' l='42'>// Creates a multi-channel signal from a mono signal. Each sample is repeated
  // |channels| times to create an interleaved multi-channel signal where all
  // channels are identical. The output |destination| must have the capacity to
  // hold samples * channels elements. Note that |source| and |destination| can
  // be the same array (i.e., point to the same address).</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/tools/input_audio_file.cc' l='80' ll='92' type='static void webrtc::test::InputAudioFile::DuplicateInterleaved(const int16_t * source, size_t samples, size_t channels, int16_t * destination)'/>
