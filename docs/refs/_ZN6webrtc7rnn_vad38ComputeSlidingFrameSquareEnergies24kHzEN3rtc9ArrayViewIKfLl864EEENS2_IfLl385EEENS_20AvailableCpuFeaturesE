<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/agc2/rnn_vad/pitch_search_internal.h' l='67' type='void webrtc::rnn_vad::ComputeSlidingFrameSquareEnergies24kHz(rtc::ArrayView&lt;const float, kBufSize24kHz&gt; pitch_buffer, rtc::ArrayView&lt;float, kRefineNumLags24kHz&gt; y_energy, webrtc::AvailableCpuFeatures cpu_features)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/agc2/rnn_vad/pitch_search_internal.h' l='30'>// Key concepts and keywords used below in this file.
//
// The pitch estimation relies on a pitch buffer, which is an array-like data
// structured designed as follows:
//
// |....A....|.....B.....|
//
// The part on the left, named `A` contains the oldest samples, whereas `B`
// contains the most recent ones. The size of `A` corresponds to the maximum
// pitch period, that of `B` to the analysis frame size (e.g., 16 ms and 20 ms
// respectively).
//
// Pitch estimation is essentially based on the analysis of two 20 ms frames
// extracted from the pitch buffer. One frame, called `x`, is kept fixed and
// corresponds to `B` - i.e., the most recent 20 ms. The other frame, called
// `y`, is extracted from different parts of the buffer instead.
//
// The offset between `x` and `y` corresponds to a specific pitch period.
// For instance, if `y` is positioned at the beginning of the pitch buffer, then
// the cross-correlation between `x` and `y` can be used as an indication of the
// strength for the maximum pitch.
//
// Such an offset can be encoded in two ways:
// - As a lag, which is the index in the pitch buffer for the first item in `y`
// - As an inverted lag, which is the number of samples from the beginning of
//   `x` and the end of `y`
//
// |----&gt;| lag
// |....A....|.....B.....|
//       |&lt;--| inverted lag
//       |.....y.....| `y` 20 ms frame
//
// The inverted lag has the advantage of being directly proportional to the
// corresponding pitch period.

// Computes the sum of squared samples for every sliding frame `y` in the pitch
// buffer. The indexes of `y_energy` are inverted lags.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/agc2/rnn_vad/pitch_search.cc' l='57' u='c' c='_ZN6webrtc7rnn_vad14PitchEstimator8EstimateEN3rtc9ArrayViewIKfLl864EEE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/agc2/rnn_vad/pitch_search_internal.cc' l='295' ll='313' type='void webrtc::rnn_vad::ComputeSlidingFrameSquareEnergies24kHz(rtc::ArrayView&lt;const float, kBufSize24kHz&gt; pitch_buffer, rtc::ArrayView&lt;float, kRefineNumLags24kHz&gt; y_energy, webrtc::AvailableCpuFeatures cpu_features)'/>
