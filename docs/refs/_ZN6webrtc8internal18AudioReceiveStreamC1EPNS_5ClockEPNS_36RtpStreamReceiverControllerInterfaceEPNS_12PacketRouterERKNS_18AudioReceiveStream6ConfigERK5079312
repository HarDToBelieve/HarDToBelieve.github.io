<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/audio/audio_receive_stream.h' l='55' type='void webrtc::internal::AudioReceiveStream::AudioReceiveStream(webrtc::Clock * clock, webrtc::RtpStreamReceiverControllerInterface * receiver_controller, webrtc::PacketRouter * packet_router, const webrtc::AudioReceiveStream::Config &amp; config, const rtc::scoped_refptr&lt;webrtc::AudioState&gt; &amp; audio_state, webrtc::RtcEventLog * event_log, std::unique_ptr&lt;voe::ChannelReceiveInterface&gt; channel_receive)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/audio/audio_receive_stream.cc' l='100' u='c' c='_ZN6webrtc8internal18AudioReceiveStreamC1EPNS_5ClockEPNS_36RtpStreamReceiverControllerInterfaceEPNS_12PacketRouterEPNS_13ProcessThreadEPNS_12NetEqFact3095013'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/audio/audio_receive_stream.cc' l='113' ll='144' type='void webrtc::internal::AudioReceiveStream::AudioReceiveStream(webrtc::Clock * clock, webrtc::RtpStreamReceiverControllerInterface * receiver_controller, webrtc::PacketRouter * packet_router, const webrtc::AudioReceiveStream::Config &amp; config, const rtc::scoped_refptr&lt;webrtc::AudioState&gt; &amp; audio_state, webrtc::RtcEventLog * event_log, std::unique_ptr&lt;voe::ChannelReceiveInterface&gt; channel_receive)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/audio/audio_receive_stream.h' l='54'>// For unit tests, which need to supply a mock channel receive.</doc>
