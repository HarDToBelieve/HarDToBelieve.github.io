<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_video/libyuv/include/webrtc_libyuv.h' l='105' type='void webrtc::NV12Scale(uint8_t * tmp_buffer, const uint8_t * src_y, int src_stride_y, const uint8_t * src_uv, int src_stride_uv, int src_width, int src_height, uint8_t * dst_y, int dst_stride_y, uint8_t * dst_uv, int dst_stride_uv, int dst_width, int dst_height)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_video/libyuv/webrtc_libyuv.cc' l='320' ll='368' type='void webrtc::NV12Scale(uint8_t * tmp_buffer, const uint8_t * src_y, int src_stride_y, const uint8_t * src_uv, int src_stride_uv, int src_width, int src_height, uint8_t * dst_y, int dst_stride_y, uint8_t * dst_uv, int dst_stride_uv, int dst_width, int dst_height)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_video/libyuv/include/webrtc_libyuv.h' l='100'>// Helper function for scaling NV12 to NV12.
// If the |src_width| and |src_height| matches the |dst_width| and |dst_height|,
// then |tmp_buffer| is not used. In other cases, the minimum size of
// |tmp_buffer| should be:
//   (src_width/2) * (src_height/2) * 2 + (dst_width/2) * (dst_height/2) * 2</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/sdk/objc/components/video_frame_buffer/RTCCVPixelBuffer.mm' l='293' u='c'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/common_video/libyuv/include/webrtc_libyuv.h' l='105' type='void webrtc::NV12Scale(uint8_t * tmp_buffer, const uint8_t * src_y, int src_stride_y, const uint8_t * src_uv, int src_stride_uv, int src_width, int src_height, uint8_t * dst_y, int dst_stride_y, uint8_t * dst_uv, int dst_stride_uv, int dst_width, int dst_height)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/common_video/libyuv/include/webrtc_libyuv.h' l='100'>// Helper function for scaling NV12 to NV12.
// If the |src_width| and |src_height| matches the |dst_width| and |dst_height|,
// then |tmp_buffer| is not used. In other cases, the minimum size of
// |tmp_buffer| should be:
//   (src_width/2) * (src_height/2) * 2 + (dst_width/2) * (dst_height/2) * 2</doc>
