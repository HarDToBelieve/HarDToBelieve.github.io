<dec f='webkit/Source/WebCore/platform/SharedStringHash.h' l='54' type='WebCore::SharedStringHash WebCore::computeVisitedLinkHash(const WTF::URL &amp; base, const WTF::AtomString &amp; attributeURL)'/>
<use f='webkit/Source/WebCore/html/HTMLAnchorElement.h' l='136' u='c' c='_ZNK7WebCore17HTMLAnchorElement15visitedLinkHashEv'/>
<doc f='webkit/Source/WebCore/platform/SharedStringHash.h' l='50'>// Resolves the potentially relative URL &quot;attributeURL&quot; relative to the given
// base URL, and returns the hash of the string that will be used for visited
// link coloring. It will return the special value of 0 if attributeURL does not
// look like a relative URL.</doc>
<dec f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/SharedStringHash.h' l='54' type='WebCore::SharedStringHash WebCore::computeVisitedLinkHash(const WTF::URL &amp; base, const WTF::AtomString &amp; attributeURL)'/>
<doc f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/SharedStringHash.h' l='50'>// Resolves the potentially relative URL &quot;attributeURL&quot; relative to the given
// base URL, and returns the hash of the string that will be used for visited
// link coloring. It will return the special value of 0 if attributeURL does not
// look like a relative URL.</doc>
<def f='webkit/Source/WebCore/platform/SharedStringHash.cpp' l='283' ll='305' type='WebCore::SharedStringHash WebCore::computeVisitedLinkHash(const WTF::URL &amp; base, const WTF::AtomString &amp; attributeURL)'/>
<use f='webkit/Source/WebCore/svg/SVGAElement.cpp' l='220' u='c' c='_ZNK7WebCore11SVGAElement15visitedLinkHashEv'/>
<use f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/HTMLAnchorElement.h' l='136' u='c' c='_ZNK7WebCore17HTMLAnchorElement15visitedLinkHashEv'/>
