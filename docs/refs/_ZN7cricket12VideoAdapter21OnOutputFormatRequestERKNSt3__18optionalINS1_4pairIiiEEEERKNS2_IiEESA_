<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/base/video_adapter.h' l='72' type='void cricket::VideoAdapter::OnOutputFormatRequest(const absl::optional&lt;std::pair&lt;int, int&gt;&gt; &amp; target_aspect_ratio, const absl::optional&lt;int&gt; &amp; max_pixel_count, const absl::optional&lt;int&gt; &amp; max_fps)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/base/video_adapter.h' l='64'>// Requests output frame size and frame interval from |AdaptFrameResolution|.
  // |target_aspect_ratio|: The input frame size will be cropped to match the
  // requested aspect ratio. The aspect ratio is orientation agnostic and will
  // be adjusted to maintain the input orientation (i.e. it doesn&apos;t matter if
  // e.g. &lt;1280,720&gt; or &lt;720,1280&gt; is requested).
  // |max_pixel_count|: The maximum output frame size.
  // |max_fps|: The maximum output framerate.
  // Note: Should be called from the source only.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/base/video_adapter.cc' l='303' u='c' c='_ZN7cricket12VideoAdapter21OnOutputFormatRequestERKNSt3__18optionalINS_11VideoFormatEEE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/base/video_adapter.cc' l='306' ll='324' type='void cricket::VideoAdapter::OnOutputFormatRequest(const absl::optional&lt;std::pair&lt;int, int&gt;&gt; &amp; target_aspect_ratio, const absl::optional&lt;int&gt; &amp; max_pixel_count, const absl::optional&lt;int&gt; &amp; max_fps)'/>
