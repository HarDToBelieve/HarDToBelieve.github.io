<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/transport/stun.h' l='606' type='std::unique_ptr&lt;StunAttribute&gt; cricket::CopyStunAttribute(const cricket::StunAttribute &amp; attribute, rtc::ByteBufferWriter * tmp_buffer_ptr = 0)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/transport/stun.h' l='598'>// Make a copy af |attribute| and return a new StunAttribute.
//   This is useful if you don&apos;t care about what kind of attribute you
//   are handling.
//
// The implementation copies by calling Write() followed by Read().
//
// If |tmp_buffer| is supplied this buffer will be used, otherwise
// a buffer will created in the method.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/transport/stun.cc' l='1302' ll='1327' type='std::unique_ptr&lt;StunAttribute&gt; cricket::CopyStunAttribute(const cricket::StunAttribute &amp; attribute, rtc::ByteBufferWriter * tmp_buffer_ptr = 0)'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/transport/stun.h' l='606' type='std::unique_ptr&lt;StunAttribute&gt; cricket::CopyStunAttribute(const cricket::StunAttribute &amp; attribute, rtc::ByteBufferWriter * tmp_buffer_ptr = 0)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/transport/stun.h' l='598'>// Make a copy af |attribute| and return a new StunAttribute.
//   This is useful if you don&apos;t care about what kind of attribute you
//   are handling.
//
// The implementation copies by calling Write() followed by Read().
//
// If |tmp_buffer| is supplied this buffer will be used, otherwise
// a buffer will created in the method.</doc>
