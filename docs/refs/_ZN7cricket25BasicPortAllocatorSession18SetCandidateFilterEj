<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/client/basic_port_allocator.h' l='132' type='void cricket::BasicPortAllocatorSession::SetCandidateFilter(uint32_t filter)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/client/basic_port_allocator.h' l='123'>// If the new filter allows new types of candidates compared to the previous
  // filter, gathered candidates that were discarded because of not matching the
  // previous filter will be signaled if they match the new one.
  //
  // We do not perform any regathering since the port allocator flags decide
  // the type of candidates to gather and the candidate filter only controls the
  // signaling of candidates. As a result, with the candidate filter changed
  // alone, all newly allowed candidates for signaling should already be
  // gathered by the respective cricket::Port.</doc>
<inh f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/port_allocator.h' l='213' c='_ZN7cricket20PortAllocatorSession18SetCandidateFilterEj'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/client/basic_port_allocator.cc' l='304' ll='362' type='void cricket::BasicPortAllocatorSession::SetCandidateFilter(uint32_t filter)'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/p2p/client/basic_port_allocator.h' l='132' type='void cricket::BasicPortAllocatorSession::SetCandidateFilter(uint32_t filter)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/p2p/client/basic_port_allocator.h' l='123'>// If the new filter allows new types of candidates compared to the previous
  // filter, gathered candidates that were discarded because of not matching the
  // previous filter will be signaled if they match the new one.
  //
  // We do not perform any regathering since the port allocator flags decide
  // the type of candidates to gather and the candidate filter only controls the
  // signaling of candidates. As a result, with the candidate filter changed
  // alone, all newly allowed candidates for signaling should already be
  // gathered by the respective cricket::Port.</doc>
