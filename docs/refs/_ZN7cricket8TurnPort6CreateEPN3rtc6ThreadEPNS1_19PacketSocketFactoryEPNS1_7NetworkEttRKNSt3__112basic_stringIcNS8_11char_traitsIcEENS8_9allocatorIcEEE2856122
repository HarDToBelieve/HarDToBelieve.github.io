<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/turn_port.h' l='104' ll='138' type='static std::unique_ptr&lt;TurnPort&gt; cricket::TurnPort::Create(rtc::Thread * thread, rtc::PacketSocketFactory * factory, rtc::Network * network, uint16_t min_port, uint16_t max_port, const std::string &amp; username, const std::string &amp; password, const cricket::ProtocolAddress &amp; server_address, const cricket::RelayCredentials &amp; credentials, int server_priority, const std::string &amp; origin, const std::vector&lt;std::string&gt; &amp; tls_alpn_protocols, const std::vector&lt;std::string&gt; &amp; tls_elliptic_curves, webrtc::TurnCustomizer * customizer, rtc::SSLCertificateVerifier * tls_cert_verifier = nullptr)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/turn_port.h' l='156' u='c' c='_ZN7cricket8TurnPort12CreateUniqueEPN3rtc6ThreadEPNS1_19PacketSocketFactoryEPNS1_7NetworkEttRKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocat10261643'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/turn_port.h' l='102'>// Create a TURN port that will use a new socket, bound to |network| and
  // using a port in the range between |min_port| and |max_port|.</doc>
