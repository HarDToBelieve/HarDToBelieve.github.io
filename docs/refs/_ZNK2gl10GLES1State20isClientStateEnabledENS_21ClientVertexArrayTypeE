<dec f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/GLES1State.h' l='190' type='bool gl::GLES1State::isClientStateEnabled(gl::ClientVertexArrayType clientState) const'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/GLES1Renderer.cpp' l='159' u='c' c='_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/GLES1Renderer.cpp' l='165' u='c' c='_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/GLES1Renderer.cpp' l='172' u='c' c='_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE'/>
<def f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/GLES1State.cpp' l='363' ll='381' type='bool gl::GLES1State::isClientStateEnabled(gl::ClientVertexArrayType clientState) const'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/GLES1State.cpp' l='506' u='c' c='_ZNK2gl10GLES1State28getVertexArraysAttributeMaskEv'/>
