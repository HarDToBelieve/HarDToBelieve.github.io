<dec f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_format_utils.h' l='148' type='const rx::mtl::VertexFormat &amp; rx::mtl::FormatTable::getVertexFormat(angle::FormatID angleFormatId, bool tightlyPacked) const'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/DisplayMtl.h' l='160' u='c' c='_ZNK2rx10DisplayMtl15getVertexFormatEN5angle8FormatIDEb'/>
<doc f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_format_utils.h' l='144'>// tightlyPacked means this format will be used in a tightly packed vertex buffer.
    // In that case, it&apos;s easier to just convert everything to float to ensure
    // Metal alignment requirements between 2 elements inside the buffer will be met regardless
    // of how many components each element has.</doc>
<def f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_format_utils.mm' l='303' ll='308' type='const rx::mtl::VertexFormat &amp; rx::mtl::FormatTable::getVertexFormat(angle::FormatID angleFormatId, bool tightlyPacked) const'/>
