<dec f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/SymbolEnv.h' l='157' type='const sh::TStructure &amp; sh::SymbolEnv::remap(const sh::TStructure &amp; s) const'/>
<doc f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/SymbolEnv.h' l='146'>// There exist Angle rewrites that can lead to incoherent structs
    //
    // Example
    //    struct A { ... }
    //    struct B { A&apos; a; } // A&apos; has same name as A but is not identical.
    // becomes
    //    struct A { ... }
    //    struct B { A a; }
    //
    // This notably happens when A contains a sampler in the original GLSL code but is rewritten to
    // not have a sampler, yet the A&apos; struct field still contains the sampler field.</doc>
<def f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/SymbolEnv.cpp' l='287' ll='297' type='const sh::TStructure &amp; sh::SymbolEnv::remap(const sh::TStructure &amp; s) const'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/SymbolEnv.cpp' l='303' u='c' c='_ZNK2sh9SymbolEnv5remapEPKNS_10TStructureE'/>
