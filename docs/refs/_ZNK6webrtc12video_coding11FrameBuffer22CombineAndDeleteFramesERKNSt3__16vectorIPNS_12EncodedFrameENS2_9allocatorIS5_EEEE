<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/frame_buffer2.h' l='157' type='webrtc::EncodedFrame * webrtc::video_coding::FrameBuffer::CombineAndDeleteFrames(const std::vector&lt;EncodedFrame *&gt; &amp; frames) const'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/frame_buffer2.h' l='153'>// The cleaner solution would be to have the NextFrame function return a
  // vector of frames, but until the decoding pipeline can support decoding
  // multiple frames at the same time we combine all frames to one frame and
  // return it. See bugs.webrtc.org/10064</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/frame_buffer2.cc' l='307' u='c' c='_ZN6webrtc12video_coding11FrameBuffer12GetNextFrameEv'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/frame_buffer2.cc' l='650' ll='686' type='webrtc::EncodedFrame * webrtc::video_coding::FrameBuffer::CombineAndDeleteFrames(const std::vector&lt;EncodedFrame *&gt; &amp; frames) const'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/frame_buffer2.cc' l='648'>// TODO(philipel): Avoid the concatenation of frames here, by replacing
// NextFrame and GetNextFrame with methods returning multiple frames.</doc>
