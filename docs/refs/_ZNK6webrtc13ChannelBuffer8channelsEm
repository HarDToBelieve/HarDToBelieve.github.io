<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_audio/channel_buffer.h' l='93' ll='96' type='const T *const * webrtc::ChannelBuffer::channels(size_t band = 0) const'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_audio/channel_buffer.h' l='80'>// Returns a pointer array to the channels.
  // If band is explicitly specificed, the channels for a specific band are
  // returned and the usage becomes: channels(band)[channel][sample].
  // Where:
  // 0 &lt;= band &lt; |num_bands_|
  // 0 &lt;= channel &lt; |num_allocated_channels_|
  // 0 &lt;= sample &lt; |num_frames_per_band_|

  // If band is not explicitly specified, the full-band channels (or lower band
  // channels) are returned and the usage becomes: channels()[channel][sample].
  // Where:
  // 0 &lt;= channel &lt; |num_allocated_channels_|
  // 0 &lt;= sample &lt; |num_frames_|</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/splitting_filter.cc' l='73' u='c' c='_ZN6webrtc15SplittingFilter16TwoBandsAnalysisEPKNS_13ChannelBufferIfEEPS2_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/splitting_filter.cc' l='90' u='c' c='_ZN6webrtc15SplittingFilter17TwoBandsSynthesisEPKNS_13ChannelBufferIfEEPS2_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/splitting_filter.cc' l='91' u='c' c='_ZN6webrtc15SplittingFilter17TwoBandsSynthesisEPKNS_13ChannelBufferIfEEPS2_'/>
