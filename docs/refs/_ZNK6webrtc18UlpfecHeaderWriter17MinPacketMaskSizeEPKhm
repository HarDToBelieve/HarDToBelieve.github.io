<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/ulpfec_header_reader_writer.h' l='54' type='size_t webrtc::UlpfecHeaderWriter::MinPacketMaskSize(const uint8_t * packet_mask, size_t packet_mask_size) const'/>
<inh f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/forward_error_correction.h' l='398' c='_ZNK6webrtc15FecHeaderWriter17MinPacketMaskSizeEPKhm'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/ulpfec_header_reader_writer.cc' l='101' ll='104' type='size_t webrtc::UlpfecHeaderWriter::MinPacketMaskSize(const uint8_t * packet_mask, size_t packet_mask_size) const'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/ulpfec_header_reader_writer.cc' l='97'>// TODO(brandtr): Consider updating this implementation (which actually
// returns a bound on the sequence number spread), if logic is added to
// UlpfecHeaderWriter::FinalizeFecHeader to truncate packet masks which end
// in a string of zeroes. (Similar to how it is done in the FlexFEC case.)</doc>
