<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/call/adaptation/video_source_restrictions.h' l='55' type='const absl::optional&lt;size_t&gt; &amp; webrtc::VideoSourceRestrictions::target_pixels_per_frame() const'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/call/adaptation/video_source_restrictions.h' l='47'>// The source should produce a resolution as close to the
  // target_pixels_per_frame() as possible, provided this does not exceed
  // max_pixels_per_frame().
  // The actual pixel count selected depends on the capabilities of the source.
  // TODO(hbos): Clarify how &quot;target&quot; is used. One possible implementation: open
  // the camera in the smallest resolution that is greater than or equal to the
  // target and scale it down to the target if it is greater. Is this an
  // accurate description of what this does today, or do we do something else?</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/call/adaptation/video_source_restrictions.cc' l='58' ll='61' type='const absl::optional&lt;size_t&gt; &amp; webrtc::VideoSourceRestrictions::target_pixels_per_frame() const'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/video_source_sink_controller.cc' l='165' u='c' c='_ZNK6webrtc25VideoSourceSinkController26CurrentSettingsToSinkWantsEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/video_source_sink_controller.cc' l='167' u='c' c='_ZNK6webrtc25VideoSourceSinkController26CurrentSettingsToSinkWantsEv'/>
