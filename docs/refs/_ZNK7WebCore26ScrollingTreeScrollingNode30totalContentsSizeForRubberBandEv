<def f='webkit/Source/WebCore/page/scrolling/ScrollingTreeScrollingNode.h' l='140' type='const WebCore::FloatSize &amp; WebCore::ScrollingTreeScrollingNode::totalContentsSizeForRubberBand() const'/>
<doc f='webkit/Source/WebCore/page/scrolling/ScrollingTreeScrollingNode.h' l='137'>// If the totalContentsSize changes in the middle of a rubber-band, we still want to use the old totalContentsSize for the sake of
    // computing the stretchAmount(). Using the old value will keep the animation smooth. When there is no rubber-band in progress at
    // all, m_totalContentsSizeForRubberBand should be equivalent to m_totalContentsSize.</doc>
<use f='webkit/Source/WebCore/page/scrolling/mac/ScrollingTreeFrameScrollingNodeMac.mm' l='221' u='c' c='_ZNK7WebCore34ScrollingTreeFrameScrollingNodeMac21maximumScrollPositionEv'/>
<def f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/ScrollingTreeScrollingNode.h' l='140' type='const WebCore::FloatSize &amp; WebCore::ScrollingTreeScrollingNode::totalContentsSizeForRubberBand() const'/>
<doc f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/ScrollingTreeScrollingNode.h' l='137'>// If the totalContentsSize changes in the middle of a rubber-band, we still want to use the old totalContentsSize for the sake of
    // computing the stretchAmount(). Using the old value will keep the animation smooth. When there is no rubber-band in progress at
    // all, m_totalContentsSizeForRubberBand should be equivalent to m_totalContentsSize.</doc>
