<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/basic_ice_controller.h' l='122' type='int cricket::BasicIceController::CompareConnectionStates(const cricket::Connection * a, const cricket::Connection * b, absl::optional&lt;int64_t&gt; receiving_unchanged_threshold, bool * missed_receiving_unchanged_threshold) const'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/basic_ice_controller.cc' l='573' ll='645' type='int cricket::BasicIceController::CompareConnectionStates(const cricket::Connection * a, const cricket::Connection * b, absl::optional&lt;int64_t&gt; receiving_unchanged_threshold, bool * missed_receiving_unchanged_threshold) const'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/basic_ice_controller.cc' l='702' u='c' c='_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_NSt3__18optionalIxEEPb'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/basic_ice_controller.cc' l='571'>// Compare two connections based on their writing, receiving, and connected
// states.</doc>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/basic_ice_controller.h' l='115'>// The methods below return a positive value if |a| is preferable to |b|,
  // a negative value if |b| is preferable, and 0 if they&apos;re equally preferable.
  // If |receiving_unchanged_threshold| is set, then when |b| is receiving and
  // |a| is not, returns a negative value only if |b| has been in receiving
  // state and |a| has been in not receiving state since
  // |receiving_unchanged_threshold| and sets
  // |missed_receiving_unchanged_threshold| to true otherwise.</doc>
