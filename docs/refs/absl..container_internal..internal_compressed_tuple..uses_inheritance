<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/abseil-cpp/absl/container/internal/compressed_tuple.h' l='85'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/abseil-cpp/absl/container/internal/compressed_tuple.h' l='133' c='absl::container_internal::internal_compressed_tuple::CompressedTupleImpl'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/abseil-cpp/absl/container/internal/compressed_tuple.h' l='139'/>
<size>1</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/abseil-cpp/absl/container/internal/compressed_tuple.h' l='80'>// We can&apos;t use EBCO on other CompressedTuples because that would mean that we
// derive from multiple Storage&lt;&gt; instantiations with the same I parameter,
// and potentially from multiple identical Storage&lt;&gt; instantiations.  So anytime
// we use type inheritance rather than encapsulation, we mark
// CompressedTupleImpl, to make this easy to detect.</doc>
<def f='webkit/WebKitBuild/Debug/usr/local/include/absl/container/internal/compressed_tuple.h' l='85'/>
<ovr f='webkit/WebKitBuild/Debug/usr/local/include/absl/container/internal/compressed_tuple.h' l='133' c='absl::container_internal::internal_compressed_tuple::CompressedTupleImpl'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/absl/container/internal/compressed_tuple.h' l='139'/>
<size>1</size>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/absl/container/internal/compressed_tuple.h' l='80'>// We can&apos;t use EBCO on other CompressedTuples because that would mean that we
// derive from multiple Storage&lt;&gt; instantiations with the same I parameter,
// and potentially from multiple identical Storage&lt;&gt; instantiations.  So anytime
// we use type inheritance rather than encapsulation, we mark
// CompressedTupleImpl, to make this easy to detect.</doc>
