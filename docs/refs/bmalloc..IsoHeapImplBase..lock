<dec f='webkit/WebKitBuild/Debug/usr/local/include/bmalloc/IsoHeapImpl.h' l='82' type='bmalloc::Mutex &amp;'/>
<offset>64</offset>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/bmalloc/IsoHeapImpl.h' l='77'>// It&apos;s almost always the caller&apos;s responsibility to grab the lock. This lock comes from the
    // (*PerProcess&lt;IsoTLSEntryHolder&lt;IsoTLSDeallocatorEntry&lt;Config&gt;&gt;&gt;::get())-&gt;lock. That&apos;s pretty weird, and we don&apos;t
    // try to disguise the fact that it&apos;s weird. We only do that because heaps in the same size class
    // share the same deallocator log, so it makes sense for them to also share the same lock to
    // amortize lock acquisition costs.</doc>
<dec f='webkit/Source/bmalloc/bmalloc/IsoHeapImpl.h' l='82' type='bmalloc::Mutex &amp;'/>
<offset>64</offset>
<doc f='webkit/Source/bmalloc/bmalloc/IsoHeapImpl.h' l='77'>// It&apos;s almost always the caller&apos;s responsibility to grab the lock. This lock comes from the
    // (*PerProcess&lt;IsoTLSEntryHolder&lt;IsoTLSDeallocatorEntry&lt;Config&gt;&gt;&gt;::get())-&gt;lock. That&apos;s pretty weird, and we don&apos;t
    // try to disguise the fact that it&apos;s weird. We only do that because heaps in the same size class
    // share the same deallocator log, so it makes sense for them to also share the same lock to
    // amortize lock acquisition costs.</doc>
<use f='webkit/Source/bmalloc/bmalloc/IsoHeapImpl.cpp' l='35' u='w' c='_ZN7bmalloc15IsoHeapImplBaseC1ERNS_5MutexE'/>
