<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/bn/internal.h' l='558' type='int bn_div_consttime(BIGNUM * quotient, BIGNUM * remainder, const BIGNUM * numerator, const BIGNUM * divisor, BN_CTX * ctx)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/bn/internal.h' l='552'>// bn_div_consttime behaves like |BN_div|, but it rejects negative inputs and
// treats both inputs, including their magnitudes, as secret. It is, as a
// result, much slower than |BN_div| and should only be used for rare operations
// where Montgomery reduction is not available.
//
// Note that |quotient-&gt;width| will be set pessimally to |numerator-&gt;width|.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/bn/div.c' l='458' ll='529' type='int bn_div_consttime(BIGNUM * quotient, BIGNUM * remainder, const BIGNUM * numerator, const BIGNUM * divisor, BN_CTX * ctx)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/bn/gcd_extra.c' l='163' u='c' c='bn_lcm_consttime'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/rsa/rsa.c' l='673' u='c' c='check_mod_inverse'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/rsa/rsa.c' l='755' u='c' c='RSA_check_key'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/rsa/rsa.c' l='756' u='c' c='RSA_check_key'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/rsa/rsa_impl.c' l='1268' u='c' c='rsa_generate_key_impl'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/rsa/rsa_impl.c' l='1270' u='c' c='rsa_generate_key_impl'/>
