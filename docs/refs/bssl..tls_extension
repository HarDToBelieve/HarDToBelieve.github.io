<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='506' ll='517'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3261'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3475'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3475'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3484' c='_ZN4bsslL18tls_extension_findEPjt'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3475' c='_ZN4bsslL18tls_extension_findEPjt'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3475' c='_ZN4bssl26ssl_add_clienthello_tlsextEPNS_13SSL_HANDSHAKEEP6cbb_stm'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3475' c='_ZN4bssl26ssl_add_clienthello_tlsextEPNS_13SSL_HANDSHAKEEP6cbb_stm'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3475' c='_ZN4bssl26ssl_add_serverhello_tlsextEPNS_13SSL_HANDSHAKEEP6cbb_st'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3475' c='_ZN4bsslL27ssl_scan_clienthello_tlsextEPNS_13SSL_HANDSHAKEEPK22ssl_early_callback_ctxPi'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3687' c='_ZN4bsslL27ssl_scan_clienthello_tlsextEPNS_13SSL_HANDSHAKEEPK22ssl_early_callback_ctxPi'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3475' c='_ZN4bsslL27ssl_scan_clienthello_tlsextEPNS_13SSL_HANDSHAKEEPK22ssl_early_callback_ctxPi'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3781' c='_ZN4bsslL27ssl_scan_serverhello_tlsextEPNS_13SSL_HANDSHAKEEP6cbs_stPi'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3475' c='_ZN4bsslL27ssl_scan_serverhello_tlsextEPNS_13SSL_HANDSHAKEEP6cbs_stPi'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='3475' c='_ZN4bsslL27ssl_scan_serverhello_tlsextEPNS_13SSL_HANDSHAKEEP6cbs_stPi'/>
<size>48</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='491'>// tls_extension represents a TLS extension that is handled internally. The
// |init| function is called for each handshake, before any other functions of
// the extension. Then the add and parse callbacks are called as needed.
//
// The parse callbacks receive a |CBS| that contains the contents of the
// extension (i.e. not including the type and length bytes). If an extension is
// not received then the parse callbacks will be called with a NULL CBS so that
// they can do any processing needed to handle the absence of an extension.
//
// The add callbacks receive a |CBB| to which the extension can be appended but
// the function is responsible for appending the type and length bytes too.
//
// All callbacks return true for success and false for error. If a parse
// function returns zero then a fatal alert with value |*out_alert| will be
// sent. If |*out_alert| isn&apos;t set, then a |decode_error| alert will be sent.</doc>
