<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/bytestring.h' l='359' ll='367'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/bytestring.h' l='370'/>
<size>32</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/bytestring.h' l='344'>// CRYPTO ByteBuilder.
//
// |CBB| objects allow one to build length-prefixed serialisations. A |CBB|
// object is associated with a buffer and new buffers are created with
// |CBB_init|. Several |CBB| objects can point at the same buffer when a
// length-prefix is pending, however only a single |CBB| can be &apos;current&apos; at
// any one time. For example, if one calls |CBB_add_u8_length_prefixed| then
// the new |CBB| points at the same buffer as the original. But if the original
// |CBB| is used then the length prefix is written out and the new |CBB| must
// not be used again.
//
// If one needs to force a length prefix to be written out because a |CBB| is
// going out of scope, use |CBB_flush|. If an operation on a |CBB| fails, it is
// in an undefined state and must not be used except to call |CBB_cleanup|.</doc>
<mbr r='cbb_buffer_st::buf' o='0' t='uint8_t *'/>
<mbr r='cbb_buffer_st::len' o='64' t='size_t'/>
<mbr r='cbb_buffer_st::cap' o='128' t='size_t'/>
<mbr r='cbb_buffer_st::can_resize' o='192' t='char'/>
<mbr r='cbb_buffer_st::error' o='200' t='char'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/bytestring/cbb.c' l='32' c='cbb_init'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/bytestring/cbb.c' l='34' c='cbb_init'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/bytestring/cbb.c' l='94' c='cbb_buffer_reserve'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/bytestring/cbb.c' l='139' c='cbb_buffer_add'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/bytestring/cbb.c' l='149' c='cbb_buffer_add_u'/>
<size>32</size>
