<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/ice_controller_interface.h' l='73' ll='147'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/ice_controller_factory_interface.h' l='34' c='_ZN7cricket29IceControllerFactoryInterface6CreateERKNS_24IceControllerFactoryArgsE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/p2p_transport_channel.h' l='467'/>
<size>8</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/ice_controller_interface.h' l='50'>// Defines the interface for a module that control
// - which connection to ping
// - which connection to use
// - which connection to prune
// - which connection to forget learned state on
//
// The P2PTransportChannel owns (creates and destroys) Connections,
// but P2PTransportChannel gives const pointers to the the IceController using
// |AddConnection|, i.e the IceController should not call any non-const methods
// on a Connection but signal back in the interface if any mutable function
// shall be called.
//
// Current these are limited to:
// Connection::Ping               - returned in PingResult
// Connection::Prune              - retuned in PruneConnections
// Connection::ForgetLearnedState - return in SwitchResult
//
// The IceController shall keep track of all connections added
// (and not destroyed) and give them back using the connections()-function-
//
// When a Connection gets destroyed
// - signals on Connection::SignalDestroyed
// - P2PTransportChannel calls IceController::OnConnectionDestroyed</doc>
<fun r='_ZN7cricket22IceControllerInterfaceD1Ev'/>
<fun r='_ZN7cricket22IceControllerInterface12SetIceConfigERKNS_9IceConfigE'/>
<fun r='_ZN7cricket22IceControllerInterface21SetSelectedConnectionEPKNS_10ConnectionE'/>
<fun r='_ZN7cricket22IceControllerInterface13AddConnectionEPKNS_10ConnectionE'/>
<fun r='_ZN7cricket22IceControllerInterface21OnConnectionDestroyedEPKNS_10ConnectionE'/>
<fun r='_ZNK7cricket22IceControllerInterface11connectionsEv'/>
<fun r='_ZNK7cricket22IceControllerInterface21HasPingableConnectionEv'/>
<fun r='_ZN7cricket22IceControllerInterface22SelectConnectionToPingEx'/>
<fun r='_ZNK7cricket22IceControllerInterface19GetUseCandidateAttrEPKNS_10ConnectionENS_14NominationModeENS_7IceModeE'/>
<fun r='_ZN7cricket22IceControllerInterface26FindNextPingableConnectionEv'/>
<fun r='_ZN7cricket22IceControllerInterface20MarkConnectionPingedEPKNS_10ConnectionE'/>
<fun r='_ZN7cricket22IceControllerInterface22ShouldSwitchConnectionENS_18IceControllerEventEPKNS_10ConnectionE'/>
<fun r='_ZN7cricket22IceControllerInterface23SortAndSwitchConnectionENS_18IceControllerEventE'/>
<fun r='_ZN7cricket22IceControllerInterface16PruneConnectionsEv'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/basic_ice_controller.h' l='26' c='cricket::BasicIceController'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/basic_ice_controller.h' l='26'/>
<size>8</size>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/default_ice_transport_factory.cc' l='23' c='_ZN12_GLOBAL__N_125BasicIceControllerFactory6CreateERKN7cricket24IceControllerFactoryArgsE'/>
<size>8</size>
