<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/pseudo_tcp.h' l='96' ll='101'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/pseudo_tcp.h' l='102' c='_ZN7cricket9PseudoTcp9GetOptionENS0_6OptionEPi'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/pseudo_tcp.h' l='103' c='_ZN7cricket9PseudoTcp9SetOptionENS0_6OptionEi'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/pseudo_tcp.cc' l='368' c='_ZN7cricket9PseudoTcp9GetOptionENS0_6OptionEPi'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/pseudo_tcp.cc' l='381' c='_ZN7cricket9PseudoTcp9SetOptionENS0_6OptionEi'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/pseudo_tcp.h' l='90'>// Call these to get/set option values to tailor this PseudoTcp
  // instance&apos;s behaviour for the kind of data it will carry.
  // If an unrecognized option is set or got, an assertion will fire.
  //
  // Setting options for OPT_RCVBUF or OPT_SNDBUF after Connect() is called
  // will result in an assertion.</doc>
