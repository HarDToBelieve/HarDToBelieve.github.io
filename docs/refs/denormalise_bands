<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/celt/bands.h' l='64' type='void denormalise_bands(const OpusCustomMode * m, const celt_norm *restrict X, celt_sig *restrict freq, const opus_val16 * bandE, int start, int end, int M, int downsample, int silence)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/celt/bands.c' l='196' ll='265' type='void denormalise_bands(const OpusCustomMode * m, const celt_norm *restrict X, celt_sig *restrict freq, const opus_val16 * bandLogE, int start, int end, int M, int downsample, int silence)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/celt/bands.c' l='195'>/* De-normalise the energy to produce the synthesis from the unit-energy bands */</doc>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/celt/bands.h' l='59'>/** Denormalise each band of X to restore full amplitude
 * @param m Mode data
 * @param X Spectrum (returned de-normalised)
 * @param bandE Square root of the energy for each band
 */</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/celt/celt_decoder.c' l='406' u='c' c='celt_synthesis'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/celt/celt_decoder.c' l='420' u='c' c='celt_synthesis'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/celt/celt_decoder.c' l='423' u='c' c='celt_synthesis'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/celt/celt_decoder.c' l='432' u='c' c='celt_synthesis'/>
