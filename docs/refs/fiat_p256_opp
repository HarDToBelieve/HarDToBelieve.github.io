<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/third_party/fiat/p256_64.h' l='825' ll='856' type='void fiat_p256_opp(uint64_t * out1, const uint64_t * arg1)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/ec/p256.c' l='513' u='c' c='ec_GFp_nistp256_point_mul'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/ec/p256.c' l='652' u='c' c='ec_GFp_nistp256_point_mul_public'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/third_party/fiat/p256_64.h' l='812'>/*
 * The function fiat_p256_opp negates a field element in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 &lt; m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = -eval (from_montgomery arg1) mod m
 *   0 ≤ eval out1 &lt; m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~&gt; 0xffffffffffffffff], [0x0 ~&gt; 0xffffffffffffffff], [0x0 ~&gt; 0xffffffffffffffff], [0x0 ~&gt; 0xffffffffffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~&gt; 0xffffffffffffffff], [0x0 ~&gt; 0xffffffffffffffff], [0x0 ~&gt; 0xffffffffffffffff], [0x0 ~&gt; 0xffffffffffffffff]]
 */</doc>
