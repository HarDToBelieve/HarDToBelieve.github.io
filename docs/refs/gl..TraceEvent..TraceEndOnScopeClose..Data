<def f='webkit/Source/ThirdParty/ANGLE/src/third_party/trace_event/trace_event.h' l='763' ll='768'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/third_party/trace_event/trace_event.h' l='769'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/third_party/trace_event/trace_event.h' l='770'/>
<size>24</size>
<doc f='webkit/Source/ThirdParty/ANGLE/src/third_party/trace_event/trace_event.h' l='758'>// This Data struct workaround is to avoid initializing all the members
    // in Data during construction of this object, since this object is always
    // constructed, even when tracing is disabled. If the members of Data were
    // members of this class instead, compiler warnings occur about potential
    // uninitialized accesses.</doc>
<mbr r='gl::TraceEvent::TraceEndOnScopeClose::Data::platform' o='0' t='angle::PlatformMethods *'/>
<mbr r='gl::TraceEvent::TraceEndOnScopeClose::Data::categoryEnabled' o='64' t='const unsigned char *'/>
<mbr r='gl::TraceEvent::TraceEndOnScopeClose::Data::name' o='128' t='const char *'/>
