<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/include/opus.h' l='838' type='int opus_repacketizer_cat(OpusRepacketizer * rp, const unsigned char * data, opus_int32 len)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/include/opus.h' l='791'>/** Add a packet to the current repacketizer state.
  * This packet must match the configuration of any packets already submitted
  * for repacketization since the last call to opus_repacketizer_init().
  * This means that it must have the same coding mode, audio bandwidth, frame
  * size, and channel count.
  * This can be checked in advance by examining the top 6 bits of the first
  * byte of the packet, and ensuring they match the top 6 bits of the first
  * byte of any previously submitted packet.
  * The total duration of audio in the repacketizer state also must not exceed
  * 120 ms, the maximum duration of a single packet, after adding this packet.
  *
  * The contents of the current repacketizer state can be extracted into new
  * packets using opus_repacketizer_out() or opus_repacketizer_out_range().
  *
  * In order to add a packet with a different configuration or to add more
  * audio beyond 120 ms, you must clear the repacketizer state by calling
  * opus_repacketizer_init().
  * If a packet is too large to add to the current repacketizer state, no part
  * of it is added, even if it contains multiple frames, some of which might
  * fit.
  * If you wish to be able to add parts of such packets, you should first use
  * another repacketizer to split the packet into pieces and add them
  * individually.
  * @see opus_repacketizer_out_range
  * @see opus_repacketizer_out
  * @see opus_repacketizer_init
  * @param rp &lt;tt&gt;OpusRepacketizer*&lt;/tt&gt;: The repacketizer state to which to
  *                                       add the packet.
  * @param[in] data &lt;tt&gt;const unsigned char*&lt;/tt&gt;: The packet data.
  *                                                The application must ensure
  *                                                this pointer remains valid
  *                                                until the next call to
  *                                                opus_repacketizer_init() or
  *                                                opus_repacketizer_destroy().
  * @param len &lt;tt&gt;opus_int32&lt;/tt&gt;: The number of bytes in the packet data.
  * @returns An error code indicating whether or not the operation succeeded.
  * @retval #OPUS_OK The packet&apos;s contents have been added to the repacketizer
  *                  state.
  * @retval #OPUS_INVALID_PACKET The packet did not have a valid TOC sequence,
  *                              the packet&apos;s TOC sequence was not compatible
  *                              with previously submitted packets (because
  *                              the coding mode, audio bandwidth, frame size,
  *                              or channel count did not match), or adding
  *                              this packet would increase the total amount of
  *                              audio stored in the repacketizer state to more
  *                              than 120 ms.
  */</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/src/opus_encoder.c' l='996' u='c' c='encode_multiframe_packet'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/src/opus_multistream_encoder.c' l='996' u='c' c='opus_multistream_encode_native'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/src/repacketizer.c' l='92' ll='95' type='int opus_repacketizer_cat(OpusRepacketizer * rp, const unsigned char * data, opus_int32 len)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/src/repacketizer.c' l='253' u='c' c='opus_packet_pad'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/src/repacketizer.c' l='270' u='c' c='opus_packet_unpad'/>
