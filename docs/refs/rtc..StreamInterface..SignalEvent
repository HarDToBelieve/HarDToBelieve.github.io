<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/stream.h' l='90' type='sigslot::signal3&lt;StreamInterface *, int, int&gt;'/>
<offset>64</offset>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/stream.h' l='82'>// Streams may signal one or more StreamEvents to indicate state changes.
  // The first argument identifies the stream on which the state change occured.
  // The second argument is a bit-wise combination of StreamEvents.
  // If SE_CLOSE is signalled, then the third argument is the associated error
  // code.  Otherwise, the value is undefined.
  // Note: Not all streams will support asynchronous event signalling.  However,
  // SS_OPENING and SR_BLOCK returned from stream member functions imply that
  // certain events will be raised in the future.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/dtls_transport.cc' l='120' u='m' c='_ZN7cricket22StreamInterfaceChannel16OnPacketReceivedEPKcm'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/dtls_transport.cc' l='344' u='m' c='_ZN7cricket13DtlsTransport9SetupDtlsEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/memory/fifo_buffer.h' l='105' u='m' c='_ZN3rtc10FifoBuffer9PostEventEii'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/openssl_stream_adapter.cc' l='305' u='m' c='_ZN3rtc20OpenSSLStreamAdapterC1ENSt3__110unique_ptrINS_15StreamInterfaceENS1_14default_deleteIS3_EEEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/openssl_stream_adapter.cc' l='817' u='m' c='_ZN3rtc20OpenSSLStreamAdapter7OnEventEPNS_15StreamInterfaceEii'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/openssl_stream_adapter.cc' l='823' u='m' c='_ZN3rtc20OpenSSLStreamAdapter9PostEventEii'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/openssl_stream_adapter.cc' l='920' u='m' c='_ZN3rtc20OpenSSLStreamAdapter11ContinueSSLEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/openssl_stream_adapter.cc' l='963' u='m' c='_ZN3rtc20OpenSSLStreamAdapter5ErrorEPKcihb'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/socket_stream.cc' l='109' u='m' c='_ZN3rtc12SocketStream14OnConnectEventEPNS_11AsyncSocketE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/socket_stream.cc' l='114' u='m' c='_ZN3rtc12SocketStream11OnReadEventEPNS_11AsyncSocketE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/socket_stream.cc' l='119' u='m' c='_ZN3rtc12SocketStream12OnWriteEventEPNS_11AsyncSocketE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/socket_stream.cc' l='124' u='m' c='_ZN3rtc12SocketStream12OnCloseEventEPNS_11AsyncSocketEi'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/stream.h' l='90' type='sigslot::signal3&lt;StreamInterface *, int, int&gt;'/>
<offset>64</offset>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/stream.h' l='82'>// Streams may signal one or more StreamEvents to indicate state changes.
  // The first argument identifies the stream on which the state change occured.
  // The second argument is a bit-wise combination of StreamEvents.
  // If SE_CLOSE is signalled, then the third argument is the associated error
  // code.  Otherwise, the value is undefined.
  // Note: Not all streams will support asynchronous event signalling.  However,
  // SS_OPENING and SR_BLOCK returned from stream member functions imply that
  // certain events will be raised in the future.</doc>
