<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/weak_ptr.h' l='145' ll='159'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/weak_ptr.h' l='150' c='_ZN3rtc8internal11WeakPtrBaseC1ERKS1_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/weak_ptr.h' l='151' c='_ZN3rtc8internal11WeakPtrBaseC1EOS1_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/weak_ptr.h' l='152' c='_ZN3rtc8internal11WeakPtrBaseaSERKS1_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/weak_ptr.h' l='152' c='_ZN3rtc8internal11WeakPtrBaseaSERKS1_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/weak_ptr.h' l='153' c='_ZN3rtc8internal11WeakPtrBaseaSEOS1_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/weak_ptr.h' l='153' c='_ZN3rtc8internal11WeakPtrBaseaSEOS1_'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/weak_ptr.h' l='167' c='rtc::WeakPtr'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/weak_ptr.h' l='167'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/weak_ptr.h' l='175' c='_ZN3rtc7WeakPtrC1ERKNS_7WeakPtrITL0__EE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/weak_ptr.h' l='178' c='_ZN3rtc7WeakPtrC1EONS_7WeakPtrITL0__EE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/weak_ptr.h' l='205' c='_ZN3rtc7WeakPtrC1ERKNS_8internal13WeakReferenceEPT_'/>
<size>8</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/weak_ptr.h' l='141'>// This class simplifies the implementation of WeakPtr&apos;s type conversion
// constructor by avoiding the need for a public accessor for ref_.  A
// WeakPtr&lt;T&gt; cannot access the private members of WeakPtr&lt;U&gt;, so this
// base class gives us a way to access ref_ in a protected fashion.</doc>
<fun r='_ZN3rtc8internal11WeakPtrBaseC1Ev'/>
<fun r='_ZN3rtc8internal11WeakPtrBaseD1Ev'/>
<fun r='_ZN3rtc8internal11WeakPtrBaseC1ERKS1_'/>
<fun r='_ZN3rtc8internal11WeakPtrBaseC1EOS1_'/>
<fun r='_ZN3rtc8internal11WeakPtrBaseaSERKS1_'/>
<fun r='_ZN3rtc8internal11WeakPtrBaseaSEOS1_'/>
<fun r='_ZN3rtc8internal11WeakPtrBaseC1ERKNS0_13WeakReferenceE'/>
<mbr r='rtc::internal::WeakPtrBase::ref_' o='0' t='rtc::internal::WeakReference'/>
<def f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/weak_ptr.h' l='145' ll='159'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/weak_ptr.h' l='150' c='_ZN3rtc8internal11WeakPtrBaseC1ERKS1_'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/weak_ptr.h' l='151' c='_ZN3rtc8internal11WeakPtrBaseC1EOS1_'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/weak_ptr.h' l='152' c='_ZN3rtc8internal11WeakPtrBaseaSERKS1_'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/weak_ptr.h' l='152' c='_ZN3rtc8internal11WeakPtrBaseaSERKS1_'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/weak_ptr.h' l='153' c='_ZN3rtc8internal11WeakPtrBaseaSEOS1_'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/weak_ptr.h' l='153' c='_ZN3rtc8internal11WeakPtrBaseaSEOS1_'/>
<ovr f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/weak_ptr.h' l='167' c='rtc::WeakPtr'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/weak_ptr.h' l='167'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/weak_ptr.h' l='175' c='_ZN3rtc7WeakPtrC1ERKNS_7WeakPtrITL0__EE'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/weak_ptr.h' l='178' c='_ZN3rtc7WeakPtrC1EONS_7WeakPtrITL0__EE'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/weak_ptr.h' l='205' c='_ZN3rtc7WeakPtrC1ERKNS_8internal13WeakReferenceEPT_'/>
<size>8</size>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/weak_ptr.h' l='141'>// This class simplifies the implementation of WeakPtr&apos;s type conversion
// constructor by avoiding the need for a public accessor for ref_.  A
// WeakPtr&lt;T&gt; cannot access the private members of WeakPtr&lt;U&gt;, so this
// base class gives us a way to access ref_ in a protected fashion.</doc>
<fun r='_ZN3rtc8internal11WeakPtrBaseC1Ev'/>
<fun r='_ZN3rtc8internal11WeakPtrBaseD1Ev'/>
<fun r='_ZN3rtc8internal11WeakPtrBaseC1ERKS1_'/>
<fun r='_ZN3rtc8internal11WeakPtrBaseC1EOS1_'/>
<fun r='_ZN3rtc8internal11WeakPtrBaseaSERKS1_'/>
<fun r='_ZN3rtc8internal11WeakPtrBaseaSEOS1_'/>
<fun r='_ZN3rtc8internal11WeakPtrBaseC1ERKNS0_13WeakReferenceE'/>
<mbr r='rtc::internal::WeakPtrBase::ref_' o='0' t='rtc::internal::WeakReference'/>
