<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctputil.h' l='151' type='int sctp_calculate_rto(struct sctp_tcb * , struct sctp_association * , struct sctp_nets * , struct timeval * , int )'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_indata.c' l='3109' u='c' c='sctp_process_segment_range'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_indata.c' l='4061' u='c' c='sctp_express_handle_sack'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_indata.c' l='4697' u='c' c='sctp_handle_sack'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_input.c' l='547' u='c' c='sctp_process_init_ack'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_input.c' l='689' u='c' c='sctp_handle_heartbeat_ack'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_input.c' l='1694' u='c' c='sctp_process_cookie_existing'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_input.c' l='2549' u='c' c='sctp_process_cookie_new'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_input.c' l='3225' u='c' c='sctp_handle_cookie_ack'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctputil.c' l='3040' ll='3146' type='int sctp_calculate_rto(struct sctp_tcb * stcb, struct sctp_association * asoc, struct sctp_nets * net, struct timeval * old, int rtt_from_sack)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctputil.c' l='3033'>/*
 * Given an association and starting time of the current RTT period, update
 * RTO in number of msecs. net should point to the current network.
 * Return 1, if an RTO update was performed, return 0 if no update was
 * performed due to invalid starting point.
 */</doc>
