<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctputil.h' l='77' type='struct sctp_ifa * sctp_find_ifa_in_ep(struct sctp_inpcb * inp, struct sockaddr * addr, int hold_lock)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_asconf.c' l='3230' u='c' c='sctp_addr_mgmt_ep_sa'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctputil.c' l='5753' ll='5803' type='struct sctp_ifa * sctp_find_ifa_in_ep(struct sctp_inpcb * inp, struct sockaddr * addr, int holds_lock)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctputil.c' l='5747'>/*
 * checks to see if the given address, sa, is one that is currently known by
 * the kernel note: can&apos;t distinguish the same address on multiple interfaces
 * and doesn&apos;t handle multiple addresses with different zone/scope id&apos;s note:
 * ifa_ifwithaddr() compares the entire sockaddr struct
 */</doc>
