<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_pcb.h' l='731' type='int sctp_inpcb_bind(struct socket * , struct sockaddr * , struct sctp_ifa * , struct proc * )'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_pcb.h' l='730'>/* struct proc is a dummy for __Userspace__ */</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_pcb.c' l='3240' ll='3767' type='int sctp_inpcb_bind(struct socket * so, struct sockaddr * addr, struct sctp_ifa * sctp_ifap, struct proc * p)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_pcb.c' l='5029' u='c' c='sctp_aloc_assoc'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_pcb.c' l='3239'>/* sctp_ifap is used to bypass normal local address validation checks */</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_usrreq.c' l='791' u='c' c='sctpconn_bind'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_usrreq.c' l='1981' u='c' c='sctp_do_connect_x'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_usrreq.c' l='8125' u='c' c='sctpconn_connect'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_usrreq.c' l='8385' u='c' c='sctp_listen'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctputil.c' l='7686' u='c' c='sctp_bindx_add_address'/>
