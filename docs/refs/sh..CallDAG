<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/ASTMetadataHLSL.h' l='58' c='_ZN2sh21CreateASTMetadataHLSLEPNS_11TIntermNodeERKNS_7CallDAGE'/>
<inh f='webkit/Source/ThirdParty/ANGLE/src/common/angleutils.h' l='43' c='angle::NonCopyable'/>
<def f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/CallDAG.h' l='36' ll='73'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/ASTMetadataHLSL.cpp' l='28' c='_ZN2sh12_GLOBAL__N_112PullGradientC1EPNSt3__16vectorINS_15ASTMetadataHLSLENS2_9allocatorIS4_EEEEmRKNS_7CallDAGE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/ASTMetadataHLSL.cpp' l='148'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/ASTMetadataHLSL.cpp' l='167' c='_ZN2sh12_GLOBAL__N_140PullComputeDiscontinuousAndGradientLoopsC1EPNSt3__16vectorINS_15ASTMetadataHLSLENS2_9allocatorIS4_EEEEmRKNS_7CallDAGE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/ASTMetadataHLSL.cpp' l='321'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/ASTMetadataHLSL.cpp' l='331' c='_ZN2sh12_GLOBAL__N_122PushDiscontinuousLoopsC1EPNSt3__16vectorINS_15ASTMetadataHLSLENS2_9allocatorIS4_EEEEmRKNS_7CallDAGE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/ASTMetadataHLSL.cpp' l='385'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/ASTMetadataHLSL.cpp' l='401' c='_ZN2sh21CreateASTMetadataHLSLEPNS_11TIntermNodeERKNS_7CallDAGE'/>
<size>48</size>
<doc f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/CallDAG.h' l='21'>// The translator needs to analyze the the graph of the function calls
// to run checks and analyses; since in GLSL recursion is not allowed
// that graph is a DAG.
// This class is used to precompute that function call DAG so that it
// can be reused by multiple analyses.
//
// It stores a vector of function records, with one record per defined function.
// Records are accessed by index but a function symbol id can be converted
// to the index of the corresponding record. The records contain the AST node
// of the function definition and the indices of the function&apos;s callees.
//
// In addition, records are in reverse topological order: a function F being
// called by a function G will have index index(F) &lt; index(G), that way
// depth-first analysis becomes analysis in the order of indices.</doc>
<fun r='_ZN2sh7CallDAGC1Ev'/>
<fun r='_ZN2sh7CallDAGD1Ev'/>
<fun r='_ZN2sh7CallDAG4initEPNS_11TIntermNodeEPNS_12TDiagnosticsE'/>
<fun r='_ZNK2sh7CallDAG9findIndexERKNS_15TSymbolUniqueIdE'/>
<fun r='_ZNK2sh7CallDAG18getRecordFromIndexEm'/>
<fun r='_ZNK2sh7CallDAG4sizeEv'/>
<fun r='_ZN2sh7CallDAG5clearEv'/>
<smbr r='sh::CallDAG::InvalidIndex' t='const size_t'/>
<mbr r='sh::CallDAG::mRecords' o='0' t='std::vector&lt;Record&gt;'/>
<mbr r='sh::CallDAG::mFunctionIdToIndex' o='192' t='std::map&lt;int, int&gt;'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/Compiler.h' l='265'/>
<size>48</size>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/Compiler.cpp' l='1319' c='_ZN2sh9TCompiler15UnusedPredicateC1EPKNS_7CallDAGEPKNSt3__16vectorINS0_16FunctionMetadataENS5_9allocatorIS7_EEEE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/Compiler.cpp' l='1356'/>
<size>48</size>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/OutputHLSL.h' l='227'/>
<size>48</size>
