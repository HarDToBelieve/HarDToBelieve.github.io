<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/OutputHLSL.h' l='71' u='m' c='_ZN2sh10OutputHLSL11getInfoSinkEv'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/OutputHLSL.h' l='72' u='m' c='_ZN2sh10OutputHLSL11getInfoSinkEv'/>
<dec f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/OutputHLSL.h' l='177' type='std::stack&lt;TInfoSinkBase *&gt;'/>
<offset>2240</offset>
<doc f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/OutputHLSL.h' l='174'>// A stack is useful when we want to traverse in the header, or in helper functions, but not
    // always write to the body. Instead use an InfoSink stack to keep our current state intact.
    // TODO (jmadill): Just passing an InfoSink in function parameters would be simpler.</doc>
