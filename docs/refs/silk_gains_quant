<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/silk/main.h' l='178' type='void silk_gains_quant(opus_int8 * ind, opus_int32 * gain_Q16, opus_int8 * prev_ind, const int conditional, const int nb_subfr)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/silk/main.h' l='177'>/* Gain scalar quantization with hysteresis, uniform on log scale */</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/silk/fixed/encode_frame_FIX.c' l='356' u='c' c='silk_encode_frame_FIX'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/silk/fixed/process_gains_FIX.c' l='94' u='c' c='silk_process_gains_FIX'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/silk/float/encode_frame_FLP.c' l='343' u='c' c='silk_encode_frame_FLP'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/silk/float/process_gains_FLP.c' l='75' u='c' c='silk_process_gains_FLP'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/silk/gain_quant.c' l='39' ll='91' type='void silk_gains_quant(opus_int8 * ind, opus_int32 * gain_Q16, opus_int8 * prev_ind, const int conditional, const int nb_subfr)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/silk/gain_quant.c' l='38'>/* Gain scalar quantization with hysteresis, uniform on log scale */</doc>
