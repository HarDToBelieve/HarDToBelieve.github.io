<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/libsrtp/include/srtp.h' l='588' type='srtp_err_status_t srtp_create(srtp_t * session, const srtp_policy_t * policy)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/libsrtp/include/srtp.h' l='567'>/**
 * @brief srtp_create() allocates and initializes an SRTP session.

 * The function call srtp_create(session, policy) allocates and
 * initializes an SRTP session context, applying the given policy.
 *
 * @param session is a pointer to the SRTP session to which the policy is
 * to be added.
 *
 * @param policy is the srtp_policy_t struct that describes the policy
 * for the session.  The struct may be a single element, or it may be
 * the head of a list, in which case each element of the list is
 * processed.  It may also be NULL, in which case streams should be added
 * later using srtp_add_stream().  The final element of the list @b must
 * have its `next&apos; field set to NULL.
 *
 * @return
 *    - srtp_err_status_ok           if creation succeeded.
 *    - srtp_err_status_alloc_fail   if allocation failed.
 *    - srtp_err_status_init_fail    if initialization failed.
 */</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/libsrtp/srtp/srtp.c' l='2894' ll='2931' type='srtp_err_status_t srtp_create(srtp_t * session, const srtp_policy_t * policy)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/libsrtp/srtp/srtp.c' l='2894'>/* handle for session     */</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/srtp_session.cc' l='310' u='c' c='_ZN7cricket11SrtpSession8DoSetKeyEiiPKhmRKNSt3__16vectorIiNS3_9allocatorIiEEEE'/>
