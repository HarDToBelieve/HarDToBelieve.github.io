<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/rtp_headers.h' l='62' type='uint64_t'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/rtp_headers.h' l='82' u='r' c='_ZN6webrtceqERKNS_19AbsoluteCaptureTimeES2_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/rtp_headers.h' l='82' u='r' c='_ZN6webrtceqERKNS_19AbsoluteCaptureTimeES2_'/>
<offset>0</offset>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/rtp_headers.h' l='47'>// Absolute capture timestamp is the NTP timestamp of when the first frame in
  // a packet was originally captured. This timestamp MUST be based on the same
  // clock as the clock used to generate NTP timestamps for RTCP sender reports
  // on the capture system.
  //
  // It’s not always possible to do an NTP clock readout at the exact moment of
  // when a media frame is captured. A capture system MAY postpone the readout
  // until a more convenient time. A capture system SHOULD have known delays
  // (e.g. from hardware buffers) subtracted from the readout to make the final
  // timestamp as close to the actual capture time as possible.
  //
  // This field is encoded as a 64-bit unsigned fixed-point number with the high
  // 32 bits for the timestamp in seconds and low 32 bits for the fractional
  // part. This is also known as the UQ32.32 format and is what the RTP
  // specification defines as the canonical format to represent NTP timestamps.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/absolute_capture_time_receiver.cc' l='65' u='w' c='_ZN6webrtc27AbsoluteCaptureTimeReceiver15OnReceivePacketEjjjRKNSt3__18optionalINS_19AbsoluteCaptureTimeEEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/absolute_capture_time_receiver.cc' l='75' u='r' c='_ZN6webrtc27AbsoluteCaptureTimeReceiver15OnReceivePacketEjjjRKNSt3__18optionalINS_19AbsoluteCaptureTimeEEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/absolute_capture_time_sender.cc' l='67' u='w' c='_ZN6webrtc25AbsoluteCaptureTimeSender12OnSendPacketEjjjyNSt3__18optionalIxEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_header_extensions.cc' l='109' u='w' c='_ZN6webrtc28AbsoluteCaptureTimeExtension5ParseEN3rtc9ArrayViewIKhLln4711EEEPNS_19AbsoluteCaptureTimeE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_header_extensions.cc' l='134' u='r' c='_ZN6webrtc28AbsoluteCaptureTimeExtension5WriteEN3rtc9ArrayViewIhLln4711EEERKNS_19AbsoluteCaptureTimeE'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/rtp_headers.h' l='62' type='uint64_t'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/rtp_headers.h' l='82' u='r' c='_ZN6webrtceqERKNS_19AbsoluteCaptureTimeES2_'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/rtp_headers.h' l='82' u='r' c='_ZN6webrtceqERKNS_19AbsoluteCaptureTimeES2_'/>
<offset>0</offset>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/rtp_headers.h' l='47'>// Absolute capture timestamp is the NTP timestamp of when the first frame in
  // a packet was originally captured. This timestamp MUST be based on the same
  // clock as the clock used to generate NTP timestamps for RTCP sender reports
  // on the capture system.
  //
  // It’s not always possible to do an NTP clock readout at the exact moment of
  // when a media frame is captured. A capture system MAY postpone the readout
  // until a more convenient time. A capture system SHOULD have known delays
  // (e.g. from hardware buffers) subtracted from the readout to make the final
  // timestamp as close to the actual capture time as possible.
  //
  // This field is encoded as a 64-bit unsigned fixed-point number with the high
  // 32 bits for the timestamp in seconds and low 32 bits for the fractional
  // part. This is also known as the UQ32.32 format and is what the RTP
  // specification defines as the canonical format to represent NTP timestamps.</doc>
