<inh f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/third_party/sigslot/sigslot.h' l='474' c='sigslot::has_slots'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/regathering_controller.h' l='44' ll='93'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/p2p_transport_channel.h' l='441'/>
<size>96</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/regathering_controller.h' l='23'>// Controls regathering of candidates for the ICE transport passed into it,
// reacting to signals like SignalWritableState, SignalNetworkRouteChange, etc.,
// using methods like GetStats to get additional information, and calling
// methods like RegatherOnFailedNetworks on the PortAllocatorSession when
// regathering is desired.
//
// &quot;Regathering&quot; is defined as gathering additional candidates within a single
// ICE generation (or in other words, PortAllocatorSession), and is possible
// when &quot;continual gathering&quot; is enabled. This may allow connectivity to be
// maintained and/or restored without a full ICE restart.
//
// Regathering will only begin after PortAllocationSession is set via
// set_allocator_session. This should be called any time the &quot;active&quot;
// PortAllocatorSession is changed (in other words, when an ICE restart occurs),
// so that candidates are gathered for the &quot;current&quot; ICE generation.
//
// All methods of BasicRegatheringController should be called on the same
// thread as the one passed to the constructor, and this thread should be the
// same one where PortAllocatorSession runs, which is also identical to the
// network thread of the ICE transport, as given by
// P2PTransportChannel::thread().</doc>
<fun r='_ZN6webrtc26BasicRegatheringControllerC1Ev'/>
<fun r='_ZN6webrtc26BasicRegatheringControllerC1ERKNS0_6ConfigEPN7cricket20IceTransportInternalEPN3rtc6ThreadE'/>
<fun r='_ZN6webrtc26BasicRegatheringControllerD1Ev'/>
<fun r='_ZN6webrtc26BasicRegatheringController5StartEv'/>
<fun r='_ZN6webrtc26BasicRegatheringController21set_allocator_sessionEPN7cricket20PortAllocatorSessionE'/>
<fun r='_ZN6webrtc26BasicRegatheringController9SetConfigERKNS0_6ConfigE'/>
<fun r='_ZN6webrtc26BasicRegatheringController26OnIceTransportStateChangedEPN7cricket20IceTransportInternalE'/>
<fun r='_ZN6webrtc26BasicRegatheringController27OnIceTransportWritableStateEPN3rtc23PacketTransportInternalE'/>
<fun r='_ZN6webrtc26BasicRegatheringController28OnIceTransportReceivingStateEPN3rtc23PacketTransportInternalE'/>
<fun r='_ZN6webrtc26BasicRegatheringController33OnIceTransportNetworkRouteChangedENSt3__18optionalIN3rtc12NetworkRouteEEE'/>
<fun r='_ZN6webrtc26BasicRegatheringController44ScheduleRecurringRegatheringOnFailedNetworksEv'/>
<fun r='_ZN6webrtc26BasicRegatheringController48CancelScheduledRecurringRegatheringOnAllNetworksEv'/>
<mbr r='webrtc::BasicRegatheringController::pending_regathering_' o='448' t='std::unique_ptr&lt;ScopedTaskSafety&gt;'/>
<mbr r='webrtc::BasicRegatheringController::config_' o='512' t='webrtc::BasicRegatheringController::Config'/>
<mbr r='webrtc::BasicRegatheringController::ice_transport_' o='576' t='cricket::IceTransportInternal *'/>
<mbr r='webrtc::BasicRegatheringController::allocator_session_' o='640' t='cricket::PortAllocatorSession *'/>
<mbr r='webrtc::BasicRegatheringController::thread_' o='704' t='rtc::Thread *const'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/p2p_transport_channel.cc' l='205' c='_ZN7cricket19P2PTransportChannelC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiPNS_13PortAllocatorEPN6webrtc32AsyncDnsResolverF3893565'/>
<size>96</size>
