<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/include/config.h' l='60' ll='109'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/include/config.h' l='107' c='_ZN6webrtc6ConfigC1ERKS0_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/include/config.h' l='108' c='_ZN6webrtc6ConfigaSERKS0_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/include/audio_processing.h' l='782' c='_ZN6webrtc22AudioProcessingBuilder6CreateERKNS_6ConfigE'/>
<size>24</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/include/config.h' l='40'>// Class Config is designed to ease passing a set of options across webrtc code.
// Options are identified by typename in order to avoid incorrect casts.
//
// Usage:
// * declaring an option:
//    struct Algo1_CostFunction {
//      virtual float cost(int x) const { return x; }
//      virtual ~Algo1_CostFunction() {}
//    };
//
// * accessing an option:
//    config.Get&lt;Algo1_CostFunction&gt;().cost(value);
//
// * setting an option:
//    struct SqrCost : Algo1_CostFunction {
//      virtual float cost(int x) const { return x*x; }
//    };
//    config.Set&lt;Algo1_CostFunction&gt;(new SqrCost());
//
// Note: This class is thread-compatible (like STL containers).</doc>
<fun r='_ZNK6webrtc6Config3GetEv'/>
<fun r='_ZN6webrtc6Config3SetEPT_'/>
<fun r='_ZN6webrtc6ConfigC1Ev'/>
<fun r='_ZN6webrtc6ConfigD1Ev'/>
<fun r='_ZN6webrtc6Config10identifierEv'/>
<fun r='_ZN6webrtc6Config13default_valueEv'/>
<mbr r='webrtc::Config::options_' o='0' t='webrtc::Config::OptionMap'/>
<fun r='_ZN6webrtc6ConfigC1ERKS0_'/>
<fun r='_ZN6webrtc6ConfigaSERKS0_'/>
<fun r='_ZNK6webrtc6Config3GetEv'/>
<fun r='_ZN6webrtc6Config3SetEPT_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/engine/webrtc_voice_engine.cc' l='532' c='_ZN7cricket17WebRtcVoiceEngine12ApplyOptionsERKNS_12AudioOptionsE'/>
<size>24</size>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/audio_processing_impl.h' l='58' c='_ZN6webrtc19AudioProcessingImplC1ERKNS_6ConfigE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/audio_processing_impl.h' l='60' c='_ZN6webrtc19AudioProcessingImplC1ERKNS_6ConfigENSt3__110unique_ptrINS_16CustomProcessingENS4_14default_deleteIS6_EEEES9_NS5_INS_18EchoControlFactoryEN2281309'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/audio_processing_builder_impl.cc' l='24' c='_ZN6webrtc22AudioProcessingBuilder6CreateEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/audio_processing_builder_impl.cc' l='28' c='_ZN6webrtc22AudioProcessingBuilder6CreateERKNS_6ConfigE'/>
<size>24</size>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/audio_processing_impl.cc' l='236' c='_ZN6webrtc19AudioProcessingImplC1ERKNS_6ConfigE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/audio_processing_impl.cc' l='247' c='_ZN6webrtc19AudioProcessingImplC1ERKNS_6ConfigENSt3__110unique_ptrINS_16CustomProcessingENS4_14default_deleteIS6_EEEES9_NS5_INS_18EchoControlFactoryEN2281309'/>
<size>24</size>
<def f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/modules/audio_processing/include/config.h' l='60' ll='109'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/modules/audio_processing/include/config.h' l='107' c='_ZN6webrtc6ConfigC1ERKS0_'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/modules/audio_processing/include/config.h' l='108' c='_ZN6webrtc6ConfigaSERKS0_'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/modules/audio_processing/include/audio_processing.h' l='782' c='_ZN6webrtc22AudioProcessingBuilder6CreateERKNS_6ConfigE'/>
<size>24</size>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/modules/audio_processing/include/config.h' l='40'>// Class Config is designed to ease passing a set of options across webrtc code.
// Options are identified by typename in order to avoid incorrect casts.
//
// Usage:
// * declaring an option:
//    struct Algo1_CostFunction {
//      virtual float cost(int x) const { return x; }
//      virtual ~Algo1_CostFunction() {}
//    };
//
// * accessing an option:
//    config.Get&lt;Algo1_CostFunction&gt;().cost(value);
//
// * setting an option:
//    struct SqrCost : Algo1_CostFunction {
//      virtual float cost(int x) const { return x*x; }
//    };
//    config.Set&lt;Algo1_CostFunction&gt;(new SqrCost());
//
// Note: This class is thread-compatible (like STL containers).</doc>
<fun r='_ZNK6webrtc6Config3GetEv'/>
<fun r='_ZN6webrtc6Config3SetEPT_'/>
<fun r='_ZN6webrtc6ConfigC1Ev'/>
<fun r='_ZN6webrtc6ConfigD1Ev'/>
<fun r='_ZN6webrtc6Config10identifierEv'/>
<fun r='_ZN6webrtc6Config13default_valueEv'/>
<mbr r='webrtc::Config::options_' o='0' t='webrtc::Config::OptionMap'/>
<fun r='_ZN6webrtc6ConfigC1ERKS0_'/>
<fun r='_ZN6webrtc6ConfigaSERKS0_'/>
<fun r='_ZNK6webrtc6Config3GetEv'/>
<fun r='_ZN6webrtc6Config3SetEPT_'/>
