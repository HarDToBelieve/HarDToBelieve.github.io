<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/numerics/event_rate_counter.h' l='20' ll='42'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/numerics/event_rate_counter.h' l='28' c='_ZN6webrtc16EventRateCounter9AddEventsES0_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/numerics/event_rate_counter.cc' l='24' c='_ZN6webrtc16EventRateCounter9AddEventsES0_'/>
<size>96</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/numerics/event_rate_counter.h' l='17'>// Calculates statistics based on events. For example for computing frame rates.
// Note that it doesn&apos;t provide any running statistics or reset funcitonality,
// so it&apos;s mostly useful for end of call statistics.</doc>
<fun r='_ZN6webrtc16EventRateCounter8AddEventENS_9TimestampE'/>
<fun r='_ZN6webrtc16EventRateCounter9AddEventsES0_'/>
<fun r='_ZNK6webrtc16EventRateCounter7IsEmptyEv'/>
<fun r='_ZNK6webrtc16EventRateCounter4RateEv'/>
<fun r='_ZN6webrtc16EventRateCounter8intervalEv'/>
<fun r='_ZNK6webrtc16EventRateCounter13TotalDurationEv'/>
<fun r='_ZNK6webrtc16EventRateCounter5CountEv'/>
<mbr r='webrtc::EventRateCounter::first_time_' o='0' t='webrtc::Timestamp'/>
<mbr r='webrtc::EventRateCounter::last_time_' o='64' t='webrtc::Timestamp'/>
<mbr r='webrtc::EventRateCounter::event_count_' o='128' t='int64_t'/>
<mbr r='webrtc::EventRateCounter::interval_' o='192' t='SampleStats&lt;webrtc::TimeDelta&gt;'/>
<fun r='_ZN6webrtc16EventRateCounter8AddEventENS_9TimestampE'/>
<fun r='_ZN6webrtc16EventRateCounter9AddEventsES0_'/>
<fun r='_ZNK6webrtc16EventRateCounter7IsEmptyEv'/>
<fun r='_ZNK6webrtc16EventRateCounter4RateEv'/>
<fun r='_ZNK6webrtc16EventRateCounter13TotalDurationEv'/>
