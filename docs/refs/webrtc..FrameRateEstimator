<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_video/frame_rate_estimator.h' l='35' ll='56'/>
<size>56</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_video/frame_rate_estimator.h' l='22'>// Class used to estimate a frame-rate using inter-frame intervals.
// Some notes on usage:
// This class is intended to accurately estimate the frame rate during a
// continuous stream. Unlike a traditional rate estimator that looks at number
// of data points within a time window, if the input stops this implementation
// will not smoothly fall down towards 0. This is done so that the estimated
// fps is not affected by edge conditions like if we sample just before or just
// after the next frame.
// To avoid problems if a stream is stopped and restarted (where estimated fps
// could look too low), users of this class should explicitly call Reset() on
// restart.
// Also note that this class is not thread safe, it&apos;s up to the user to guard
// against concurrent access.</doc>
<fun r='_ZN6webrtc18FrameRateEstimatorC1ENS_9TimeDeltaE'/>
<fun r='_ZN6webrtc18FrameRateEstimator7OnFrameENS_9TimestampE'/>
<fun r='_ZNK6webrtc18FrameRateEstimator13GetAverageFpsEv'/>
<fun r='_ZN6webrtc18FrameRateEstimator13GetAverageFpsENS_9TimestampE'/>
<fun r='_ZN6webrtc18FrameRateEstimator5ResetEv'/>
<fun r='_ZN6webrtc18FrameRateEstimator7CullOldENS_9TimestampE'/>
<mbr r='webrtc::FrameRateEstimator::averaging_window_' o='0' t='const webrtc::TimeDelta'/>
<mbr r='webrtc::FrameRateEstimator::frame_times_' o='64' t='std::deque&lt;Timestamp&gt;'/>
<fun r='_ZN6webrtc18FrameRateEstimatorC1ENS_9TimeDeltaE'/>
<fun r='_ZN6webrtc18FrameRateEstimator7OnFrameENS_9TimestampE'/>
<fun r='_ZNK6webrtc18FrameRateEstimator13GetAverageFpsEv'/>
<fun r='_ZN6webrtc18FrameRateEstimator13GetAverageFpsENS_9TimestampE'/>
<fun r='_ZN6webrtc18FrameRateEstimator5ResetEv'/>
<fun r='_ZN6webrtc18FrameRateEstimator7CullOldENS_9TimestampE'/>
