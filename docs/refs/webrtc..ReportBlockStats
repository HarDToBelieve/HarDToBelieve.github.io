<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/report_block_stats.h' l='27' ll='54'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/send_statistics_proxy.h' l='362'/>
<size>32</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/report_block_stats.h' l='20'>// TODO(nisse): Usefulness of this class is somewhat unclear. The inputs are
// cumulative counters, from which we compute deltas, and then accumulate the
// deltas. May be needed on the send side, to handle wraparound in the short
// counters received over RTCP, but should not be needed on the receive side
// where we can use large enough types for all counters we need.

// Helper class for rtcp statistics.</doc>
<fun r='_ZN6webrtc16ReportBlockStatsC1Ev'/>
<fun r='_ZN6webrtc16ReportBlockStatsD1Ev'/>
<fun r='_ZN6webrtc16ReportBlockStats5StoreEjij'/>
<fun r='_ZNK6webrtc16ReportBlockStats21FractionLostInPercentEv'/>
<mbr r='webrtc::ReportBlockStats::num_sequence_numbers_' o='0' t='uint32_t'/>
<mbr r='webrtc::ReportBlockStats::num_lost_sequence_numbers_' o='32' t='uint32_t'/>
<mbr r='webrtc::ReportBlockStats::prev_reports_' o='64' t='std::map&lt;uint32_t, Report&gt;'/>
