<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/neteq/tick_timer.h' l='60' ll='73'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/neteq/tick_timer.h' l='102' c='_ZNK6webrtc9TickTimer15GetNewCountdownEy'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/neteq/tick_timer.h' l='103' c='_ZNK6webrtc9TickTimer15GetNewCountdownEy'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/neteq/tick_timer.h' l='103' c='_ZNK6webrtc9TickTimer15GetNewCountdownEy'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/expand_uma_logger.h' l='47'/>
<size>16</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/neteq/tick_timer.h' l='53'>// Countdown counts down from a given start value with each tick of the
  // associated TickTimer, until zero is reached. The Finished() method will
  // return true if zero has been reached, false otherwise. The intended use is
  // to request a new Countdown object from a TickTimer object with the
  // GetNewCountdown() method. Note: since the Countdown object contains a
  // reference to the TickTimer it is associated with, it cannot outlive the
  // TickTimer.</doc>
<fun r='_ZN6webrtc9TickTimer9CountdownC1ERKS0_y'/>
<fun r='_ZN6webrtc9TickTimer9CountdownD1Ev'/>
<fun r='_ZNK6webrtc9TickTimer9Countdown8FinishedEv'/>
<mbr r='webrtc::TickTimer::Countdown::stopwatch_' o='0' t='const std::unique_ptr&lt;Stopwatch&gt;'/>
<mbr r='webrtc::TickTimer::Countdown::ticks_to_count_' o='64' t='const uint64_t'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/decision_logic.h' l='187'/>
<size>16</size>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/expand_uma_logger.cc' l='17' c='_ZN6webrtc12_GLOBAL__N_115GetNewCountdownERKNS_9TickTimerEi'/>
<size>16</size>
