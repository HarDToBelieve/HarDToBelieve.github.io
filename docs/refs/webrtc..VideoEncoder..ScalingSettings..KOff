<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder.h' l='96'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder.h' l='104'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder.h' l='109' c='_ZN6webrtc12VideoEncoder15ScalingSettingsC1ENS1_4KOffE'/>
<size>1</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder.h' l='94'>// Private magic type for kOff, implicitly convertible to
    // ScalingSettings.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder.h' l='104' type='const webrtc::VideoEncoder::ScalingSettings::KOff'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder.h' l='99'>// TODO(nisse): Would be nicer if kOff were a constant ScalingSettings
    // rather than a magic value. However, absl::optional is not trivially copy
    // constructible, and hence a constant ScalingSettings needs a static
    // initializer, which is strongly discouraged in Chrome. We can hopefully
    // fix this when we switch to absl::optional or std::optional.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder.cc' l='65' c='_ZN6webrtc12VideoEncoder15ScalingSettingsC1ENS1_4KOffE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder.cc' l='81'/>
<size>1</size>
<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder.cc' l='82' type='const VideoEncoder::ScalingSettings::KOff'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder.cc' l='95' u='r' c='_ZN6webrtc12VideoEncoder11EncoderInfoC1Ev'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder.cc' l='80'>// static</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/video_encoder_software_fallback_wrapper.cc' l='429' u='r' c='_ZNK6webrtc12_GLOBAL__N_135VideoEncoderSoftwareFallbackWrapper14GetEncoderInfoEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/engine/simulcast_encoder_adapter.cc' l='819' u='r' c='_ZNK6webrtc23SimulcastEncoderAdapter14GetEncoderInfoEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc' l='1232' u='r' c='_ZNK6webrtc16LibvpxVp8Encoder14GetEncoderInfoEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/codecs/vp9/libvpx_vp9_encoder.cc' l='1672' u='r' c='_ZNK6webrtc16LibvpxVp9Encoder14GetEncoderInfoEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/sdk/objc/native/src/objc_video_encoder_factory.mm' l='117' u='r' c='_ZNK6webrtc12_GLOBAL__N_116ObjCVideoEncoder14GetEncoderInfoEv'/>
<def f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/video_codecs/video_encoder.h' l='96'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/video_codecs/video_encoder.h' l='104'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/video_codecs/video_encoder.h' l='109' c='_ZN6webrtc12VideoEncoder15ScalingSettingsC1ENS1_4KOffE'/>
<size>1</size>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/video_codecs/video_encoder.h' l='94'>// Private magic type for kOff, implicitly convertible to
    // ScalingSettings.</doc>
<def f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/video_codecs/video_encoder.h' l='104' type='const webrtc::VideoEncoder::ScalingSettings::KOff'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/video_codecs/video_encoder.h' l='99'>// TODO(nisse): Would be nicer if kOff were a constant ScalingSettings
    // rather than a magic value. However, absl::optional is not trivially copy
    // constructible, and hence a constant ScalingSettings needs a static
    // initializer, which is strongly discouraged in Chrome. We can hopefully
    // fix this when we switch to absl::optional or std::optional.</doc>
