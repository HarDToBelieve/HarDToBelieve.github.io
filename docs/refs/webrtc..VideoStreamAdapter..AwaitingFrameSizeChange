<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/call/adaptation/video_stream_adapter.h' l='245' ll='249'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/call/adaptation/video_stream_adapter.h' l='250'/>
<size>8</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/call/adaptation/video_stream_adapter.h' l='239'>// Used to avoid adapting twice. Stores the resolution at the time of the last
  // adaptation.
  // TODO(hbos): Can we implement a more general &quot;cooldown&quot; mechanism of
  // resources intead? If we already have adapted it seems like we should wait
  // a while before adapting again, so that we are not acting on usage
  // measurements that are made obsolete/unreliable by an &quot;ongoing&quot; adaptation.</doc>
<fun r='_ZN6webrtc18VideoStreamAdapter23AwaitingFrameSizeChangeC1Ebi'/>
<mbr r='webrtc::VideoStreamAdapter::AwaitingFrameSizeChange::pixels_increased' o='0' t='const bool'/>
<mbr r='webrtc::VideoStreamAdapter::AwaitingFrameSizeChange::frame_size_pixels' o='32' t='const int'/>
