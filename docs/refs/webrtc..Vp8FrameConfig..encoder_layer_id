<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/vp8_frame_config.h' l='81' type='int'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/vp8_frame_config.cc' l='40' u='w' c='_ZN6webrtc14Vp8FrameConfigC1ENS0_11BufferFlagsES1_S1_b'/>
<offset>128</offset>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video_codecs/vp8_frame_config.h' l='70'>// The encoder layer ID is used to utilize the correct bitrate allocator
  // inside the encoder. It does not control references nor determine which
  // &quot;actual&quot; temporal layer this is. The packetizer temporal index determines
  // which layer the encoded frame should be packetized into.
  // Normally these are the same, but current temporal-layer strategies for
  // screenshare use one bitrate allocator for all layers, but attempt to
  // packetize / utilize references to split a stream into multiple layers,
  // with different quantizer settings, to hit target bitrate.
  // TODO(sprang): Screenshare layers are being reconsidered at the time of
  // writing, we might be able to remove this distinction, and have a temporal
  // layer imply both (the normal case).</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/codecs/vp8/default_temporal_layers.cc' l='391' u='w' c='_ZN6webrtc21DefaultTemporalLayers15NextFrameConfigEmj'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc' l='1033' u='r' c='_ZN6webrtc16LibvpxVp8Encoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS4_9allocatorIS6_EEEE'/>
