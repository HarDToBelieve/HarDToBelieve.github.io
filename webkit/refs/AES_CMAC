<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/cmac.h' l='36' type='int AES_CMAC(uint8_t * out, const uint8_t * key, size_t key_len, const uint8_t * in, size_t in_len)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/cmac/cmac.c' l='84' ll='108' type='int AES_CMAC(uint8_t * out, const uint8_t * key, size_t key_len, const uint8_t * in, size_t in_len)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/cmac.h' l='25'>// CMAC.
//
// CMAC is a MAC based on AES-CBC and defined in
// https://tools.ietf.org/html/rfc4493#section-2.3.


// One-shot functions.

// AES_CMAC calculates the 16-byte, CMAC authenticator of |in_len| bytes of
// |in| and writes it to |out|. The |key_len| may be 16 or 32 bytes to select
// between AES-128 and AES-256. It returns one on success or zero on error.</doc>
