<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/cmac.h' l='60' type='int CMAC_Init(CMAC_CTX * ctx, const void * key, size_t key_len, const EVP_CIPHER * cipher, ENGINE * engine)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/cmac/cmac.c' l='102' u='c' c='AES_CMAC'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/cmac/cmac.c' l='174' ll='198' type='int CMAC_Init(CMAC_CTX * ctx, const void * key, size_t key_len, const EVP_CIPHER * cipher, ENGINE * engine)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/cmac.h' l='53'>// CMAC_Init configures |ctx| to use the given |key| and |cipher|. The CMAC RFC
// only specifies the use of AES-128 thus |key_len| should be 16 and |cipher|
// should be |EVP_aes_128_cbc()|. However, this implementation also supports
// AES-256 by setting |key_len| to 32 and |cipher| to |EVP_aes_256_cbc()|. The
// |engine| argument is ignored.
//
// It returns one on success or zero on error.</doc>
