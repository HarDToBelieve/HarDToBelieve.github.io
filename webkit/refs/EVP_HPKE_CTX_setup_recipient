<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/hpke.h' l='174' type='int EVP_HPKE_CTX_setup_recipient(EVP_HPKE_CTX * ctx, const EVP_HPKE_KEY * key, const EVP_HPKE_KDF * kdf, const EVP_HPKE_AEAD * aead, const uint8_t * enc, size_t enc_len, const uint8_t * info, size_t info_len)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/hpke/hpke.c' l='427' ll='445' type='int EVP_HPKE_CTX_setup_recipient(EVP_HPKE_CTX * ctx, const EVP_HPKE_KEY * key, const EVP_HPKE_KDF * kdf, const EVP_HPKE_AEAD * aead, const uint8_t * enc, size_t enc_len, const uint8_t * info, size_t info_len)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/hpke.h' l='166'>// EVP_HPKE_CTX_setup_recipient implements the SetupBaseR HPKE operation. It
// decapsulates the shared secret in |enc| with |key| and sets up |ctx| as a
// recipient context. It returns one on success and zero on failure. Note that
// |enc| may be invalid, in which case this function will return an error.
//
// On success, callers may call |EVP_HPKE_CTX_open| to decrypt messages from the
// sender. Callers must then call |EVP_HPKE_CTX_cleanup| when done. On failure,
// calling |EVP_HPKE_CTX_cleanup| is safe, but not required.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/encrypted_client_hello.cc' l='471' u='c' c='_ZNK4bssl15ECHServerConfig12SetupContextEP15evp_hpke_ctx_stttNS_4SpanIKhEE'/>
