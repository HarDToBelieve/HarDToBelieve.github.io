<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/cipher_extra/internal.h' l='83' type='int EVP_tls_cbc_remove_padding(crypto_word_t * out_padding_ok, size_t * out_len, const uint8_t * in, size_t in_len, size_t block_size, size_t mac_size)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/cipher_extra/internal.h' l='73'>// EVP_tls_cbc_get_padding determines the padding from the decrypted, TLS, CBC
// record in |in|. This decrypted record should not include any &quot;decrypted&quot;
// explicit IV. If the record is publicly invalid, it returns zero. Otherwise,
// it returns one and sets |*out_padding_ok| to all ones (0xfff..f) if the
// padding is valid and zero otherwise. It then sets |*out_len| to the length
// with the padding removed or |in_len| if invalid.
//
// If the function returns one, it runs in time independent of the contents of
// |in|. It is also guaranteed that |*out_len| &gt;= |mac_size|, satisfying
// |EVP_tls_cbc_copy_mac|&apos;s precondition.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/cipher_extra/e_tls.c' l='309' u='c' c='aead_tls_open'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/cipher_extra/tls_cbc.c' l='65' ll='112' type='int EVP_tls_cbc_remove_padding(crypto_word_t * out_padding_ok, size_t * out_len, const uint8_t * in, size_t in_len, size_t block_size, size_t mac_size)'/>
