<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/hkdf.h' l='44' type='int HKDF_extract(uint8_t * out_key, size_t * out_len, const EVP_MD * digest, const uint8_t * secret, size_t secret_len, const uint8_t * salt, size_t salt_len)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/hkdf/hkdf.c' l='33' u='c' c='HKDF'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/hkdf/hkdf.c' l='42' ll='57' type='int HKDF_extract(uint8_t * out_key, size_t * out_len, const EVP_MD * digest, const uint8_t * secret, size_t secret_len, const uint8_t * salt, size_t salt_len)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/hkdf.h' l='40'>// HKDF_extract computes a HKDF PRK (as specified by RFC 5869) from initial
// keying material |secret| and salt |salt| using |digest|, and outputs
// |out_len| bytes to |out_key|. The maximum output size is |EVP_MAX_MD_SIZE|.
// It returns one on success and zero on error.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/hpke/hpke.c' l='87' u='c' c='hpke_labeled_extract'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/tls13_enc.cc' l='51' u='c' c='_ZN4bsslL22hkdf_extract_to_secretEPNS_13SSL_HANDSHAKEENS_4SpanIKhEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/tls13_enc.cc' l='409' u='c' c='_ZN4bsslL16tls13_psk_binderEPhPmtPK9env_md_stNS_4SpanIKhEES7_'/>
