<dec f='webkit/Source/JavaScriptCore/b3/air/AirStackSlotKind.h' l='37' type='0'/>
<use f='webkit/Source/JavaScriptCore/b3/air/AirStackSlot.h' l='49' u='r' c='_ZNK3JSC2B33Air9StackSlot8isLockedEv'/>
<use f='webkit/Source/JavaScriptCore/b3/air/AirStackSlot.h' l='91'/>
<use f='webkit/Source/JavaScriptCore/b3/air/testair.cpp' l='423' u='r' c='_ZN12_GLOBAL__N_127testShuffleBroadcastAllRegsEv'/>
<use f='webkit/Source/JavaScriptCore/b3/air/testair.cpp' l='884' u='r' c='_ZN12_GLOBAL__N_123testShuffleShiftAllRegsEv'/>
<use f='webkit/Source/JavaScriptCore/b3/air/testair.cpp' l='921' u='r' c='_ZN12_GLOBAL__N_124testShuffleRotateAllRegsEv'/>
<doc f='webkit/Source/JavaScriptCore/b3/air/AirStackSlotKind.h' l='33'>// A locked stack slot is an area of stack requested by the client. It cannot be killed. The
    // client can get its FP offset and write to it from stack walking code, so we must assume
    // that reads and writes to a locked stack slot can be clobbered the same way as reads and
    // writes to any memory location.</doc>
