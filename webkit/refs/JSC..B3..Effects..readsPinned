<dec f='webkit/Source/JavaScriptCore/b3/B3Effects.h' l='72' type='bool'/>
<use f='webkit/Source/JavaScriptCore/b3/B3Effects.h' l='97' u='w' c='_ZN3JSC2B37Effects7forCallEv'/>
<offset>40</offset>
<doc f='webkit/Source/JavaScriptCore/b3/B3Effects.h' l='63'>// B3 understands things about pinned registers. Therefore, it needs to know who reads them and
    // who writes them. We don&apos;t track this on a per-register basis because that would be harder and
    // we don&apos;t need it. Note that if you want to construct an immutable pinned register while also
    // having other pinned registers that are mutable, then you can use ArgumentReg. Also note that
    // nobody will stop you from making this get out-of-sync with your clobbered register sets in
    // Patchpoint. It&apos;s recommended that you err on the side of being conservative.
    // FIXME: Explore making these be RegisterSets. That&apos;s mainly hard because it would be awkward to
    // reconcile with StackmapValue&apos;s support for clobbered regs.
    // https://bugs.webkit.org/show_bug.cgi?id=163173</doc>
<use f='webkit/Source/JavaScriptCore/b3/testb3_7.cpp' l='688' u='w' c='_Z19testLICMReadsPinnedv'/>
<use f='webkit/Source/JavaScriptCore/b3/testb3_7.cpp' l='956' u='w' c='_Z31testLICMReadsPinnedWritesPinnedv'/>
<use f='webkit/Source/JavaScriptCore/wasm/WasmAirIRGenerator.cpp' l='3154' u='w' c='_ZN3JSC4Wasm14AirIRGenerator18emitCallPatchpointEPNS_2B33Air10BasicBlockERKNS0_9SignatureERKN3WTF6VectorINS0_8TypedTmpELm8ENS9_15CrashOnOverflowELm16E1788167'/>
