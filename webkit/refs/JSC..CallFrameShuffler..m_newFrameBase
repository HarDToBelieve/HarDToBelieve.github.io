<dec f='webkit/Source/JavaScriptCore/jit/CallFrameShuffler.h' l='711' type='JSC::GPRReg'/>
<use f='webkit/Source/JavaScriptCore/jit/CallFrameShuffler.h' l='716' u='r' c='_ZNK3JSC17CallFrameShuffler11isUndecidedEv'/>
<use f='webkit/Source/JavaScriptCore/jit/CallFrameShuffler.h' l='721' u='r' c='_ZNK3JSC17CallFrameShuffler10isSlowPathEv'/>
<use f='webkit/Source/JavaScriptCore/jit/CallFrameShuffler.h' l='726' u='r' c='_ZNK3JSC17CallFrameShuffler13addressForNewENS_15VirtualRegisterE'/>
<offset>8960</offset>
<doc f='webkit/Source/JavaScriptCore/jit/CallFrameShuffler.h' l='697'>// m_newFrameBase is the register relative to which we access
    // slots in the new call frame, and we always make it point to
    // wherever the stack pointer will be right before making the
    // actual call/jump. The actual base of the new frame is at offset
    // m_newFrameOffset relative to m_newFrameBase.
    //
    //  - For an actual tail call, m_newFrameBase is computed
    //    dynamically, and m_newFrameOffset varies between 0 and -2
    //    depending on the architecture&apos;s calling convention (see
    //    prepareForTailCall).
    //
    //  - For a slow path call, m_newFrameBase is the actual stack
    //    pointer, and m_newFrameOffset is - CallerFrameAndPCSize,
    //    following the convention for a regular call.</doc>
