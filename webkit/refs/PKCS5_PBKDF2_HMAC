<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/evp.h' l='480' type='int PKCS5_PBKDF2_HMAC(const char * password, size_t password_len, const uint8_t * salt, size_t salt_len, unsigned int iterations, const EVP_MD * digest, size_t key_len, uint8_t * out_key)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/evp.h' l='471'>// Password stretching.
//
// Password stretching functions take a low-entropy password and apply a slow
// function that results in a key suitable for use in symmetric
// cryptography.

// PKCS5_PBKDF2_HMAC computes |iterations| iterations of PBKDF2 of |password|
// and |salt|, using |digest|, and outputs |key_len| bytes to |out_key|. It
// returns one on success and zero on allocation failure or if iterations is 0.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/evp/pbkdf.c' l='65' ll='138' type='int PKCS5_PBKDF2_HMAC(const char * password, size_t password_len, const uint8_t * salt, size_t salt_len, unsigned int iterations, const EVP_MD * digest, size_t key_len, uint8_t * out_key)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/evp/pbkdf.c' l='144' u='c' c='PKCS5_PBKDF2_HMAC_SHA1'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/pkcs8/p5_pbev2.c' l='157' u='c' c='pkcs5_pbe2_cipher_init'/>
