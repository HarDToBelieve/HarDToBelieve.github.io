<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/ssl.h' l='4873' type='SSL_SESSION * SSL_get_session(const SSL * ssl)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/ssl.h' l='4859'>// SSL_get_session returns a non-owning pointer to |ssl|&apos;s session. For
// historical reasons, which session it returns depends on |ssl|&apos;s state.
//
// Prior to the start of the initial handshake, it returns the session the
// caller set with |SSL_set_session|. After the initial handshake has finished
// and if no additional handshakes are in progress, it returns the currently
// active session. Its behavior is undefined while a handshake is in progress.
//
// If trying to add new sessions to an external session cache, use
// |SSL_CTX_sess_set_new_cb| instead. In particular, using the callback is
// required as of TLS 1.3. For compatibility, this function will return an
// unresumable session which may be cached, but will never be resumed.
//
// If querying properties of the connection, use APIs on the |SSL| object.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_cert.cc' l='930' u='c' c='SSL_get0_peer_certificates'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_lib.cc' l='1996' u='c' c='SSL_get_curve_id'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_lib.cc' l='2140' u='c' c='SSL_get0_signed_cert_timestamp_list'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_lib.cc' l='2153' u='c' c='SSL_get0_ocsp_response'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_lib.cc' l='2375' u='c' c='SSL_get0_peer_application_settings'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_lib.cc' l='2383' u='c' c='SSL_has_application_settings'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_lib.cc' l='2537' u='c' c='SSL_get_current_cipher'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_lib.cc' l='2771' u='c' c='SSL_get_psk_identity'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_lib.cc' l='2958' u='c' c='SSL_get_peer_signature_algorithm'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_session.cc' l='1078' ll='1093' type='SSL_SESSION * SSL_get_session(const SSL * ssl)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_session.cc' l='1096' u='c' c='SSL_get1_session'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_x509.cc' l='529' u='c' c='SSL_get_peer_certificate'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_x509.cc' l='542' u='c' c='SSL_get_peer_cert_chain'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_x509.cc' l='554' u='c' c='SSL_get_peer_full_cert_chain'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_x509.cc' l='710' u='c' c='SSL_get_verify_result'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_enc.cc' l='329' u='c' c='SSL_generate_key_block'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_enc.cc' l='379' u='c' c='SSL_export_keying_material'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/tls13_enc.cc' l='291' u='c' c='_ZN4bssl24tls13_rotate_traffic_keyEP6ssl_st20evp_aead_direction_t'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/tls13_enc.cc' l='373' u='c' c='_ZN4bssl28tls13_export_keying_materialEP6ssl_stNS_4SpanIhEENS2_IKhEENS2_IKcEES5_'/>
