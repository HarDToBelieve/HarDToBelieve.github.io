<inh f='webkit/WebKitBuild/Debug/usr/local/include/wtf/WeakPtr.h' l='218' c='WTF::CanMakeWeakPtr'/>
<inh f='webkit/Source/WebKit/UIProcess/WebAuthentication/Cocoa/HidConnection.h' l='40' c='WebKit::HidConnection'/>
<def f='webkit/Source/WebKit/UIProcess/WebAuthentication/Mock/MockHidConnection.h' l='46' ll='73'/>
<use f='webkit/Source/WebKit/UIProcess/WebAuthentication/Mock/MockHidConnection.h' l='46'/>
<use f='webkit/Source/WebKit/UIProcess/WebAuthentication/Mock/MockHidService.cpp' l='53' c='_ZNK6WebKit14MockHidService19createHidConnectionEP13__IOHIDDevice'/>
<size>336</size>
<doc f='webkit/Source/WebKit/UIProcess/WebAuthentication/Mock/MockHidConnection.h' l='37'>// The following basically simulates an external HID token that:
//    1. Supports only one protocol, either CTAP2 or U2F.
//    2. Doesn&apos;t support resident keys,
//    3. Doesn&apos;t support user verification.
// There are four stages for each CTAP request:
// FSM: Info::Init =&gt; Info::Msg =&gt; Request::Init =&gt; Request::Msg
// There are indefinite stages for each U2F request:
// FSM: Info::Init =&gt; Info::Msg =&gt; [Request::Init =&gt; Request::Msg]+
// According to different combinations of error and stages, error will manifest differently.</doc>
<fun r='_ZN6WebKit17MockHidConnectionC1EP13__IOHIDDeviceRKN7WebCore34MockWebAuthenticationConfigurationE'/>
<fun r='_ZN6WebKit17MockHidConnection10initializeEv'/>
<fun r='_ZN6WebKit17MockHidConnection9terminateEv'/>
<fun r='_ZN6WebKit17MockHidConnection8sendSyncERKN3WTF6VectorIhLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE'/>
<fun r='_ZN6WebKit17MockHidConnection4sendEON3WTF6VectorIhLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEEONS1_17CompletionHandlerIFvNS_13HidConnection8DataSentEEEE'/>
<fun r='_ZN6WebKit17MockHidConnection36registerDataReceivedCallbackInternalEv'/>
<fun r='_ZN6WebKit17MockHidConnection15assembleRequestEON3WTF6VectorIhLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE'/>
<fun r='_ZN6WebKit17MockHidConnection12parseRequestEv'/>
<fun r='_ZN6WebKit17MockHidConnection11feedReportsEv'/>
<fun r='_ZNK6WebKit17MockHidConnection11stagesMatchEv'/>
<fun r='_ZN6WebKit17MockHidConnection25shouldContinueFeedReportsEv'/>
<fun r='_ZN6WebKit17MockHidConnection19continueFeedReportsEv'/>
<mbr r='WebKit::MockHidConnection::m_configuration' o='832' t='WebCore::MockWebAuthenticationConfiguration'/>
<mbr r='WebKit::MockHidConnection::m_requestMessage' o='1920' t='std::optional&lt;fido::FidoHidMessage&gt;'/>
<mbr r='WebKit::MockHidConnection::m_stage' o='2432' t='WebCore::MockWebAuthenticationConfiguration::HidStage'/>
<mbr r='WebKit::MockHidConnection::m_subStage' o='2440' t='WebCore::MockWebAuthenticationConfiguration::HidSubStage'/>
<mbr r='WebKit::MockHidConnection::m_currentChannel' o='2464' t='uint32_t'/>
<mbr r='WebKit::MockHidConnection::m_requireResidentKey' o='2496' t='bool'/>
<mbr r='WebKit::MockHidConnection::m_requireUserVerification' o='2504' t='bool'/>
<mbr r='WebKit::MockHidConnection::m_nonce' o='2560' t='Vector&lt;uint8_t&gt;'/>
<fun r='_ZN6WebKit17MockHidConnectionC1EP13__IOHIDDeviceRKN7WebCore34MockWebAuthenticationConfigurationE'/>
<fun r='_ZN6WebKit17MockHidConnection10initializeEv'/>
<fun r='_ZN6WebKit17MockHidConnection9terminateEv'/>
<fun r='_ZN6WebKit17MockHidConnection8sendSyncERKN3WTF6VectorIhLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE'/>
<fun r='_ZN6WebKit17MockHidConnection4sendEON3WTF6VectorIhLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEEONS1_17CompletionHandlerIFvNS_13HidConnection8DataSentEEEE'/>
<fun r='_ZN6WebKit17MockHidConnection36registerDataReceivedCallbackInternalEv'/>
<fun r='_ZN6WebKit17MockHidConnection15assembleRequestEON3WTF6VectorIhLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE'/>
<fun r='_ZN6WebKit17MockHidConnection12parseRequestEv'/>
<fun r='_ZN6WebKit17MockHidConnection11feedReportsEv'/>
<fun r='_ZNK6WebKit17MockHidConnection11stagesMatchEv'/>
<fun r='_ZN6WebKit17MockHidConnection25shouldContinueFeedReportsEv'/>
<fun r='_ZN6WebKit17MockHidConnection19continueFeedReportsEv'/>
