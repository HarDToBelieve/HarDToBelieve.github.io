<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/isac/fix/include/isacfix.h' l='97' type='int WebRtcIsacfix_Encode(ISACFIX_MainStruct * ISAC_main_inst, const int16_t * speechIn, uint8_t * encoded)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/isac/fix/source/isac_fix_type.h' l='56' u='c' c='_ZN6webrtc7IsacFix6EncodeEP18ISACFIX_MainStructPKsPh'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/isac/fix/include/isacfix.h' l='76'>/****************************************************************************
 * WebRtcIsacfix_Encode(...)
 *
 * This function encodes 10ms frame(s) and inserts it into a package.
 * Input speech length has to be 160 samples (10ms). The encoder buffers those
 * 10ms frames until it reaches the chosen Framesize (480 or 960 samples
 * corresponding to 30 or 60 ms frames), and then proceeds to the encoding.
 *
 * Input:
 *      - ISAC_main_inst    : ISAC instance.
 *      - speechIn          : input speech vector.
 *
 * Output:
 *      - encoded           : the encoded data vector
 *
 * Return value             : &gt;0 - Length (in bytes) of coded data
 *                             0 - The buffer didn&apos;t reach the chosen framesize
 *                                 so it keeps buffering speech samples.
 *                            -1 - Error
 */</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/isac/fix/source/isacfix.c' l='348' ll='378' type='int WebRtcIsacfix_Encode(ISACFIX_MainStruct * ISAC_main_inst, const int16_t * speechIn, uint8_t * encoded)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/isac/fix/source/isacfix.c' l='326'>/****************************************************************************
 * WebRtcIsacfix_Encode(...)
 *
 * This function encodes 10ms frame(s) and inserts it into a package.
 * Input speech length has to be 160 samples (10ms). The encoder buffers those
 * 10ms frames until it reaches the chosen Framesize (480 or 960 samples
 * corresponding to 30 or 60 ms frames), and then proceeds to the encoding.
 *
 * Input:
 *      - ISAC_main_inst    : ISAC instance.
 *      - speechIn          : input speech vector.
 *
 * Output:
 *      - encoded           : the encoded data vector
 *
 * Return value:
 *                          : &gt;0 - Length (in bytes) of coded data
 *                          :  0 - The buffer didn&apos;t reach the chosen framesize
 *                            so it keeps buffering speech samples.
 *                          : -1 - Error
 */</doc>
