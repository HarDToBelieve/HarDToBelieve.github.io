<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_audio/vad/vad_sp.h' l='31' type='void WebRtcVad_Downsampling(const int16_t * signal_in, int16_t * signal_out, int32_t * filter_state, size_t in_length)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_audio/vad/vad_core.c' l='642' u='c' c='WebRtcVad_CalcVad32khz'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_audio/vad/vad_core.c' l='646' u='c' c='WebRtcVad_CalcVad32khz'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_audio/vad/vad_core.c' l='663' u='c' c='WebRtcVad_CalcVad16khz'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_audio/vad/vad_sp.h' l='18'>// Downsamples the signal by a factor 2, eg. 32-&gt;16 or 16-&gt;8.
//
// Inputs:
//      - signal_in     : Input signal.
//      - in_length     : Length of input signal in samples.
//
// Input &amp; Output:
//      - filter_state  : Current filter states of the two all-pass filters. The
//                        |filter_state| is updated after all samples have been
//                        processed.
//
// Output:
//      - signal_out    : Downsampled signal (of length |in_length| / 2).</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_audio/vad/vad_sp.c' l='25' ll='53' type='void WebRtcVad_Downsampling(const int16_t * signal_in, int16_t * signal_out, int32_t * filter_state, size_t in_length)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_audio/vad/vad_sp.c' l='23'>// TODO(bjornv): Move this function to vad_filterbank.c.
// Downsampling filter based on splitting filter and allpass functions.</doc>
