<doc f='webkit/Source/WebCore/bridge/objc/WebScriptObject.h' l='197'>/*!
    @class WebScriptObject
    @discussion WebScriptObjects are used to wrap script objects passed from
    script environments to Objective-C. WebScriptObjects cannot be created
    directly. In normal uses of WebKit, you gain access to the script
    environment using the &quot;windowScriptObject&quot; method on WebView.

    The following KVC methods are commonly used to access properties of the
    WebScriptObject:

        - (void)setValue:(id)value forKey:(NSString *)key
        - (id)valueForKey:(NSString *)key

    As it possible to remove attributes from web script objects, the following
    additional method augments the basic KVC methods:

        - (void)removeWebScriptKey:(NSString *)name;

    Also, since the sparse array access allowed in script objects doesn&apos;t map well
    to NSArray, the following methods can be used to access index based properties:

        - (id)webScriptValueAtIndex:(unsigned)index;
        - (void)setWebScriptValueAtIndex:(unsigned)index value:(id)value;
*/</doc>
<use f='webkit/Source/WebCore/bindings/js/ScriptController.h' l='163' c='_ZN7WebCore16ScriptController18windowScriptObjectEv'/>
<use f='webkit/Source/WebCore/bindings/js/ScriptController.h' l='207'/>
<use f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/ScriptController.h' l='163' c='_ZN7WebCore16ScriptController18windowScriptObjectEv'/>
<use f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/ScriptController.h' l='207'/>
<doc f='webkit/WebKitBuild/Debug/WebKitLegacy.framework/Versions/A/PrivateHeaders/WebScriptObject.h' l='197'>/*!
    @class WebScriptObject
    @discussion WebScriptObjects are used to wrap script objects passed from
    script environments to Objective-C. WebScriptObjects cannot be created
    directly. In normal uses of WebKit, you gain access to the script
    environment using the &quot;windowScriptObject&quot; method on WebView.

    The following KVC methods are commonly used to access properties of the
    WebScriptObject:

        - (void)setValue:(id)value forKey:(NSString *)key
        - (id)valueForKey:(NSString *)key

    As it possible to remove attributes from web script objects, the following
    additional method augments the basic KVC methods:

        - (void)removeWebScriptKey:(NSString *)name;

    Also, since the sparse array access allowed in script objects doesn&apos;t map well
    to NSArray, the following methods can be used to access index based properties:

        - (id)webScriptValueAtIndex:(unsigned)index;
        - (void)setWebScriptValueAtIndex:(unsigned)index value:(id)value;
*/</doc>
<doc f='webkit/WebKitBuild/Debug/WebKit.framework/Versions/A/Headers/WebScriptObject.h' l='197'>/*!
    @class WebScriptObject
    @discussion WebScriptObjects are used to wrap script objects passed from
    script environments to Objective-C. WebScriptObjects cannot be created
    directly. In normal uses of WebKit, you gain access to the script
    environment using the &quot;windowScriptObject&quot; method on WebView.

    The following KVC methods are commonly used to access properties of the
    WebScriptObject:

        - (void)setValue:(id)value forKey:(NSString *)key
        - (id)valueForKey:(NSString *)key

    As it possible to remove attributes from web script objects, the following
    additional method augments the basic KVC methods:

        - (void)removeWebScriptKey:(NSString *)name;

    Also, since the sparse array access allowed in script objects doesn&apos;t map well
    to NSArray, the following methods can be used to access index based properties:

        - (id)webScriptValueAtIndex:(unsigned)index;
        - (void)setWebScriptValueAtIndex:(unsigned)index value:(id)value;
*/</doc>
<doc f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/WebScriptObject.h' l='197'>/*!
    @class WebScriptObject
    @discussion WebScriptObjects are used to wrap script objects passed from
    script environments to Objective-C. WebScriptObjects cannot be created
    directly. In normal uses of WebKit, you gain access to the script
    environment using the &quot;windowScriptObject&quot; method on WebView.

    The following KVC methods are commonly used to access properties of the
    WebScriptObject:

        - (void)setValue:(id)value forKey:(NSString *)key
        - (id)valueForKey:(NSString *)key

    As it possible to remove attributes from web script objects, the following
    additional method augments the basic KVC methods:

        - (void)removeWebScriptKey:(NSString *)name;

    Also, since the sparse array access allowed in script objects doesn&apos;t map well
    to NSArray, the following methods can be used to access index based properties:

        - (id)webScriptValueAtIndex:(unsigned)index;
        - (void)setWebScriptValueAtIndex:(unsigned)index value:(id)value;
*/</doc>
