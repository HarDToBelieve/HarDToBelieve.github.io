<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/curve25519.h' l='51' type='int X25519(uint8_t * out_shared_key, const uint8_t * private_key, const uint8_t * peer_public_value)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/curve25519/curve25519.c' l='2123' ll='2129' type='int X25519(uint8_t * out_shared_key, const uint8_t * private_key, const uint8_t * peer_public_value)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/curve25519.h' l='45'>// X25519 writes a shared key to |out_shared_key| that is calculated from the
// given private key and the peer&apos;s public value. It returns one on success and
// zero on error.
//
// Don&apos;t use the shared key directly, rather use a KDF and also include the two
// public values as inputs.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/evp/p_x25519.c' l='71' u='c' c='pkey_x25519_derive'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/hpke/hpke.c' l='162' u='c' c='x25519_encap_with_seed'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/hpke/hpke.c' l='187' u='c' c='x25519_decap'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_key_share.cc' l='170' u='c' c='_ZN4bssl12_GLOBAL__N_114X25519KeyShare6FinishEPNS_5ArrayIhEEPhNS_4SpanIKhEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_key_share.cc' l='237' u='c' c='_ZN4bssl12_GLOBAL__N_114CECPQ2KeyShare6AcceptEP6cbb_stPNS_5ArrayIhEEPhNS_4SpanIKhEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_key_share.cc' l='269' u='c' c='_ZN4bssl12_GLOBAL__N_114CECPQ2KeyShare6FinishEPNS_5ArrayIhEEPhNS_4SpanIKhEE'/>
