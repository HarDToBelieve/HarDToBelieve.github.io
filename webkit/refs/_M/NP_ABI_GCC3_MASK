<dec f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/npapi.h' l='312'/>
<doc f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/npapi.h' l='299'>/*
 *   The following masks are applied on certain platforms to NPNV and
 *   NPPV selectors that pass around pointers to COM interfaces. Newer
 *   compilers on some platforms may generate vtables that are not
 *   compatible with older compilers. To prevent older plugins from
 *   not understanding a new browser&apos;s ABI, these masks change the
 *   values of those selectors on those platforms. To remain backwards
 *   compatible with different versions of the browser, plugins can
 *   use these masks to dynamically determine and use the correct C++
 *   ABI that the browser is expecting. This does not apply to Windows
 *   as Microsoft&apos;s COM ABI will likely not change.
 */</doc>
<dec f='webkit/WebKitBuild/Debug/WebKitLegacy.framework/Versions/A/PrivateHeaders/npapi.h' l='312'/>
<doc f='webkit/WebKitBuild/Debug/WebKitLegacy.framework/Versions/A/PrivateHeaders/npapi.h' l='299'>/*
 *   The following masks are applied on certain platforms to NPNV and
 *   NPPV selectors that pass around pointers to COM interfaces. Newer
 *   compilers on some platforms may generate vtables that are not
 *   compatible with older compilers. To prevent older plugins from
 *   not understanding a new browser&apos;s ABI, these masks change the
 *   values of those selectors on those platforms. To remain backwards
 *   compatible with different versions of the browser, plugins can
 *   use these masks to dynamically determine and use the correct C++
 *   ABI that the browser is expecting. This does not apply to Windows
 *   as Microsoft&apos;s COM ABI will likely not change.
 */</doc>
<dec f='webkit/Source/WebCore/plugins/npapi.h' l='312'/>
<doc f='webkit/Source/WebCore/plugins/npapi.h' l='299'>/*
 *   The following masks are applied on certain platforms to NPNV and
 *   NPPV selectors that pass around pointers to COM interfaces. Newer
 *   compilers on some platforms may generate vtables that are not
 *   compatible with older compilers. To prevent older plugins from
 *   not understanding a new browser&apos;s ABI, these masks change the
 *   values of those selectors on those platforms. To remain backwards
 *   compatible with different versions of the browser, plugins can
 *   use these masks to dynamically determine and use the correct C++
 *   ABI that the browser is expecting. This does not apply to Windows
 *   as Microsoft&apos;s COM ABI will likely not change.
 */</doc>
