<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/system_wrappers/include/metrics.h' l='104'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/system_wrappers/include/metrics.h' l='56'>// Macros for allowing WebRTC clients (e.g. Chrome) to gather and aggregate
// statistics.
//
// Histogram for counters.
// RTC_HISTOGRAM_COUNTS(name, sample, min, max, bucket_count);
//
// Histogram for enumerators.
// The boundary should be above the max enumerator sample.
// RTC_HISTOGRAM_ENUMERATION(name, sample, boundary);
//
//
// The macros use the methods HistogramFactoryGetCounts,
// HistogramFactoryGetEnumeration and HistogramAdd.
//
// By default WebRTC provides implementations of the aforementioned methods
// that can be found in system_wrappers/source/metrics.cc. If clients want to
// provide a custom version, they will have to:
//
// 1. Compile WebRTC defining the preprocessor macro
//    WEBRTC_EXCLUDE_METRICS_DEFAULT (if GN is used this can be achieved
//    by setting the GN arg rtc_exclude_metrics_default to true).
// 2. Provide implementations of:
//    Histogram* webrtc::metrics::HistogramFactoryGetCounts(
//        const std::string&amp; name, int sample, int min, int max,
//        int bucket_count);
//    Histogram* webrtc::metrics::HistogramFactoryGetEnumeration(
//        const std::string&amp; name, int sample, int boundary);
//    void webrtc::metrics::HistogramAdd(
//        Histogram* histogram_pointer, const std::string&amp; name, int sample);
//
// Example usage:
//
// RTC_HISTOGRAM_COUNTS(&quot;WebRTC.Video.NacksSent&quot;, nacks_sent, 1, 100000, 100);
//
// enum Types {
//   kTypeX,
//   kTypeY,
//   kBoundary,
// };
//
// RTC_HISTOGRAM_ENUMERATION(&quot;WebRTC.Types&quot;, kTypeX, kBoundary);
//
// NOTE: It is recommended to do the Chromium review for modifications to
// histograms.xml before new metrics are committed to WebRTC.

// Macros for adding samples to a named histogram.

// Histogram for counters (exponentially spaced buckets).</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/call/bitrate_allocator.cc' l='369' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_mixer/frame_combiner.cc' l='225' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/pacing/bitrate_prober.cc' l='195' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/receive_statistics_proxy.cc' l='173' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/receive_statistics_proxy.cc' l='197' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/receive_statistics_proxy2.cc' l='192' u='c'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/receive_statistics_proxy2.cc' l='216' u='c'/>
