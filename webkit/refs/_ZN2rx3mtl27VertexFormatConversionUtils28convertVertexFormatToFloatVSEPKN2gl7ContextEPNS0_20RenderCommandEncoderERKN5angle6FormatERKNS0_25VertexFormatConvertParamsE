<dec f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_render_utils.h' l='515' type='angle::Result rx::mtl::VertexFormatConversionUtils::convertVertexFormatToFloatVS(const gl::Context * context, rx::mtl::RenderCommandEncoder * renderEncoder, const angle::Format &amp; srcAngleFormat, const rx::mtl::VertexFormatConvertParams &amp; params)'/>
<doc f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_render_utils.h' l='512'>// Convert vertex format to float. Vertex shader version. This version should be used if
    // a render pass is active and we don&apos;t want to break it. Explicit memory barrier must be
    // supported.</doc>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_render_utils.mm' l='1187' u='c' c='_ZN2rx3mtl11RenderUtils28convertVertexFormatToFloatVSEPKN2gl7ContextEPNS0_20RenderCommandEncoderERKN5angle6FormatERKNS0_25VertexFormatConvertParamsE'/>
<def f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_render_utils.mm' l='2829' ll='2854' type='angle::Result rx::mtl::VertexFormatConversionUtils::convertVertexFormatToFloatVS(const gl::Context * context, rx::mtl::RenderCommandEncoder * cmdEncoder, const angle::Format &amp; srcAngleFormat, const rx::mtl::VertexFormatConvertParams &amp; params)'/>
