<dec f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_utils.h' l='41' type='angle::Result rx::mtl::InitializeTextureContentsGPU(const gl::Context * _Nonnull context, const rx::mtl::TextureRef &amp; texture, const rx::mtl::Format &amp; textureObjFormat, const rx::mtl::ImageNativeIndex &amp; index, MTLColorWriteMask channelsToInit)'/>
<doc f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_utils.h' l='39'>// Same as above but using GPU clear operation instead of CPU.
// - channelsToInit parameter controls which channels will get their content initialized.</doc>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/IOSurfaceSurfaceMtl.mm' l='328' u='c' c='_ZN2rx19IOSurfaceSurfaceMtl25ensureColorTextureCreatedEPKN2gl7ContextE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_utils.mm' l='208' u='c' c='_ZN2rx3mtl25InitializeTextureContentsEPKN2gl7ContextERKNSt3__110shared_ptrINS0_7TextureEEERKNS0_6FormatERKNS0_16ImageNativeIndexE'/>
<def f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_utils.mm' l='215' ll='304' type='angle::Result rx::mtl::InitializeTextureContentsGPU(const gl::Context * _Nonnull context, const rx::mtl::TextureRef &amp; texture, const rx::mtl::Format &amp; textureObjFormat, const rx::mtl::ImageNativeIndex &amp; index, MTLColorWriteMask channelsToInit)'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/mtl_utils.mm' l='230' u='c' c='_ZN2rx3mtl28InitializeTextureContentsGPUEPKN2gl7ContextERKNSt3__110shared_ptrINS0_7TextureEEERKNS0_6FormatERKNS0_16ImageNativeIndexEm'/>
