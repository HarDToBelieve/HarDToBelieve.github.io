<dec f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/AstHelpers.h' l='146' type='sh::TIntermTyped &amp; sh::CoerceSimple(sh::TBasicType toBasicType, sh::TIntermTyped &amp; fromNode, bool needsExplicitBoolCast = false)'/>
<doc f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/AstHelpers.h' l='143'>// Coerces `fromNode` to `toType` by a constructor call of `toType` if their types differ.
// Vector and matrix dimensions are retained.
// Array types are not allowed.</doc>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/AddExplicitTypeCasts.cpp' l='60' u='c' c='_ZN12_GLOBAL__N_18Rewriter18visitAggregatePostERN2sh16TIntermAggregateE'/>
<def f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/AstHelpers.cpp' l='423' ll='470' type='sh::TIntermTyped &amp; sh::CoerceSimple(sh::TBasicType toBasicType, sh::TIntermTyped &amp; fromNode, bool needsExplicitBoolCast = false)'/>
