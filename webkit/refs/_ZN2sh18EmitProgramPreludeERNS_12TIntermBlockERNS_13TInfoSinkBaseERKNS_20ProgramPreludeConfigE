<dec f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/ProgramPrelude.h' l='44' type='bool sh::EmitProgramPrelude(sh::TIntermBlock &amp; root, sh::TInfoSinkBase &amp; out, const sh::ProgramPreludeConfig &amp; ppc)'/>
<doc f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/ProgramPrelude.h' l='40'>// This emits fixed helper Metal code directly without adding code to the AST. This walks the AST to
// figure out the required what prelude MSL code is needed for various things in the AST. You can
// think of this as effectively inlining various portions of a helper library into the emitted
// Metal program.</doc>
<use f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/EmitMetal.cpp' l='2645' u='c' c='_ZN2sh9EmitMetalERNS_9TCompilerERNS_12TIntermBlockERNS_5IdGenERKNS_15PipelineStructsERKNS_10InvariantsERNS_9SymbolEnvERKNS_20ProgramPreludeConfigE'/>
<def f='webkit/Source/ThirdParty/ANGLE/src/compiler/translator/TranslatorMetalDirect/ProgramPrelude.cpp' l='3950' ll='3955' type='bool sh::EmitProgramPrelude(sh::TIntermBlock &amp; root, sh::TInfoSinkBase &amp; out, const sh::ProgramPreludeConfig &amp; ppc)'/>
