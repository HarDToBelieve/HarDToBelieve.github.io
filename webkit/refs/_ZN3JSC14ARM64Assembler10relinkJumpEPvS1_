<def f='webkit/Source/JavaScriptCore/assembler/ARM64Assembler.h' l='2880' ll='2884' type='static void JSC::ARM64Assembler::relinkJump(void * from, void * to)'/>
<use f='webkit/Source/JavaScriptCore/assembler/ARM64Assembler.h' l='2888' u='c' c='_ZN3JSC14ARM64Assembler15relinkJumpToNopEPv'/>
<doc f='webkit/Source/JavaScriptCore/assembler/ARM64Assembler.h' l='2875'>// The static relink, repatch, and replace methods can use can
    // use |from| for both the write and executable address for call
    // and jump patching as they&apos;re modifying existing (linked) code,
    // so the address being provided is correct for relative address
    // computation.</doc>
<def f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/ARM64Assembler.h' l='2880' ll='2884' type='static void JSC::ARM64Assembler::relinkJump(void * from, void * to)'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/ARM64Assembler.h' l='2888' u='c' c='_ZN3JSC14ARM64Assembler15relinkJumpToNopEPv'/>
<doc f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/ARM64Assembler.h' l='2875'>// The static relink, repatch, and replace methods can use can
    // use |from| for both the write and executable address for call
    // and jump patching as they&apos;re modifying existing (linked) code,
    // so the address being provided is correct for relative address
    // computation.</doc>
