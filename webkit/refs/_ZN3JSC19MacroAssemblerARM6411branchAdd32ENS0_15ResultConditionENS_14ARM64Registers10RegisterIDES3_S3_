<def f='webkit/Source/JavaScriptCore/assembler/MacroAssemblerARM64.h' l='3218' ll='3222' type='JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::Jump JSC::MacroAssemblerARM64::branchAdd32(JSC::MacroAssemblerARM64::ResultCondition cond, JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::RegisterID op1, JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::RegisterID op2, JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::RegisterID dest)'/>
<use f='webkit/Source/JavaScriptCore/assembler/MacroAssemblerARM64.h' l='3236' u='c' c='_ZN3JSC19MacroAssemblerARM6411branchAdd32ENS0_15ResultConditionENS_14ARM64Registers10RegisterIDENS_22AbstractMacroAssemblerINS_14ARM64AssemblerEE12TrustedImm32ES3_'/>
<use f='webkit/Source/JavaScriptCore/assembler/MacroAssemblerARM64.h' l='3242' u='c' c='_ZN3JSC19MacroAssemblerARM6411branchAdd32ENS0_15ResultConditionENS_22AbstractMacroAssemblerINS_14ARM64AssemblerEE7AddressENS_14ARM64Registers10RegisterIDE'/>
<use f='webkit/Source/JavaScriptCore/assembler/MacroAssemblerARM64.h' l='3247' u='c' c='_ZN3JSC19MacroAssemblerARM6411branchAdd32ENS0_15ResultConditionENS_14ARM64Registers10RegisterIDES3_'/>
<doc f='webkit/Source/JavaScriptCore/assembler/MacroAssemblerARM64.h' l='3208'>// Arithmetic control flow operations:
    //
    // This set of conditional branch operations branch based
    // on the result of an arithmetic operation. The operation
    // is performed as normal, storing the result.
    //
    // * jz operations branch if the result is zero.
    // * jo operations branch if the (signed) arithmetic
    //   operation caused an overflow to occur.</doc>
<use f='webkit/Source/JavaScriptCore/dfg/DFGSpeculativeJIT.cpp' l='5278' u='c' c='_ZN3JSC3DFG14SpeculativeJIT15compileArithAddEPNS0_4NodeE'/>
<def f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/MacroAssemblerARM64.h' l='3218' ll='3222' type='JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::Jump JSC::MacroAssemblerARM64::branchAdd32(JSC::MacroAssemblerARM64::ResultCondition cond, JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::RegisterID op1, JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::RegisterID op2, JSC::AbstractMacroAssembler&lt;JSC::ARM64Assembler&gt;::RegisterID dest)'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/MacroAssemblerARM64.h' l='3236' u='c' c='_ZN3JSC19MacroAssemblerARM6411branchAdd32ENS0_15ResultConditionENS_14ARM64Registers10RegisterIDENS_22AbstractMacroAssemblerINS_14ARM64AssemblerEE12TrustedImm32ES3_'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/MacroAssemblerARM64.h' l='3242' u='c' c='_ZN3JSC19MacroAssemblerARM6411branchAdd32ENS0_15ResultConditionENS_22AbstractMacroAssemblerINS_14ARM64AssemblerEE7AddressENS_14ARM64Registers10RegisterIDE'/>
<use f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/MacroAssemblerARM64.h' l='3247' u='c' c='_ZN3JSC19MacroAssemblerARM6411branchAdd32ENS0_15ResultConditionENS_14ARM64Registers10RegisterIDES3_'/>
<doc f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/MacroAssemblerARM64.h' l='3208'>// Arithmetic control flow operations:
    //
    // This set of conditional branch operations branch based
    // on the result of an arithmetic operation. The operation
    // is performed as normal, storing the result.
    //
    // * jz operations branch if the result is zero.
    // * jo operations branch if the (signed) arithmetic
    //   operation caused an overflow to occur.</doc>
