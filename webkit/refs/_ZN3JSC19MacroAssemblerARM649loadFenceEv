<def f='webkit/Source/JavaScriptCore/assembler/MacroAssemblerARM64.h' l='3873' ll='3876' type='void JSC::MacroAssemblerARM64::loadFence()'/>
<doc f='webkit/Source/JavaScriptCore/assembler/MacroAssemblerARM64.h' l='3869'>// We take this to mean that it prevents motion of normal loads. Ideally we&apos;d have expressed this
    // using dependencies or half fences, but there are cases where this is as good as it gets. The only
    // way to get a standalone load fence instruction on ARM is to use the ISH fence, which is just like
    // the memoryFence().</doc>
<def f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/MacroAssemblerARM64.h' l='3873' ll='3876' type='void JSC::MacroAssemblerARM64::loadFence()'/>
<doc f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/MacroAssemblerARM64.h' l='3869'>// We take this to mean that it prevents motion of normal loads. Ideally we&apos;d have expressed this
    // using dependencies or half fences, but there are cases where this is as good as it gets. The only
    // way to get a standalone load fence instruction on ARM is to use the ISH fence, which is just like
    // the memoryFence().</doc>
