<def f='webkit/Source/JavaScriptCore/heap/WeakInlines.h' l='127' ll='131' type='void JSC::weakAdd(Map &amp; map, const Key &amp; key, Value &amp;&amp; value)'/>
<doc f='webkit/Source/JavaScriptCore/heap/WeakInlines.h' l='125'>// This function helps avoid modifying a weak table while holding an iterator into it. (Object allocation
// can run a finalizer that modifies the table. We avoid that by requiring a pre-constructed object as our value.)</doc>
<def f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/WeakInlines.h' l='127' ll='131' type='void JSC::weakAdd(Map &amp; map, const Key &amp; key, Value &amp;&amp; value)'/>
<doc f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/WeakInlines.h' l='125'>// This function helps avoid modifying a weak table while holding an iterator into it. (Object allocation
// can run a finalizer that modifies the table. We avoid that by requiring a pre-constructed object as our value.)</doc>
<use f='webkit/Source/WebKit/WebProcess/Plugins/Netscape/NPRuntimeObjectMap.cpp' l='110' u='c' c='_ZN6WebKit18NPRuntimeObjectMap19getOrCreateJSObjectEPN3JSC14JSGlobalObjectEP8NPObject'/>
<use f='webkit/Source/WebCore/bridge/runtime_root.cpp' l='186' u='c' c='_ZN3JSC8Bindings10RootObject16addRuntimeObjectERNS_2VMEPNS0_13RuntimeObjectE'/>
