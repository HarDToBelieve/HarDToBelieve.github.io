<dec f='webkit/Source/JavaScriptCore/runtime/Structure.h' l='326' type='bool JSC::Structure::isCheapDuringGC(Visitor &amp; )'/>
<doc f='webkit/Source/JavaScriptCore/runtime/Structure.h' l='320'>// A Structure is cheap to mark during GC if doing so would only add a small and bounded amount
    // to our heap footprint. For example, if the structure refers to a global object that is not
    // yet marked, then as far as we know, the decision to mark this Structure would lead to a large
    // increase in footprint because no other object refers to that global object. This method
    // returns true if all user-controlled (and hence unbounded in size) objects referenced from the
    // Structure are already marked.</doc>
<dec f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/Structure.h' l='326' type='bool JSC::Structure::isCheapDuringGC(Visitor &amp; )'/>
<doc f='webkit/WebKitBuild/Debug/JavaScriptCore.framework/Versions/A/PrivateHeaders/Structure.h' l='320'>// A Structure is cheap to mark during GC if doing so would only add a small and bounded amount
    // to our heap footprint. For example, if the structure refers to a global object that is not
    // yet marked, then as far as we know, the decision to mark this Structure would lead to a large
    // increase in footprint because no other object refers to that global object. This method
    // returns true if all user-controlled (and hence unbounded in size) objects referenced from the
    // Structure are already marked.</doc>
