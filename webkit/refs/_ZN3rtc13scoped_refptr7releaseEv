<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/scoped_refptr.h' l='115' ll='119' type='T * rtc::scoped_refptr::release()'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/scoped_refptr.h' l='110'>// Returns the (possibly null) raw pointer, and makes the scoped_refptr hold a
  // null pointer, all without touching the reference count of the underlying
  // pointed-to object. The object is still reference counted, and the caller of
  // release() is now the proud owner of one reference, so it is responsible for
  // calling Release() once on the object when no longer using it.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/codecs/vp9/vp9_frame_buffer_pool.cc' l='160' u='c' c='_ZN6webrtc18Vp9FrameBufferPool17VpxGetFrameBufferEPvmP22vpx_codec_frame_buffer'/>
<def f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/scoped_refptr.h' l='115' ll='119' type='T * rtc::scoped_refptr::release()'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/scoped_refptr.h' l='110'>// Returns the (possibly null) raw pointer, and makes the scoped_refptr hold a
  // null pointer, all without touching the reference count of the underlying
  // pointed-to object. The object is still reference counted, and the caller of
  // release() is now the proud owner of one reference, so it is responsible for
  // calling Release() once on the object when no longer using it.</doc>
