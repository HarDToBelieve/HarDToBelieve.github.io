<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/platform_thread.h' l='87' type='static rtc::PlatformThread rtc::PlatformThread::SpawnDetached(std::function&lt;void ()&gt; thread_function, absl::string_view name, rtc::ThreadAttributes attributes = rtc::ThreadAttributes())'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/platform_thread.h' l='85'>// Creates a started detached thread. The caller has to use external
  // synchronization as nothing is provided by the PlatformThread construct.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/async_resolver.cc' l='126' u='c' c='_ZN3rtc13AsyncResolver5StartERKNS_13SocketAddressE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/platform_thread.cc' l='137' ll='143' type='static rtc::PlatformThread rtc::PlatformThread::SpawnDetached(std::function&lt;void ()&gt; thread_function, absl::string_view name, rtc::ThreadAttributes attributes = rtc::ThreadAttributes())'/>
