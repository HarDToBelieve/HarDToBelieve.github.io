<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/numerics/moving_max_counter.h' l='43' type='absl::optional&lt;T&gt; rtc::MovingMaxCounter::Max(int64_t current_time_ms)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/numerics/moving_max_counter.h' l='85' ll='93' type='absl::optional&lt;T&gt; rtc::MovingMaxCounter::Max(int64_t current_time_ms)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/numerics/moving_max_counter.h' l='40'>// Advances the current time, and returns the maximum sample in the time
  // window ending at the current time. The new current time must be at least as
  // large as the old current time.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/receive_statistics_proxy.cc' l='634' u='c' c='_ZNK6webrtc22ReceiveStatisticsProxy8GetStatsEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/receive_statistics_proxy.cc' l='646' u='c' c='_ZNK6webrtc22ReceiveStatisticsProxy8GetStatsEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/receive_statistics_proxy2.cc' l='676' u='c' c='_ZNK6webrtc8internal22ReceiveStatisticsProxy8GetStatsEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/receive_statistics_proxy2.cc' l='694' u='c' c='_ZNK6webrtc8internal22ReceiveStatisticsProxy8GetStatsEv'/>
