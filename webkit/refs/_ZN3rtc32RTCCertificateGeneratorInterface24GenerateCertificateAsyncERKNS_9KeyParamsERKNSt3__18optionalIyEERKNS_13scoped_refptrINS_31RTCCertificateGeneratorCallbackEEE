<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/rtc_certificate_generator.h' l='47' type='void rtc::RTCCertificateGeneratorInterface::GenerateCertificateAsync(const rtc::KeyParams &amp; key_params, const absl::optional&lt;uint64_t&gt; &amp; expires_ms, const scoped_refptr&lt;rtc::RTCCertificateGeneratorCallback&gt; &amp; callback)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/rtc_certificate_generator.h' l='42'>// Generates a certificate asynchronously on the worker thread.
  // Must be called on the signaling thread. The |callback| is invoked with the
  // result on the signaling thread. |exipres_ms| optionally specifies for how
  // long we want the certificate to be valid, but the implementation may choose
  // its own restrictions on the expiration time.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/webrtc_session_description_factory.cc' l='190' u='c' c='_ZN6webrtc31WebRtcSessionDescriptionFactoryC1EPN3rtc6ThreadEPN7cricket14ChannelManagerEPKNS_16SdpStateProviderERKNSt3__112basic_stringIcNSA_11char_tra1537207'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/rtc_certificate_generator.cc' l='72' c='_ZN3rtc23RTCCertificateGenerator24GenerateCertificateAsyncERKNS_9KeyParamsERKNSt3__18optionalIyEERKNS_13scoped_refptrINS_31RTCCertificateGeneratorCallbackEEE'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/rtc_certificate_generator.h' l='47' type='void rtc::RTCCertificateGeneratorInterface::GenerateCertificateAsync(const rtc::KeyParams &amp; key_params, const absl::optional&lt;uint64_t&gt; &amp; expires_ms, const scoped_refptr&lt;rtc::RTCCertificateGeneratorCallback&gt; &amp; callback)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/rtc_certificate_generator.h' l='42'>// Generates a certificate asynchronously on the worker thread.
  // Must be called on the signaling thread. The |callback| is invoked with the
  // result on the signaling thread. |exipres_ms| optionally specifies for how
  // long we want the certificate to be valid, but the implementation may choose
  // its own restrictions on the expiration time.</doc>
