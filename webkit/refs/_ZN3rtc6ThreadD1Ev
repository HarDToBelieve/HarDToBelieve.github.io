<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/thread.h' l='221' type='void rtc::Thread::~Thread()'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/thread.h' l='212'>// NOTE: ALL SUBCLASSES OF Thread MUST CALL Stop() IN THEIR DESTRUCTORS (or
  // guarantee Stop() is explicitly called before the subclass is destroyed).
  // This is required to avoid a data race between the destructor modifying the
  // vtable, and the Thread::PreRun calling the virtual method Run().

  // NOTE: SUBCLASSES OF Thread THAT OVERRIDE Clear MUST CALL
  // DoDestroy() IN THEIR DESTRUCTORS! This is required to avoid a data race
  // between the destructor modifying the vtable, and the ThreadManager
  // calling Clear on the object from a different thread.</doc>
<inh f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/task_queue/task_queue_base.h' l='79' c='_ZN6webrtc13TaskQueueBaseD1Ev'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/thread.cc' l='409' ll='412' type='void rtc::Thread::~Thread()'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/thread.cc' l='1207' c='_ZN3rtc10AutoThreadD1Ev'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/thread.cc' l='1228' c='_ZN3rtc22AutoSocketServerThreadD1Ev'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/thread.h' l='221' type='void rtc::Thread::~Thread()'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/thread.h' l='212'>// NOTE: ALL SUBCLASSES OF Thread MUST CALL Stop() IN THEIR DESTRUCTORS (or
  // guarantee Stop() is explicitly called before the subclass is destroyed).
  // This is required to avoid a data race between the destructor modifying the
  // vtable, and the Thread::PreRun calling the virtual method Run().

  // NOTE: SUBCLASSES OF Thread THAT OVERRIDE Clear MUST CALL
  // DoDestroy() IN THEIR DESTRUCTORS! This is required to avoid a data race
  // between the destructor modifying the vtable, and the ThreadManager
  // calling Clear on the object from a different thread.</doc>
