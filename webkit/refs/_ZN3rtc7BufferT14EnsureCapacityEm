<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/buffer.h' l='335' ll='339' type='void rtc::BufferT::EnsureCapacity(size_t capacity)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/buffer.h' l='332'>// Ensure that the buffer size can be increased to at least capacity without
  // further reallocation. (Of course, this operation might need to reallocate
  // the buffer.)</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_video/h264/h264_common.cc' l='96' u='c' c='_ZN6webrtc4H2649WriteRbspEPKhmPN3rtc7BufferTIhLb0EEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_video/h265/h265_common.cc' l='90' u='c' c='_ZN6webrtc4H2659WriteRbspEPKhmPN3rtc7BufferTIhLb0EEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/red/audio_encoder_copy_red.cc' l='62' u='c' c='_ZN6webrtc19AudioEncoderCopyRedC1EONS0_6ConfigE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/red/audio_encoder_copy_red.cc' l='188' u='c' c='_ZN6webrtc19AudioEncoderCopyRed5ResetEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/async_tcp_socket.cc' l='73' u='c' c='_ZN3rtc18AsyncTCPSocketBaseC1EPNS_11AsyncSocketEbm'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/async_tcp_socket.cc' l='223' u='c' c='_ZN3rtc18AsyncTCPSocketBase11OnReadEventEPNS_11AsyncSocketE'/>
<def f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/buffer.h' l='335' ll='339' type='void rtc::BufferT::EnsureCapacity(size_t capacity)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/buffer.h' l='332'>// Ensure that the buffer size can be increased to at least capacity without
  // further reallocation. (Of course, this operation might need to reallocate
  // the buffer.)</doc>
