<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/abseil-cpp/absl/container/internal/inlined_vector.h' l='88' type='void absl::inlined_vector_internal::MemcpyIfAllowed(void * dst, const void * src, size_t n)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/abseil-cpp/absl/container/internal/inlined_vector.h' l='91' ll='94' type='void absl::inlined_vector_internal::MemcpyIfAllowed(void * dst, const void * src, size_t n)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/abseil-cpp/absl/container/internal/inlined_vector.h' l='98' ll='99' type='void absl::inlined_vector_internal::MemcpyIfAllowed(void * , const void * , size_t )'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/abseil-cpp/absl/container/internal/inlined_vector.h' l='90'>// memcpy when allowed.</doc>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/abseil-cpp/absl/container/internal/inlined_vector.h' l='96'>// Do nothing for types that are not memcpy-able. This function is only
// called from non-reachable branches.</doc>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/absl/container/internal/inlined_vector.h' l='88' type='void absl::inlined_vector_internal::MemcpyIfAllowed(void * dst, const void * src, size_t n)'/>
<def f='webkit/WebKitBuild/Debug/usr/local/include/absl/container/internal/inlined_vector.h' l='91' ll='94' type='void absl::inlined_vector_internal::MemcpyIfAllowed(void * dst, const void * src, size_t n)'/>
<def f='webkit/WebKitBuild/Debug/usr/local/include/absl/container/internal/inlined_vector.h' l='98' ll='99' type='void absl::inlined_vector_internal::MemcpyIfAllowed(void * , const void * , size_t )'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/absl/container/internal/inlined_vector.h' l='90'>// memcpy when allowed.</doc>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/absl/container/internal/inlined_vector.h' l='96'>// Do nothing for types that are not memcpy-able. This function is only
// called from non-reachable branches.</doc>
