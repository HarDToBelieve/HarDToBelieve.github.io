<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/internal.h' l='1301' type='bool bssl::ssl_parse_cert_chain(uint8_t * out_alert, UniquePtr&lt;struct stack_st_CRYPTO_BUFFER&gt; * out_chain, UniquePtr&lt;EVP_PKEY&gt; * out_pubkey, uint8_t * out_leaf_sha256, CBS * cbs, CRYPTO_BUFFER_POOL * pool)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/internal.h' l='1290'>// ssl_parse_cert_chain parses a certificate list from |cbs| in the format used
// by a TLS Certificate message. On success, it advances |cbs| and returns
// true. Otherwise, it returns false and sets |*out_alert| to an alert to send
// to the peer.
//
// If the list is non-empty then |*out_chain| and |*out_pubkey| will be set to
// the certificate chain and the leaf certificate&apos;s public key
// respectively. Otherwise, both will be set to nullptr.
//
// If the list is non-empty and |out_leaf_sha256| is non-NULL, it writes the
// SHA-256 hash of the leaf to |out_leaf_sha256|.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/handshake_client.cc' l='824' u='c' c='_ZN4bsslL26do_read_server_certificateEPNS_13SSL_HANDSHAKEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/handshake_server.cc' l='1272' u='c' c='_ZN4bsslL26do_read_client_certificateEPNS_13SSL_HANDSHAKEE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/ssl_cert.cc' l='346' ll='408' type='bool bssl::ssl_parse_cert_chain(uint8_t * out_alert, UniquePtr&lt;struct stack_st_CRYPTO_BUFFER&gt; * out_chain, UniquePtr&lt;EVP_PKEY&gt; * out_pubkey, uint8_t * out_leaf_sha256, CBS * cbs, CRYPTO_BUFFER_POOL * pool)'/>
