<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/internal.h' l='3204' type='bool bssl::tls1_channel_id_hash(bssl::SSL_HANDSHAKE * hs, uint8_t * out, size_t * out_len)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/internal.h' l='3201'>// tls1_channel_id_hash computes the hash to be signed by Channel ID and writes
// it to |out|, which must contain at least |EVP_MAX_MD_SIZE| bytes. It returns
// true on success and false on failure.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='4259' u='c' c='_ZN4bssl22tls1_verify_channel_idEPNS_13SSL_HANDSHAKEERKNS_10SSLMessageE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='4282' u='c' c='_ZN4bssl21tls1_write_channel_idEPNS_13SSL_HANDSHAKEEP6cbb_st'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/ssl/t1_lib.cc' l='4319' ll='4358' type='bool bssl::tls1_channel_id_hash(bssl::SSL_HANDSHAKE * hs, uint8_t * out, size_t * out_len)'/>
