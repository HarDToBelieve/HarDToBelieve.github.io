<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/event_wrapper.h' l='41' type='webrtc::EventTypeWrapper webrtc::EventWrapper::Wait(int max_time_ms)'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/event_wrapper.cc' l='26' c='_ZN6webrtc16EventWrapperImpl4WaitEi'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/event_wrapper.h' l='32'>// Puts the calling thread into a wait state. The thread may be released
  // by a Set() call depending on if other threads are waiting and if so on
  // timing. The thread that was released will reset the event before leaving
  // preventing more threads from being released. If multiple threads
  // are waiting for the same Set(), only one (random) thread is guaranteed to
  // be released. It is possible that multiple (random) threads are released
  // Depending on timing.
  //
  // |max_time_ms| is the maximum time to wait in milliseconds.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/jitter_buffer.cc' l='231' u='c' c='_ZN6webrtc15VCMJitterBuffer17NextCompleteFrameEj'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/receiver.cc' l='149' u='c' c='_ZN6webrtc11VCMReceiver16FrameForDecodingEtb'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/receiver.cc' l='153' u='c' c='_ZN6webrtc11VCMReceiver16FrameForDecodingEtb'/>
