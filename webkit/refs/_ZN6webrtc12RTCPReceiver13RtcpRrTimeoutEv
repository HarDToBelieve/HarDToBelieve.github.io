<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtcp_receiver.h' l='113' type='bool webrtc::RTCPReceiver::RtcpRrTimeout()'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtcp_receiver.h' l='111'>// Returns true if we haven&apos;t received an RTCP RR for several RTCP
  // intervals, but only triggers true once.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtcp_receiver.cc' l='617' ll='620' type='bool webrtc::RTCPReceiver::RtcpRrTimeout()'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtcp_receiver.cc' l='613'>// These two methods (RtcpRrTimeout and RtcpRrSequenceNumberTimeout) only exist
// for tests and legacy code (rtp_rtcp_impl.cc). We should be able to to delete
// the methods and require that access to the locked variables only happens on
// the worker thread and thus no locking is needed.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_rtcp_impl.cc' l='148' u='c' c='_ZN6webrtc17ModuleRtpRtcpImpl7ProcessEv'/>
