<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_video/h265/h265_vps_parser.h' l='34' type='static absl::optional&lt;VpsState&gt; webrtc::H265VpsParser::ParseVps(const uint8_t * data, size_t length)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_video/h265/h265_vps_parser.cc' l='37' ll='43' type='static absl::optional&lt;H265VpsParser::VpsState&gt; webrtc::H265VpsParser::ParseVps(const uint8_t * data, size_t length)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_video/h265/h265_vps_parser.cc' l='32'>// General note: this is based off the 02/2018 version of the H.265 standard.
// You can find it on this page:
// http://www.itu.int/rec/T-REC-H.265

// Unpack RBSP and parse SPS state from the supplied buffer.</doc>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_video/h265/h265_vps_parser.h' l='33'>// Unpack RBSP and parse VPS state from the supplied buffer.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_format_h265.cc' l='489' u='c' c='_ZN6webrtc24VideoRtpDepacketizerH26521ProcessApOrSingleNaluEPNS_20VideoRtpDepacketizer16ParsedRtpPayloadEPKh'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/h265_vps_sps_pps_tracker.cc' l='258' u='c' c='_ZN6webrtc12video_coding20H265VpsSpsPpsTracker20InsertVpsSpsPpsNalusERKNSt3__16vectorIhNS2_9allocatorIhEEEES8_S8_'/>
