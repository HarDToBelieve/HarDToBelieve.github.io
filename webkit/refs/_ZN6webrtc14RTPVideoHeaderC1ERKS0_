<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_video_header.h' l='64' type='void webrtc::RTPVideoHeader::RTPVideoHeader(const webrtc::RTPVideoHeader &amp; other)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_sender_video.cc' l='737' u='c' c='_ZN6webrtc14RTPSenderVideo16SendEncodedImageEiNSt3__18optionalINS_14VideoCodecTypeEEEjRKNS_12EncodedImageENS_14RTPVideoHeaderENS2_IxEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_sender_video.cc' l='741' u='c' c='_ZN6webrtc14RTPSenderVideo16SendEncodedImageEiNSt3__18optionalINS_14VideoCodecTypeEEEjRKNS_12EncodedImageENS_14RTPVideoHeaderENS2_IxEE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_sender_video_frame_transformer_delegate.cc' l='35' u='c' c='_ZN6webrtc12_GLOBAL__N_129TransformableVideoSenderFrameC1ERKNS_12EncodedImageERKNS_14RTPVideoHeaderEiNSt3__18optionalINS_14VideoCodecTypeEEEjNS9_IxEEj'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_sender_video_frame_transformer_delegate.cc' l='158' u='c' c='_ZNK6webrtc38RTPSenderVideoFrameTransformerDelegate9SendVideoENSt3__110unique_ptrINS_27TransformableFrameInterfaceENS1_14default_deleteIS3_EEEE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_video_header.cc' l='16' type='void webrtc::RTPVideoHeader::RTPVideoHeader(const webrtc::RTPVideoHeader &amp; other)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/packet.cc' l='49' u='c' c='_ZN6webrtc9VCMPacketC1EPKhmRKNS_9RTPHeaderERKNS_14RTPVideoHeaderExNS_9TimestampE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/video_coding/packet_buffer.cc' l='44' u='c' c='_ZN6webrtc12video_coding12PacketBuffer6PacketC1ERKNS_17RtpPacketReceivedERKNS_14RTPVideoHeaderE'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/modules/rtp_rtcp/source/rtp_video_header.h' l='64' type='void webrtc::RTPVideoHeader::RTPVideoHeader(const webrtc::RTPVideoHeader &amp; other)'/>
