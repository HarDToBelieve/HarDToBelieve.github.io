<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/stats_collector.h' l='83' type='void webrtc::StatsCollector::GetStats(webrtc::MediaStreamTrackInterface * track, webrtc::StatsReports * reports)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/stats_collector.h' l='75'>// Gets a StatsReports of the last collected stats. Note that UpdateStats must
  // be called before this function to get the most recent stats. `selector` is
  // a track label or empty string. The most recent reports are stored in
  // `reports`.
  // TODO(tommi): Change this contract to accept a callback object instead
  // of filling in `reports`.  As is, there&apos;s a requirement that the caller
  // uses `reports` immediately without allowing any async activity on
  // the thread (message handling etc) and then discard the results.</doc>
<inh f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/stats_collector_interface.h' l='37' c='_ZN6webrtc23StatsCollectorInterface8GetStatsEPNS_25MediaStreamTrackInterfaceEPNSt3__16vectorIPKNS_11StatsReportENS3_9allocatorIS7_EEEE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/stats_collector.cc' l='609' ll='647' type='void webrtc::StatsCollector::GetStats(webrtc::MediaStreamTrackInterface * track, webrtc::StatsReports * reports)'/>
