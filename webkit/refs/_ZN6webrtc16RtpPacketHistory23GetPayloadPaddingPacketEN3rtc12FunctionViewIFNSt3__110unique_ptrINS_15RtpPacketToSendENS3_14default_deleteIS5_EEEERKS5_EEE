<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_packet_history.h' l='126' type='std::unique_ptr&lt;RtpPacketToSend&gt; webrtc::RtpPacketHistory::GetPayloadPaddingPacket(rtc::FunctionView&lt;std::unique_ptr&lt;RtpPacketToSend&gt; (const RtpPacketToSend &amp;)&gt; encapsulate)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_packet_history.h' l='122'>// Same as GetPayloadPaddingPacket(void), but adds an encapsulation
  // that can be used for instance to encapsulate the packet in an RTX
  // container, or to abort getting the packet if the function returns
  // nullptr.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_packet_history.cc' l='306' u='c' c='_ZN6webrtc16RtpPacketHistory23GetPayloadPaddingPacketEv'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_packet_history.cc' l='311' ll='356' type='std::unique_ptr&lt;RtpPacketToSend&gt; webrtc::RtpPacketHistory::GetPayloadPaddingPacket(rtc::FunctionView&lt;std::unique_ptr&lt;RtpPacketToSend&gt; (const RtpPacketToSend &amp;)&gt; encapsulate)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_sender.cc' l='397' u='c' c='_ZN6webrtc9RTPSender15GeneratePaddingEmb'/>
