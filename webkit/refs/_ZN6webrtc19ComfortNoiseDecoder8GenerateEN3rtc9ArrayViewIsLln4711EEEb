<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/cng/webrtc_cng.h' l='46' type='bool webrtc::ComfortNoiseDecoder::Generate(rtc::ArrayView&lt;int16_t&gt; out_data, bool new_period)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/cng/webrtc_cng.h' l='39'>// Generates comfort noise.
  // |out_data| will be filled with samples - its size determines the number of
  // samples generated. When |new_period| is true, CNG history will be reset
  // before any audio is generated.  Returns |false| if outData is too large -
  // currently 640 bytes (equalling 10ms at 64kHz).
  // TODO(ossu): Specify better limits for the size of out_data. Either let it
  //             be unbounded or limit to 10ms in the current sample rate.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/codecs/cng/webrtc_cng.cc' l='111' ll='206' type='bool webrtc::ComfortNoiseDecoder::Generate(rtc::ArrayView&lt;int16_t&gt; out_data, bool new_period)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/comfort_noise.cc' l='72' u='c' c='_ZN6webrtc12ComfortNoise8GenerateEmPNS_16AudioMultiVectorE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/normal.cc' l='162' u='c' c='_ZN6webrtc6Normal7ProcessEPKsmNS_5NetEq4ModeEPNS_16AudioMultiVectorE'/>
