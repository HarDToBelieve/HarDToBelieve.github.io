<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/sdp_offer_answer.h' l='493' type='bool webrtc::SdpOfferAnswerHandler::ReadyToUseRemoteCandidate(const webrtc::IceCandidateInterface * candidate, const webrtc::SessionDescriptionInterface * remote_desc, bool * valid)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/sdp_offer_answer.h' l='489'>// Returns true if we are ready to push down the remote candidate.
  // |remote_desc| is the new remote description, or NULL if the current remote
  // description should be used. Output |valid| is true if the candidate media
  // index is valid.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/sdp_offer_answer.cc' l='2304' u='c' c='_ZN6webrtc21SdpOfferAnswerHandler23AddIceCandidateInternalEPKNS_21IceCandidateInterfaceE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/sdp_offer_answer.cc' l='4394' u='c' c='_ZN6webrtc21SdpOfferAnswerHandler33UseCandidatesInSessionDescriptionEPKNS_27SessionDescriptionInterfaceE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/sdp_offer_answer.cc' l='4439' ll='4464' type='bool webrtc::SdpOfferAnswerHandler::ReadyToUseRemoteCandidate(const webrtc::IceCandidateInterface * candidate, const webrtc::SessionDescriptionInterface * remote_desc, bool * valid)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/sdp_offer_answer.cc' l='4434'>// We need to check the local/remote description for the Transport instead of
// the session, because a new Transport added during renegotiation may have
// them unset while the session has them set from the previous negotiation.
// Not doing so may trigger the auto generation of transport description and
// mess up DTLS identity information, ICE credential, etc.</doc>
