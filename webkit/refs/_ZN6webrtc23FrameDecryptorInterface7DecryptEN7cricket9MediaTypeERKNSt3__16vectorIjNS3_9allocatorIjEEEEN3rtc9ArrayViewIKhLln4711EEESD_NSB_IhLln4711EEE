<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/crypto/frame_decryptor_interface.h' l='61' type='webrtc::FrameDecryptorInterface::Result webrtc::FrameDecryptorInterface::Decrypt(cricket::MediaType media_type, const std::vector&lt;uint32_t&gt; &amp; csrcs, rtc::ArrayView&lt;const uint8_t&gt; additional_data, rtc::ArrayView&lt;const uint8_t&gt; encrypted_frame, rtc::ArrayView&lt;uint8_t&gt; frame)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/crypto/frame_decryptor_interface.h' l='52'>// Attempts to decrypt the encrypted frame. You may assume the frame size will
  // be allocated to the size returned from GetMaxPlaintextSize. You may assume
  // that the frames are in order if SRTP is enabled. The stream is not provided
  // here and it is up to the implementor to transport this information to the
  // receiver if they care about it. You must set bytes_written to how many
  // bytes you wrote to in the frame buffer. kOk must be returned if successful,
  // kRecoverable should be returned if the failure was due to something other
  // than a decryption failure. kFailedToDecrypt should be returned in all other
  // cases.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/audio/channel_receive.cc' l='651' u='c' c='_ZN6webrtc3voe12_GLOBAL__N_114ChannelReceive13ReceivePacketEPKhmRKNS_9RTPHeaderE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/buffered_frame_decryptor.cc' l='87' u='c' c='_ZN6webrtc22BufferedFrameDecryptor12DecryptFrameEPNS_14RtpFrameObjectE'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/crypto/frame_decryptor_interface.h' l='61' type='webrtc::FrameDecryptorInterface::Result webrtc::FrameDecryptorInterface::Decrypt(cricket::MediaType media_type, const std::vector&lt;uint32_t&gt; &amp; csrcs, rtc::ArrayView&lt;const uint8_t&gt; additional_data, rtc::ArrayView&lt;const uint8_t&gt; encrypted_frame, rtc::ArrayView&lt;uint8_t&gt; frame)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/crypto/frame_decryptor_interface.h' l='52'>// Attempts to decrypt the encrypted frame. You may assume the frame size will
  // be allocated to the size returned from GetMaxPlaintextSize. You may assume
  // that the frames are in order if SRTP is enabled. The stream is not provided
  // here and it is up to the implementor to transport this information to the
  // receiver if they care about it. You must set bytes_written to how many
  // bytes you wrote to in the frame buffer. kOk must be returned if successful,
  // kRecoverable should be returned if the failure was due to something other
  // than a decryption failure. kFailedToDecrypt should be returned in all other
  // cases.</doc>
