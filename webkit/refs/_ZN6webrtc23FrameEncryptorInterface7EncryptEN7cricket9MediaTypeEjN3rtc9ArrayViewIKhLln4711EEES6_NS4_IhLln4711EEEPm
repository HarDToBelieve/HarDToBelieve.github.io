<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/crypto/frame_encryptor_interface.h' l='38' type='int webrtc::FrameEncryptorInterface::Encrypt(cricket::MediaType media_type, uint32_t ssrc, rtc::ArrayView&lt;const uint8_t&gt; additional_data, rtc::ArrayView&lt;const uint8_t&gt; frame, rtc::ArrayView&lt;uint8_t&gt; encrypted_frame, size_t * bytes_written)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/crypto/frame_encryptor_interface.h' l='31'>// Attempts to encrypt the provided frame. You may assume the encrypted_frame
  // will match the size returned by GetMaxCiphertextByteSize for a give frame.
  // You may assume that the frames will arrive in order if SRTP is enabled.
  // The ssrc will simply identify which stream the frame is travelling on. You
  // must set bytes_written to the number of bytes you wrote in the
  // encrypted_frame. 0 must be returned if successful all other numbers can be
  // selected by the implementer to represent error codes.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/audio/channel_send.cc' l='395' u='c' c='_ZN6webrtc3voe12_GLOBAL__N_111ChannelSend12SendRtpAudioENS_14AudioFrameTypeEhjN3rtc9ArrayViewIKhLln4711EEEx'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/rtp_sender_video.cc' l='597' u='c' c='_ZN6webrtc14RTPSenderVideo9SendVideoEiNSt3__18optionalINS_14VideoCodecTypeEEEjxN3rtc9ArrayViewIKhLln4711EEENS_14RTPVideoHeaderENS2_IxEESA_'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/crypto/frame_encryptor_interface.h' l='38' type='int webrtc::FrameEncryptorInterface::Encrypt(cricket::MediaType media_type, uint32_t ssrc, rtc::ArrayView&lt;const uint8_t&gt; additional_data, rtc::ArrayView&lt;const uint8_t&gt; frame, rtc::ArrayView&lt;uint8_t&gt; encrypted_frame, size_t * bytes_written)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/crypto/frame_encryptor_interface.h' l='31'>// Attempts to encrypt the provided frame. You may assume the encrypted_frame
  // will match the size returned by GetMaxCiphertextByteSize for a give frame.
  // You may assume that the frames will arrive in order if SRTP is enabled.
  // The ssrc will simply identify which stream the frame is travelling on. You
  // must set bytes_written to the number of bytes you wrote in the
  // encrypted_frame. 0 must be returned if successful all other numbers can be
  // selected by the implementer to represent error codes.</doc>
