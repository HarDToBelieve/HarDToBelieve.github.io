<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/async_dns_resolver.h' l='74' type='std::unique_ptr&lt;webrtc::AsyncDnsResolverInterface&gt; webrtc::AsyncDnsResolverFactoryInterface::CreateAndResolve(const rtc::SocketAddress &amp; addr, std::function&lt;void ()&gt; callback)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/async_dns_resolver.h' l='71'>// Creates an AsyncDnsResolver and starts resolving the name. The callback
  // will be called when resolution is finished.
  // The callback will be called on the thread that the caller runs on.</doc>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/basic_async_resolver_factory.cc' l='128' c='_ZN6webrtc31WrappingAsyncDnsResolverFactory16CreateAndResolveERKN3rtc13SocketAddressENSt3__18functionIFvvEEE'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/async_dns_resolver.h' l='74' type='std::unique_ptr&lt;webrtc::AsyncDnsResolverInterface&gt; webrtc::AsyncDnsResolverFactoryInterface::CreateAndResolve(const rtc::SocketAddress &amp; addr, std::function&lt;void ()&gt; callback)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/async_dns_resolver.h' l='71'>// Creates an AsyncDnsResolver and starts resolving the name. The callback
  // will be called when resolution is finished.
  // The callback will be called on the thread that the caller runs on.</doc>
