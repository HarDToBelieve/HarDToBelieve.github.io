<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/async_dns_resolver.h' l='81' type='std::unique_ptr&lt;webrtc::AsyncDnsResolverInterface&gt; webrtc::AsyncDnsResolverFactoryInterface::Create()'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/async_dns_resolver.h' l='77'>// Creates an AsyncDnsResolver and does not start it.
  // For backwards compatibility, will be deprecated and removed.
  // One has to do a separate Start() call on the
  // resolver to start name resolution.</doc>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/basic_async_resolver_factory.cc' l='123' c='_ZN6webrtc31WrappingAsyncDnsResolverFactory6CreateEv'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/p2p_transport_channel.cc' l='1224' u='c' c='_ZN7cricket19P2PTransportChannel24ResolveHostnameCandidateERKNS_9CandidateE'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/async_dns_resolver.h' l='81' type='std::unique_ptr&lt;webrtc::AsyncDnsResolverInterface&gt; webrtc::AsyncDnsResolverFactoryInterface::Create()'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/async_dns_resolver.h' l='77'>// Creates an AsyncDnsResolver and does not start it.
  // For backwards compatibility, will be deprecated and removed.
  // One has to do a separate Start() call on the
  // resolver to start name resolution.</doc>
