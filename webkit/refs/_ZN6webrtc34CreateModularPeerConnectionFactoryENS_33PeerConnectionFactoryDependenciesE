<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/peer_connection_interface.h' l='1541' type='rtc::scoped_refptr&lt;PeerConnectionFactoryInterface&gt; webrtc::CreateModularPeerConnectionFactory(webrtc::PeerConnectionFactoryDependencies dependencies)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/create_peerconnection_factory.cc' l='70' u='c' c='_ZN6webrtc27CreatePeerConnectionFactoryEPN3rtc6ThreadES2_S2_NS0_13scoped_refptrINS_17AudioDeviceModuleEEENS3_INS_19AudioEncoderFactoryEEENS3_INS_19Aud1345794'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/peer_connection_interface.h' l='1524'>// CreateModularPeerConnectionFactory is implemented in the &quot;peerconnection&quot;
// build target, which doesn&apos;t pull in the implementations of every module
// webrtc may use.
//
// If an application knows it will only require certain modules, it can reduce
// webrtc&apos;s impact on its binary size by depending only on the &quot;peerconnection&quot;
// target and the modules the application requires, using
// CreateModularPeerConnectionFactory. For example, if an application
// only uses WebRTC for audio, it can pass in null pointers for the
// video-specific interfaces, and omit the corresponding modules from its
// build.
//
// If |network_thread| or |worker_thread| are null, the PeerConnectionFactory
// will create the necessary thread internally. If |signaling_thread| is null,
// the PeerConnectionFactory will use the thread on which this method is called
// as the signaling thread, wrapping it in an rtc::Thread object if needed.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/peer_connection_factory.cc' l='57' ll='80' type='rtc::scoped_refptr&lt;PeerConnectionFactoryInterface&gt; webrtc::CreateModularPeerConnectionFactory(webrtc::PeerConnectionFactoryDependencies dependencies)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/peer_connection_factory.cc' l='66' u='c' c='_ZN6webrtc34CreateModularPeerConnectionFactoryENS_33PeerConnectionFactoryDependenciesE'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/peer_connection_interface.h' l='1541' type='rtc::scoped_refptr&lt;PeerConnectionFactoryInterface&gt; webrtc::CreateModularPeerConnectionFactory(webrtc::PeerConnectionFactoryDependencies dependencies)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/peer_connection_interface.h' l='1524'>// CreateModularPeerConnectionFactory is implemented in the &quot;peerconnection&quot;
// build target, which doesn&apos;t pull in the implementations of every module
// webrtc may use.
//
// If an application knows it will only require certain modules, it can reduce
// webrtc&apos;s impact on its binary size by depending only on the &quot;peerconnection&quot;
// target and the modules the application requires, using
// CreateModularPeerConnectionFactory. For example, if an application
// only uses WebRTC for audio, it can pass in null pointers for the
// video-specific interfaces, and omit the corresponding modules from its
// build.
//
// If |network_thread| or |worker_thread| are null, the PeerConnectionFactory
// will create the necessary thread internally. If |signaling_thread| is null,
// the PeerConnectionFactory will use the thread on which this method is called
// as the signaling thread, wrapping it in an rtc::Thread object if needed.</doc>
