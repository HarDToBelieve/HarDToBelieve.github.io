<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/tools/packet.h' l='43' type='void webrtc::test::Packet::Packet(uint8_t * packet_memory, size_t allocated_bytes, size_t virtual_packet_length_bytes, double time_ms, const RtpUtility::RtpHeaderParser &amp; parser, const webrtc::RtpHeaderExtensionMap * extension_map = nullptr)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/tools/packet.h' l='32'>// Creates a packet, with the packet payload (including header bytes) in
  // |packet_memory|. The length of |packet_memory| is |allocated_bytes|.
  // The new object assumes ownership of |packet_memory| and will delete it
  // when the Packet object is deleted. The |time_ms| is an extra time
  // associated with this packet, typically used to denote arrival time.
  // The first bytes in |packet_memory| will be parsed using |parser|.
  // |virtual_packet_length_bytes| is typically used when reading RTP dump files
  // that only contain the RTP headers, and no payload (a.k.a RTP dummy files or
  // RTP light). The |virtual_packet_length_bytes| tells what size the packet
  // had on wire, including the now discarded payload, whereas |allocated_bytes|
  // is the length of the remaining payload (typically only the RTP header).</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/tools/packet.cc' l='25' ll='36' type='void webrtc::test::Packet::Packet(uint8_t * packet_memory, size_t allocated_bytes, size_t virtual_packet_length_bytes, double time_ms, const RtpUtility::RtpHeaderParser &amp; parser, const webrtc::RtpHeaderExtensionMap * extension_map = nullptr)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/tools/packet.cc' l='49' u='c' c='_ZN6webrtc4test6PacketC1EPhmd'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/tools/packet.cc' l='59' u='c' c='_ZN6webrtc4test6PacketC1EPhmmd'/>
