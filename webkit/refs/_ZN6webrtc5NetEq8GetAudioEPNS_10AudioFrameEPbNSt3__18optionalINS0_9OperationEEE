<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/neteq/neteq.h' l='219' type='int webrtc::NetEq::GetAudio(webrtc::AudioFrame * audio_frame, bool * muted, absl::optional&lt;Operation&gt; action_override = absl::nullopt)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/neteq/neteq.h' l='207'>// Instructs NetEq to deliver 10 ms of audio data. The data is written to
  // |audio_frame|. All data in |audio_frame| is wiped; |data_|, |speech_type_|,
  // |num_channels_|, |sample_rate_hz_|, |samples_per_channel_|, and
  // |vad_activity_| are updated upon success. If an error is returned, some
  // fields may not have been updated, or may contain inconsistent values.
  // If muted state is enabled (through Config::enable_muted_state), |muted|
  // may be set to true after a prolonged expand period. When this happens, the
  // |data_| in |audio_frame| is not written, but should be interpreted as being
  // all zeros. For testing purposes, an override can be supplied in the
  // |action_override| argument, which will cause NetEq to take this action
  // next, instead of the action it would normally choose.
  // Returns kOK on success, or kFail in case of an error.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/acm2/acm_receiver.cc' l='152' u='c' c='_ZN6webrtc4acm211AcmReceiver8GetAudioEiPNS_10AudioFrameEPb'/>
<ovr f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_coding/neteq/neteq_impl.cc' l='259' c='_ZN6webrtc9NetEqImpl8GetAudioEPNS_10AudioFrameEPbNSt3__18optionalINS_5NetEq9OperationEEE'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/neteq/neteq.h' l='219' type='int webrtc::NetEq::GetAudio(webrtc::AudioFrame * audio_frame, bool * muted, absl::optional&lt;Operation&gt; action_override = absl::nullopt)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/neteq/neteq.h' l='207'>// Instructs NetEq to deliver 10 ms of audio data. The data is written to
  // |audio_frame|. All data in |audio_frame| is wiped; |data_|, |speech_type_|,
  // |num_channels_|, |sample_rate_hz_|, |samples_per_channel_|, and
  // |vad_activity_| are updated upon success. If an error is returned, some
  // fields may not have been updated, or may contain inconsistent values.
  // If muted state is enabled (through Config::enable_muted_state), |muted|
  // may be set to true after a prolonged expand period. When this happens, the
  // |data_| in |audio_frame| is not written, but should be interpreted as being
  // all zeros. For testing purposes, an override can be supplied in the
  // |action_override| argument, which will cause NetEq to take this action
  // next, instead of the action it would normally choose.
  // Returns kOK on success, or kFail in case of an error.</doc>
