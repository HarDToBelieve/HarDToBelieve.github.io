<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/forward_error_correction_internal.h' l='56' type='rtc::ArrayView&lt;const uint8_t&gt; webrtc::internal::LookUpInFecTable(const uint8_t * table, int media_packet_index, int fec_index)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/forward_error_correction_internal.cc' l='159' u='c' c='_ZN6webrtc8internal15PacketMaskTable6LookUpEii'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/forward_error_correction_internal.cc' l='411' ll='446' type='rtc::ArrayView&lt;const uint8_t&gt; webrtc::internal::LookUpInFecTable(const uint8_t * table, int media_packet_index, int fec_index)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/rtp_rtcp/source/forward_error_correction_internal.cc' l='396'>// This algorithm is tailored to look up data in the |kPacketMaskRandomTbl| and
// |kPacketMaskBurstyTbl| tables. These tables only cover fec code for up to 12
// media packets. Starting from 13 media packets, the fec code will be generated
// at runtime. The format of those arrays is that they&apos;re essentially a 3
// dimensional array with the following dimensions: * media packet
//   * Size for kPacketMaskRandomTbl: 12
//   * Size for kPacketMaskBurstyTbl: 12
// * fec index
//   * Size for both random and bursty table increases from 1 to number of rows.
//     (i.e. 1-48, or 1-12 respectively).
// * Fec data (what actually gets returned)
//   * Size for kPacketMaskRandomTbl: 2 bytes.
//     * For all entries: 2 * fec index (1 based)
//   * Size for kPacketMaskBurstyTbl: 2 bytes.
//     * For all entries: 2 * fec index (1 based)</doc>
