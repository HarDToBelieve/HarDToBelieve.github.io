<dec f='webkit/Source/WebCore/crypto/keys/CryptoKeyEC.h' l='105' type='static RefPtr&lt;WebCore::CryptoKeyEC&gt; WebCore::CryptoKeyEC::platformImportSpki(WebCore::CryptoAlgorithmIdentifier , WebCore::CryptoKeyEC::NamedCurve , Vector&lt;uint8_t&gt; &amp;&amp; keyData, bool extractable, WebCore::CryptoKeyUsageBitmap )'/>
<use f='webkit/Source/WebCore/crypto/keys/CryptoKeyEC.cpp' l='125' u='c' c='_ZN7WebCore11CryptoKeyEC10importSpkiENS_25CryptoAlgorithmIdentifierERKN3WTF6StringEONS2_6VectorIhLm0ENS2_15CrashOnOverflowELm16ENS2_10FastMallocEEEbi'/>
<def f='webkit/Source/WebCore/crypto/mac/CryptoKeyECMac.cpp' l='235' ll='271' type='static RefPtr&lt;WebCore::CryptoKeyEC&gt; WebCore::CryptoKeyEC::platformImportSpki(WebCore::CryptoAlgorithmIdentifier identifier, WebCore::CryptoKeyEC::NamedCurve curve, Vector&lt;uint8_t&gt; &amp;&amp; keyData, bool extractable, WebCore::CryptoKeyUsageBitmap usages)'/>
<doc f='webkit/Source/WebCore/crypto/mac/CryptoKeyECMac.cpp' l='228'>// Per https://www.ietf.org/rfc/rfc5280.txt
// SubjectPublicKeyInfo ::= SEQUENCE { algorithm AlgorithmIdentifier, subjectPublicKey BIT STRING }
// AlgorithmIdentifier  ::= SEQUENCE { algorithm OBJECT IDENTIFIER, parameters ANY DEFINED BY algorithm OPTIONAL }
// Per https://www.ietf.org/rfc/rfc5480.txt
// id-ecPublicKey OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840) ansi-X9-62(10045) keyType(2) 1 }
// secp256r1 OBJECT IDENTIFIER      ::= { iso(1) member-body(2) us(840) ansi-X9-62(10045) curves(3) prime(1) 7 }
// secp384r1 OBJECT IDENTIFIER      ::= { iso(1) identified-organization(3) certicom(132) curve(0) 34 }</doc>
<dec f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/CryptoKeyEC.h' l='105' type='static RefPtr&lt;WebCore::CryptoKeyEC&gt; WebCore::CryptoKeyEC::platformImportSpki(WebCore::CryptoAlgorithmIdentifier , WebCore::CryptoKeyEC::NamedCurve , Vector&lt;uint8_t&gt; &amp;&amp; keyData, bool extractable, WebCore::CryptoKeyUsageBitmap )'/>
