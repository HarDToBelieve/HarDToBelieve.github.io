<dec f='webkit/Source/WebCore/crypto/keys/CryptoKeyEC.h' l='106' type='static RefPtr&lt;WebCore::CryptoKeyEC&gt; WebCore::CryptoKeyEC::platformImportPkcs8(WebCore::CryptoAlgorithmIdentifier , WebCore::CryptoKeyEC::NamedCurve , Vector&lt;uint8_t&gt; &amp;&amp; keyData, bool extractable, WebCore::CryptoKeyUsageBitmap )'/>
<use f='webkit/Source/WebCore/crypto/keys/CryptoKeyEC.cpp' l='134' u='c' c='_ZN7WebCore11CryptoKeyEC11importPkcs8ENS_25CryptoAlgorithmIdentifierERKN3WTF6StringEONS2_6VectorIhLm0ENS2_15CrashOnOverflowELm16ENS2_10FastMallocEEEbi'/>
<def f='webkit/Source/WebCore/crypto/mac/CryptoKeyECMac.cpp' l='311' ll='367' type='static RefPtr&lt;WebCore::CryptoKeyEC&gt; WebCore::CryptoKeyEC::platformImportPkcs8(WebCore::CryptoAlgorithmIdentifier identifier, WebCore::CryptoKeyEC::NamedCurve curve, Vector&lt;uint8_t&gt; &amp;&amp; keyData, bool extractable, WebCore::CryptoKeyUsageBitmap usages)'/>
<doc f='webkit/Source/WebCore/crypto/mac/CryptoKeyECMac.cpp' l='306'>// Per https://www.ietf.org/rfc/rfc5208.txt
// PrivateKeyInfo ::= SEQUENCE { version INTEGER, privateKeyAlgorithm AlgorithmIdentifier, privateKey OCTET STRING { ECPrivateKey } }
// Per https://www.ietf.org/rfc/rfc5915.txt
// ECPrivateKey ::= SEQUENCE { version INTEGER { ecPrivkeyVer1(1) }, privateKey OCTET STRING, parameters CustomECParameters, publicKey BIT STRING }
// OpenSSL uses custom ECParameters. We follow OpenSSL as a compatibility concern.</doc>
<dec f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/CryptoKeyEC.h' l='106' type='static RefPtr&lt;WebCore::CryptoKeyEC&gt; WebCore::CryptoKeyEC::platformImportPkcs8(WebCore::CryptoAlgorithmIdentifier , WebCore::CryptoKeyEC::NamedCurve , Vector&lt;uint8_t&gt; &amp;&amp; keyData, bool extractable, WebCore::CryptoKeyUsageBitmap )'/>
