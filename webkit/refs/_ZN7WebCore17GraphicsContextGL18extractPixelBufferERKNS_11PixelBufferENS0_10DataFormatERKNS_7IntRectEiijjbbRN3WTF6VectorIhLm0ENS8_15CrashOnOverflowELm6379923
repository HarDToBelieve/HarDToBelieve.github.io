<dec f='webkit/Source/WebCore/platform/graphics/GraphicsContextGL.h' l='1350' type='static bool WebCore::GraphicsContextGL::extractPixelBuffer(const WebCore::PixelBuffer &amp; , WebCore::GraphicsContextGL::DataFormat , const WebCore::IntRect &amp; sourceImageSubRectangle, int depth, int unpackImageHeight, GCGLenum format, GCGLenum type, bool flipY, bool premultiplyAlpha, Vector&lt;uint8_t&gt; &amp; data)'/>
<doc f='webkit/Source/WebCore/platform/graphics/GraphicsContextGL.h' l='1346'>// Extracts the contents of the given PixelBuffer into the passed Vector,
    // packing the pixel data according to the given format and type,
    // and obeying the flipY and premultiplyAlpha flags. Returns true
    // upon success.</doc>
<dec f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/GraphicsContextGL.h' l='1350' type='static bool WebCore::GraphicsContextGL::extractPixelBuffer(const WebCore::PixelBuffer &amp; , WebCore::GraphicsContextGL::DataFormat , const WebCore::IntRect &amp; sourceImageSubRectangle, int depth, int unpackImageHeight, GCGLenum format, GCGLenum type, bool flipY, bool premultiplyAlpha, Vector&lt;uint8_t&gt; &amp; data)'/>
<doc f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/GraphicsContextGL.h' l='1346'>// Extracts the contents of the given PixelBuffer into the passed Vector,
    // packing the pixel data according to the given format and type,
    // and obeying the flipY and premultiplyAlpha flags. Returns true
    // upon success.</doc>
<use f='webkit/Source/WebCore/html/canvas/WebGLRenderingContextBase.cpp' l='4794' u='c' c='_ZN7WebCore25WebGLRenderingContextBase20texImageSourceHelperENS0_18TexImageFunctionIDEjiiijjiiiRKNS_7IntRectEiiON3WTF7VariantIJNS5_6RefPtrINS_11ImageB5589748'/>
<def f='webkit/Source/WebCore/platform/graphics/GraphicsContextGL.cpp' l='767' ll='784' type='static bool WebCore::GraphicsContextGL::extractPixelBuffer(const WebCore::PixelBuffer &amp; pixelBuffer, WebCore::GraphicsContextGL::DataFormat sourceDataFormat, const WebCore::IntRect &amp; sourceImageSubRectangle, int depth, int unpackImageHeight, GCGLenum format, GCGLenum type, bool flipY, bool premultiplyAlpha, Vector&lt;uint8_t&gt; &amp; data)'/>
