<dec f='webkit/Source/WebCore/platform/graphics/GraphicsContextGL.h' l='1357' type='static bool WebCore::GraphicsContextGL::extractTextureData(unsigned int width, unsigned int height, GCGLenum format, GCGLenum type, const WebCore::GraphicsContextGL::PixelStoreParams &amp; unpackParams, bool flipY, bool premultiplyAlpha, const void * pixels, Vector&lt;uint8_t&gt; &amp; data)'/>
<doc f='webkit/Source/WebCore/platform/graphics/GraphicsContextGL.h' l='1352'>// Helper function which extracts the user-supplied texture
    // data, applying the flipY and premultiplyAlpha parameters.
    // If the data is not tightly packed according to the passed
    // unpackParams, the output data will be tightly packed.
    // Returns true if successful, false if any error occurred.</doc>
<dec f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/GraphicsContextGL.h' l='1357' type='static bool WebCore::GraphicsContextGL::extractTextureData(unsigned int width, unsigned int height, GCGLenum format, GCGLenum type, const WebCore::GraphicsContextGL::PixelStoreParams &amp; unpackParams, bool flipY, bool premultiplyAlpha, const void * pixels, Vector&lt;uint8_t&gt; &amp; data)'/>
<doc f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/GraphicsContextGL.h' l='1352'>// Helper function which extracts the user-supplied texture
    // data, applying the flipY and premultiplyAlpha parameters.
    // If the data is not tightly packed according to the passed
    // unpackParams, the output data will be tightly packed.
    // Returns true if successful, false if any error occurred.</doc>
<use f='webkit/Source/WebCore/html/canvas/WebGLRenderingContextBase.cpp' l='4992' u='c' c='_ZN7WebCore25WebGLRenderingContextBase29texImageArrayBufferViewHelperENS0_18TexImageFunctionIDEjiiiiiijjiiiON3WTF6RefPtrIN3JSC15ArrayBufferViewENS2_126088685'/>
<def f='webkit/Source/WebCore/platform/graphics/GraphicsContextGL.cpp' l='786' ll='808' type='static bool WebCore::GraphicsContextGL::extractTextureData(unsigned int width, unsigned int height, GCGLenum format, GCGLenum type, const WebCore::GraphicsContextGL::PixelStoreParams &amp; unpackParams, bool flipY, bool premultiplyAlpha, const void * pixels, Vector&lt;uint8_t&gt; &amp; data)'/>
