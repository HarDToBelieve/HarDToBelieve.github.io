<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/srtp_filter.h' l='78' type='bool cricket::SrtpFilter::SetAnswer(const std::vector&lt;CryptoParams&gt; &amp; answer_params, cricket::ContentSource source)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/srtp_filter.h' l='73'>// Indicates which crypto algorithms and keys were contained in the answer.
  // answer_params should contain the negotiated parameters, which may be none,
  // if crypto was not desired or could not be negotiated (and not required).
  // This must be called after SetOffer. If crypto negotiation completes
  // successfully, this will advance the filter to the active state.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/srtp_filter.cc' l='45' u='c' c='_ZN7cricket10SrtpFilter7ProcessERKNSt3__16vectorINS_12CryptoParamsENS1_9allocatorIS3_EEEEN6webrtc7SdpTypeENS_13ContentSourceE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/srtp_filter.cc' l='67' ll='70' type='bool cricket::SrtpFilter::SetAnswer(const std::vector&lt;CryptoParams&gt; &amp; answer_params, cricket::ContentSource source)'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/pc/srtp_filter.h' l='78' type='bool cricket::SrtpFilter::SetAnswer(const std::vector&lt;CryptoParams&gt; &amp; answer_params, cricket::ContentSource source)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/pc/srtp_filter.h' l='73'>// Indicates which crypto algorithms and keys were contained in the answer.
  // answer_params should contain the negotiated parameters, which may be none,
  // if crypto was not desired or could not be negotiated (and not required).
  // This must be called after SetOffer. If crypto negotiation completes
  // successfully, this will advance the filter to the active state.</doc>
