<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/channel.h' l='108' type='void cricket::BaseChannel::BaseChannel(rtc::Thread * worker_thread, rtc::Thread * network_thread, rtc::Thread * signaling_thread, std::unique_ptr&lt;MediaChannel&gt; media_channel, const std::string &amp; content_name, bool srtp_required, webrtc::CryptoOptions crypto_options, rtc::UniqueRandomIdGenerator * ssrc_generator)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/channel.h' l='102'>// If |srtp_required| is true, the channel will not send or receive any
  // RTP/RTCP packets without using SRTP (either using SDES or DTLS-SRTP).
  // The BaseChannel does not own the UniqueRandomIdGenerator so it is the
  // responsibility of the user to ensure it outlives this object.
  // TODO(zhihuang:) Create a BaseChannel::Config struct for the parameter lists
  // which will make it easier to change the constructor.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/channel.cc' l='117' ll='138' type='void cricket::BaseChannel::BaseChannel(rtc::Thread * worker_thread, rtc::Thread * network_thread, rtc::Thread * signaling_thread, std::unique_ptr&lt;MediaChannel&gt; media_channel, const std::string &amp; content_name, bool srtp_required, webrtc::CryptoOptions crypto_options, rtc::UniqueRandomIdGenerator * ssrc_generator)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/channel.cc' l='792' u='c' c='_ZN7cricket12VoiceChannelC1EPN3rtc6ThreadES3_S3_NSt3__110unique_ptrINS_17VoiceMediaChannelENS4_14default_deleteIS6_EEEERKNS4_12basic_stringIcNS4_11cha16201120'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/channel.cc' l='950' u='c' c='_ZN7cricket12VideoChannelC1EPN3rtc6ThreadES3_S3_NSt3__110unique_ptrINS_17VideoMediaChannelENS4_14default_deleteIS6_EEEERKNS4_12basic_stringIcNS4_11cha1201254'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/pc/channel.h' l='108' type='void cricket::BaseChannel::BaseChannel(rtc::Thread * worker_thread, rtc::Thread * network_thread, rtc::Thread * signaling_thread, std::unique_ptr&lt;MediaChannel&gt; media_channel, const std::string &amp; content_name, bool srtp_required, webrtc::CryptoOptions crypto_options, rtc::UniqueRandomIdGenerator * ssrc_generator)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/pc/channel.h' l='102'>// If |srtp_required| is true, the channel will not send or receive any
  // RTP/RTCP packets without using SRTP (either using SDES or DTLS-SRTP).
  // The BaseChannel does not own the UniqueRandomIdGenerator so it is the
  // responsibility of the user to ensure it outlives this object.
  // TODO(zhihuang:) Create a BaseChannel::Config struct for the parameter lists
  // which will make it easier to change the constructor.</doc>
