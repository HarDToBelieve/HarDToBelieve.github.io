<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/base/video_adapter.h' l='98' type='void cricket::VideoAdapter::OnSinkWants(const rtc::VideoSinkWants &amp; sink_wants)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/base/adapted_video_track_source.cc' l='83' u='c' c='_ZN3rtc23AdaptedVideoTrackSource18OnSinkWantsChangedERKNS_14VideoSinkWantsE'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/base/video_adapter.h' l='88'>// Requests the output frame size from |AdaptFrameResolution| to have as close
  // as possible to |sink_wants.target_pixel_count| pixels (if set)
  // but no more than |sink_wants.max_pixel_count|.
  // |sink_wants.max_framerate_fps| is essentially analogous to
  // |sink_wants.max_pixel_count|, but for framerate rather than resolution.
  // Set |sink_wants.max_pixel_count| and/or |sink_wants.max_framerate_fps| to
  // std::numeric_limit&lt;int&gt;::max() if no upper limit is desired.
  // The sink resolution alignment requirement is given by
  // |sink_wants.resolution_alignment|.
  // Note: Should be called from the sink only.</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/base/video_adapter.cc' l='341' ll='350' type='void cricket::VideoAdapter::OnSinkWants(const rtc::VideoSinkWants &amp; sink_wants)'/>
