<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/base/video_adapter.h' l='81' type='void cricket::VideoAdapter::OnOutputFormatRequest(const absl::optional&lt;std::pair&lt;int, int&gt;&gt; &amp; target_landscape_aspect_ratio, const absl::optional&lt;int&gt; &amp; max_landscape_pixel_count, const absl::optional&lt;std::pair&lt;int, int&gt;&gt; &amp; target_portrait_aspect_ratio, const absl::optional&lt;int&gt; &amp; max_portrait_pixel_count, const absl::optional&lt;int&gt; &amp; max_fps)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/base/video_adapter.h' l='77'>// Same as above, but allows setting two different target aspect ratios
  // depending on incoming frame orientation. This gives more fine-grained
  // control and can e.g. be used to force landscape video to be cropped to
  // portrait video.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/base/video_adapter.cc' l='322' u='c' c='_ZN7cricket12VideoAdapter21OnOutputFormatRequestERKNSt3__18optionalINS1_4pairIiiEEEERKNS2_IiEESA_'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/media/base/video_adapter.cc' l='326' ll='339' type='void cricket::VideoAdapter::OnOutputFormatRequest(const absl::optional&lt;std::pair&lt;int, int&gt;&gt; &amp; target_landscape_aspect_ratio, const absl::optional&lt;int&gt; &amp; max_landscape_pixel_count, const absl::optional&lt;std::pair&lt;int, int&gt;&gt; &amp; target_portrait_aspect_ratio, const absl::optional&lt;int&gt; &amp; max_portrait_pixel_count, const absl::optional&lt;int&gt; &amp; max_fps)'/>
