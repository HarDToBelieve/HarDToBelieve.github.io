<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/port_allocator.h' l='417' type='std::unique_ptr&lt;PortAllocatorSession&gt; cricket::PortAllocator::TakePooledSession(const std::string &amp; content_name, int component, const std::string &amp; ice_ufrag, const std::string &amp; ice_pwd)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/port_allocator.h' l='410'>// Get an available pooled session and set the transport information on it.
  //
  // Caller takes ownership of the returned session.
  //
  // If restrict_ice_credentials_change is TRUE, then it will only
  //   return a pooled session with matching ice credentials.
  // If no pooled sessions are available, returns null.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/p2p_transport_channel.cc' l='906' u='c' c='_ZN7cricket19P2PTransportChannel19MaybeStartGatheringEv'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/port_allocator.cc' l='220' ll='252' type='std::unique_ptr&lt;PortAllocatorSession&gt; cricket::PortAllocator::TakePooledSession(const std::string &amp; content_name, int component, const std::string &amp; ice_ufrag, const std::string &amp; ice_pwd)'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/p2p/base/port_allocator.h' l='417' type='std::unique_ptr&lt;PortAllocatorSession&gt; cricket::PortAllocator::TakePooledSession(const std::string &amp; content_name, int component, const std::string &amp; ice_ufrag, const std::string &amp; ice_pwd)'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/p2p/base/port_allocator.h' l='410'>// Get an available pooled session and set the transport information on it.
  //
  // Caller takes ownership of the returned session.
  //
  // If restrict_ice_credentials_change is TRUE, then it will only
  //   return a pooled session with matching ice credentials.
  // If no pooled sessions are available, returns null.</doc>
