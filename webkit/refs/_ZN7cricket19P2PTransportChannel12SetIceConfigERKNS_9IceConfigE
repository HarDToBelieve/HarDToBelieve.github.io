<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/p2p_transport_channel.h' l='155' type='void cricket::P2PTransportChannel::SetIceConfig(const cricket::IceConfig &amp; config)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/p2p_transport_channel.h' l='150'>// Sets the parameters in IceConfig. We do not set them blindly. Instead, we
  // only update the parameter if it is considered set in |config|. For example,
  // a negative value of receiving_timeout will be considered &quot;not set&quot; and we
  // will not use it to update the respective parameter in |config_|.
  // TODO(deadbeef): Use absl::optional instead of negative values.</doc>
<inh f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/ice_transport_internal.h' l='261' c='_ZN7cricket20IceTransportInternal12SetIceConfigERKNS_9IceConfigE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/p2p_transport_channel.cc' l='566' ll='799' type='void cricket::P2PTransportChannel::SetIceConfig(const cricket::IceConfig &amp; config)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/p2p_transport_channel.cc' l='561'>// TODO(qingsi): We apply the convention that setting a absl::optional parameter
// to null restores its default value in the implementation. However, some
// absl::optional parameters are only processed below if non-null, e.g.,
// regather_on_failed_networks_interval, and thus there is no way to restore the
// defaults. Fix this issue later for consistency.</doc>
