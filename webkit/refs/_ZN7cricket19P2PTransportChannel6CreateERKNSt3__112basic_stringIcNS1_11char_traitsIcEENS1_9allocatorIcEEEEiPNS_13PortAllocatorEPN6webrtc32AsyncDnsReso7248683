<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/p2p_transport_channel.h' l='105' type='static std::unique_ptr&lt;P2PTransportChannel&gt; cricket::P2PTransportChannel::Create(const std::string &amp; transport_name, int component, cricket::PortAllocator * allocator, webrtc::AsyncDnsResolverFactoryInterface * async_dns_resolver_factory, webrtc::RtcEventLog * event_log = nullptr, cricket::IceControllerFactoryInterface * ice_controller_factory = nullptr)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/ice_transport_factory.cc' l='69' u='c' c='_ZN6webrtc18CreateIceTransportENS_16IceTransportInitE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/default_ice_transport_factory.cc' l='48' u='c' c='_ZN6webrtc26DefaultIceTransportFactory18CreateIceTransportERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiNS_16IceTransportInitE'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/p2p_transport_channel.cc' l='137' ll='148' type='static std::unique_ptr&lt;P2PTransportChannel&gt; cricket::P2PTransportChannel::Create(const std::string &amp; transport_name, int component, cricket::PortAllocator * allocator, webrtc::AsyncDnsResolverFactoryInterface * async_dns_resolver_factory, webrtc::RtcEventLog * event_log = nullptr, cricket::IceControllerFactoryInterface * ice_controller_factory = nullptr)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/p2p_transport_channel.cc' l='136'>// static</doc>
