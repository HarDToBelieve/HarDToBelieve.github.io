<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/turn_port.h' l='291' type='bool cricket::TurnPort::CreateOrRefreshEntry(const rtc::SocketAddress &amp; addr, int channel_number)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/turn_port.cc' l='1215' ll='1218' type='bool cricket::TurnPort::CreateOrRefreshEntry(const rtc::SocketAddress &amp; addr, int channel_number)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/turn_port.h' l='289'>// NOTE: This method needs to be accessible for StacPort
  // return true if entry was created (i.e channel_number consumed).</doc>
