<dec f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/FramebufferImpl.h' l='69' type='const gl::InternalFormat &amp; rx::FramebufferImpl::getImplementationColorReadFormat(const gl::Context * context) const'/>
<def f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/FramebufferImpl.h' l='114' ll='119' type='const gl::InternalFormat &amp; rx::FramebufferImpl::getImplementationColorReadFormat(const gl::Context * context) const'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/Framebuffer.cpp' l='1487' u='c' c='_ZN2gl11Framebuffer32getImplementationColorReadFormatEPKNS_7ContextE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/Framebuffer.cpp' l='1493' u='c' c='_ZN2gl11Framebuffer30getImplementationColorReadTypeEPKNS_7ContextE'/>
<doc f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/FramebufferImpl.h' l='113'>// Default implementation returns the format specified in the attachment.</doc>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/frame_capture_utils.cpp' l='97' u='c' c='_ZN5angle12_GLOBAL__N_124ReadPixelsFromAttachmentEPKN2gl7ContextEPNS1_11FramebufferERKNS1_21FramebufferAttachmentEPNS_13ScratchBufferEPPNS_12MemoryBufferE'/>
<ovr f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/renderer/metal/FrameBufferMtl.mm' l='202' c='_ZNK2rx14FramebufferMtl32getImplementationColorReadFormatEPKN2gl7ContextE'/>
