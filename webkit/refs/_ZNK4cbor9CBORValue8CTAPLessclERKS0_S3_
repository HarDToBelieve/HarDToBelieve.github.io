<def f='webkit/Source/WebCore/Modules/webauthn/cbor/CBORValue.h' l='68' ll='94' type='bool cbor::CBORValue::CTAPLess::operator()(const cbor::CBORValue &amp; a, const cbor::CBORValue &amp; b) const'/>
<use f='webkit/Source/WebCore/Modules/webauthn/cbor/CBORReader.cpp' l='329' u='c' c='_ZN4cbor10CBORReader18checkOutOfOrderKeyERKNS_9CBORValueERKNSt3__13mapIS1_S1_NS1_8CTAPLessEN3WTF13FastAllocatorINS4_4pairIS2_S1_EEEEEE'/>
<doc f='webkit/Source/WebCore/Modules/webauthn/cbor/CBORValue.h' l='50'>// Comparison predicate to order keys in a dictionary as required by the
        // Client-to-Authenticator Protocol (CTAP) spec 2.0.
        //
        // The sort order defined in CTAP is:
        //   * If the major types are different, the one with the lower value in
        //     numerical order sorts earlier.
        //   * If two keys have different lengths, the shorter one sorts earlier.
        //   * If two keys have the same length, the one with the lower value in
        //     (byte-wise) lexical order sorts earlier.
        //
        // See section 6 of https://fidoalliance.org/specs/fido-v2.0-rd-20170927/
        // fido-client-to-authenticator-protocol-v2.0-rd-20170927.html.
        //
        // THE CTAP SORT ORDER IMPLEMENTED HERE DIFFERS FROM THE CANONICAL CBOR
        // ORDER defined in https://tools.ietf.org/html/rfc7049#section-3.9, in that
        // the latter sorts purely by serialised key and doesn&apos;t specify that major
        // types are compared first. Thus the shortest key sorts first by the RFC
        // rules (irrespective of the major type), but may not by CTAP rules.</doc>
<def f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/CBORValue.h' l='68' ll='94' type='bool cbor::CBORValue::CTAPLess::operator()(const cbor::CBORValue &amp; a, const cbor::CBORValue &amp; b) const'/>
<doc f='webkit/WebKitBuild/Debug/WebCore.framework/Versions/A/PrivateHeaders/CBORValue.h' l='50'>// Comparison predicate to order keys in a dictionary as required by the
        // Client-to-Authenticator Protocol (CTAP) spec 2.0.
        //
        // The sort order defined in CTAP is:
        //   * If the major types are different, the one with the lower value in
        //     numerical order sorts earlier.
        //   * If two keys have different lengths, the shorter one sorts earlier.
        //   * If two keys have the same length, the one with the lower value in
        //     (byte-wise) lexical order sorts earlier.
        //
        // See section 6 of https://fidoalliance.org/specs/fido-v2.0-rd-20170927/
        // fido-client-to-authenticator-protocol-v2.0-rd-20170927.html.
        //
        // THE CTAP SORT ORDER IMPLEMENTED HERE DIFFERS FROM THE CANONICAL CBOR
        // ORDER defined in https://tools.ietf.org/html/rfc7049#section-3.9, in that
        // the latter sorts purely by serialised key and doesn&apos;t specify that major
        // types are compared first. Thus the shortest key sorts first by the RFC
        // rules (irrespective of the major type), but may not by CTAP rules.</doc>
