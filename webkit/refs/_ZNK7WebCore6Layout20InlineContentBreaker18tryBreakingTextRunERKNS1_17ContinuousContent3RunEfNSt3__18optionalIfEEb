<dec f='webkit/Source/WebCore/layout/formattingContexts/inline/InlineContentBreaker.h' l='124' type='std::optional&lt;PartialRun&gt; WebCore::Layout::InlineContentBreaker::tryBreakingTextRun(const ContinuousContent::Run &amp; overflowRun, WebCore::InlineLayoutUnit logicalLeft, std::optional&lt;InlineLayoutUnit&gt; availableWidth, bool hasWrapOpportunityAtPreviousPosition) const'/>
<use f='webkit/Source/WebCore/layout/formattingContexts/inline/InlineContentBreaker.cpp' l='315' u='c' c='_ZNK7WebCore6Layout20InlineContentBreaker33processOverflowingContentWithTextERKNS1_17ContinuousContentERKNS1_10LineStatusE'/>
<use f='webkit/Source/WebCore/layout/formattingContexts/inline/InlineContentBreaker.cpp' l='339' u='c' c='_ZNK7WebCore6Layout20InlineContentBreaker33processOverflowingContentWithTextERKNS1_17ContinuousContentERKNS1_10LineStatusE'/>
<use f='webkit/Source/WebCore/layout/formattingContexts/inline/InlineContentBreaker.cpp' l='375' u='c' c='_ZNK7WebCore6Layout20InlineContentBreaker33processOverflowingContentWithTextERKNS1_17ContinuousContentERKNS1_10LineStatusE'/>
<def f='webkit/Source/WebCore/layout/formattingContexts/inline/InlineContentBreaker.cpp' l='426' ll='501' type='std::optional&lt;InlineContentBreaker::PartialRun&gt; WebCore::Layout::InlineContentBreaker::tryBreakingTextRun(const ContinuousContent::Run &amp; overflowingRun, WebCore::InlineLayoutUnit logicalLeft, std::optional&lt;InlineLayoutUnit&gt; availableWidth, bool hasWrapOpportunityAtPreviousPosition) const'/>
