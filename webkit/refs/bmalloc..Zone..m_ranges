<use f='webkit/Source/bmalloc/bmalloc/Zone.h' l='49' u='a' c='_ZN7bmalloc4Zone6rangesEv'/>
<dec f='webkit/Source/bmalloc/bmalloc/Zone.h' l='63' type='FixedVector&lt;bmalloc::Range, capacity&gt;'/>
<use f='webkit/Source/bmalloc/bmalloc/Zone.h' l='68' u='m' c='_ZN7bmalloc4Zone8addRangeENS_5RangeE'/>
<use f='webkit/Source/bmalloc/bmalloc/Zone.h' l='68' u='m' c='_ZN7bmalloc4Zone8addRangeENS_5RangeE'/>
<use f='webkit/Source/bmalloc/bmalloc/Zone.h' l='71' u='m' c='_ZN7bmalloc4Zone8addRangeENS_5RangeE'/>
<offset>1152</offset>
<doc f='webkit/Source/bmalloc/bmalloc/Zone.h' l='52'>// This vector has two purposes:
    //     (1) It stores the list of Chunks so that we can enumerate
    //         each Chunk and request that it be scanned if reachable.
    //     (2) It roots a pointer to each Chunk in a global non-malloc
    //         VM region, making each Chunk appear reachable, and therefore
    //         ensuring that the leaks tool will scan it. (The leaks tool
    //         conservatively scans all writeable VM regions that are not malloc
    //         regions, and then scans malloc regions using the introspection API.)
    // This prevents the leaks tool from reporting false positive leaks for
    // objects pointed to from bmalloc memory -- though it also prevents the
    // leaks tool from finding any leaks in bmalloc memory.</doc>
