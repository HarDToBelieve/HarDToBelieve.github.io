<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/base.h' l='384'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/bn.h' l='656' ll='659'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/bn.h' l='658'/>
<size>16</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/include/openssl/bn.h' l='638'>// bn_gencb_st, or |BN_GENCB|, holds a callback function that is used by
// generation functions that can take a very long time to complete. Use
// |BN_GENCB_set| to initialise a |BN_GENCB| structure.
//
// The callback receives the address of that |BN_GENCB| structure as its last
// argument and the user is free to put an arbitrary pointer in |arg|. The other
// arguments are set as follows:
//   event=BN_GENCB_GENERATED, n=i:   after generating the i&apos;th possible prime
//                                    number.
//   event=BN_GENCB_PRIME_TEST, n=-1: when finished trial division primality
//                                    checks.
//   event=BN_GENCB_PRIME_TEST, n=i:  when the i&apos;th primality test has finished.
//
// The callback can return zero to abort the generation progress or one to
// allow it to continue.
//
// When other code needs to call a BN generation function it will often take a
// BN_GENCB argument and may call the function with other argument values.</doc>
<mbr r='bn_gencb_st::arg' o='0' t='void *'/>
<mbr r='bn_gencb_st::callback' o='64' t='int (*)(int, int, struct bn_gencb_st *)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/bn/prime.c' l='367' c='BN_GENCB_set'/>
<size>16</size>
