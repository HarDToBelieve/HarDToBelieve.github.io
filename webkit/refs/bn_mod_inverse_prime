<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/bn/internal.h' l='623' type='int bn_mod_inverse_prime(BIGNUM * out, const BIGNUM * a, const BIGNUM * p, BN_CTX * ctx, const BN_MONT_CTX * mont_p)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/bn/internal.h' l='620'>// bn_mod_inverse_prime sets |out| to the modular inverse of |a| modulo |p|,
// computed with Fermat&apos;s Little Theorem. It returns one on success and zero on
// error. If |mont_p| is NULL, one will be computed temporarily.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/dsa/dsa.c' l='878' u='c' c='dsa_sign_setup'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/boringssl/src/crypto/fipsmodule/bn/gcd.c' l='356' ll='366' type='int bn_mod_inverse_prime(BIGNUM * out, const BIGNUM * a, const BIGNUM * p, BN_CTX * ctx, const BN_MONT_CTX * mont_p)'/>
