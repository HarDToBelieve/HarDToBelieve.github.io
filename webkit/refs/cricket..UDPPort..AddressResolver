<inh f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/third_party/sigslot/sigslot.h' l='474' c='sigslot::has_slots'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/stun_port.h' l='184' ll='207'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/stun_port.h' l='250'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/stun_port.cc' l='437' c='_ZN7cricket7UDPPort18ResolveStunAddressERKN3rtc13SocketAddressE'/>
<size>144</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/stun_port.h' l='181'>// A helper class which can be called repeatedly to resolve multiple
  // addresses, as opposed to rtc::AsyncResolverInterface, which can only
  // resolve one address per instance.</doc>
<fun r='_ZN7cricket7UDPPort15AddressResolverC1EPN3rtc19PacketSocketFactoryE'/>
<fun r='_ZN7cricket7UDPPort15AddressResolverD1Ev'/>
<fun r='_ZN7cricket7UDPPort15AddressResolver7ResolveERKN3rtc13SocketAddressE'/>
<fun r='_ZNK7cricket7UDPPort15AddressResolver18GetResolvedAddressERKN3rtc13SocketAddressEiPS3_'/>
<mbr r='cricket::UDPPort::AddressResolver::SignalDone' o='448' t='sigslot::signal2&lt;const rtc::SocketAddress &amp;, int&gt;'/>
<fun r='_ZN7cricket7UDPPort15AddressResolver15OnResolveResultEPN3rtc22AsyncResolverInterfaceE'/>
<mbr r='cricket::UDPPort::AddressResolver::socket_factory_' o='896' t='rtc::PacketSocketFactory *'/>
<mbr r='cricket::UDPPort::AddressResolver::resolvers_' o='960' t='cricket::UDPPort::AddressResolver::ResolverMap'/>
<fun r='_ZN7cricket7UDPPort15AddressResolverC1EPN3rtc19PacketSocketFactoryE'/>
<fun r='_ZN7cricket7UDPPort15AddressResolverD1Ev'/>
<fun r='_ZN7cricket7UDPPort15AddressResolver7ResolveERKN3rtc13SocketAddressE'/>
<fun r='_ZNK7cricket7UDPPort15AddressResolver18GetResolvedAddressERKN3rtc13SocketAddressEiPS3_'/>
<fun r='_ZN7cricket7UDPPort15AddressResolver15OnResolveResultEPN3rtc22AsyncResolverInterfaceE'/>
