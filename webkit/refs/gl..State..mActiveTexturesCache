<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/State.h' l='721' u='a' c='_ZNK2gl5State22getActiveTexturesCacheEv'/>
<dec f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/State.h' l='1015' type='gl::ActiveTexturesCache'/>
<offset>72000</offset>
<doc f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/State.h' l='1006'>// Active Textures Cache
    // ---------------------
    // The active textures cache gives ANGLE components access to a complete array of textures
    // on a draw call. gl::State implements angle::Observer and watches gl::Texture for state
    // changes via the onSubjectStateChange method above. We update the cache before draws.
    // See Observer.h and the design doc linked there for more info on Subject/Observer events.
    //
    // On state change events (re-binding textures, samplers, programs etc) we clear the cache
    // and flag dirty bits. nullptr indicates unbound or incomplete.</doc>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/State.cpp' l='520' u='m' c='_ZN2gl5State5resetEPKNS_7ContextE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/State.cpp' l='596' u='m' c='_ZN2gl5State19unsetActiveTexturesEN5angle14IterableBitSetILm64EEE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/State.cpp' l='608' u='m' c='_ZN2gl5State30updateActiveTextureStateOnSyncEPKNS_7ContextEmPKNS_7SamplerEPNS_7TextureE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/State.cpp' l='612' u='m' c='_ZN2gl5State30updateActiveTextureStateOnSyncEPKNS_7ContextEmPKNS_7SamplerEPNS_7TextureE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/State.cpp' l='660' u='m' c='_ZN2gl5State20updateTextureBindingEPKNS_7ContextEmPNS_7TextureE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/State.cpp' l='3125' u='m' c='_ZN2gl5State16syncTexturesInitEPKNS_7ContextENS_7CommandE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/State.cpp' l='3182' u='m' c='_ZN2gl5State12syncTexturesEPKNS_7ContextENS_7CommandE'/>
