<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/VertexArray.h' l='76' u='r' c='_ZNK2gl16VertexArrayState26getClientMemoryAttribsMaskEv'/>
<dec f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/VertexArray.h' l='99' type='gl::AttributesMask'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/VertexArray.h' l='247' u='r' c='_ZNK2gl11VertexArray20getClientAttribsMaskEv'/>
<offset>960</offset>
<doc f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/VertexArray.h' l='95'>// From the GLES 3.1 spec:
    // When a generic attribute array is sourced from client memory, the vertex attribute binding
    // state is ignored. Thus we don&apos;t have to worry about binding state when using client memory
    // attribs.</doc>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/VertexArray.cpp' l='45' u='m' c='_ZN2gl16VertexArrayStateC1EPNS_11VertexArrayEmm'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/VertexArray.cpp' l='179' u='w' c='_ZN2gl11VertexArray12detachBufferEPKNS_7ContextENS_8BufferIDE'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/VertexArray.cpp' l='317' u='w' c='_ZN2gl11VertexArray20bindVertexBufferImplEPKNS_7ContextEmPNS_6BufferEli'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/VertexArray.cpp' l='324' u='w' c='_ZN2gl11VertexArray20bindVertexBufferImplEPKNS_7ContextEmPNS_6BufferEli'/>
<use f='webkit/Source/ThirdParty/ANGLE/src/libANGLE/VertexArray.cpp' l='360' u='m' c='_ZN2gl11VertexArray22setVertexAttribBindingEPKNS_7ContextEmj'/>
