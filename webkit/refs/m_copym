<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/user_mbuf.h' l='114' type='struct mbuf * m_copym(struct mbuf * , int , int , int )'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_indata.c' l='2054' macro='1' u='c' c='sctp_process_a_data_chunk'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_indata.c' l='2058' macro='1' u='c' c='sctp_process_a_data_chunk'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_indata.c' l='2898' macro='1' u='c' c='sctp_process_data'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_input.c' l='5712' macro='1' u='c' c='sctp_process_control'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_output.c' l='3948' macro='1' u='c' c='sctp_add_cookie'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_output.c' l='3958' macro='1' u='c' c='sctp_add_cookie'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_output.c' l='5544' macro='1' u='c' c='sctp_arethere_unrecognized_parameters'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_output.c' l='5615' macro='1' u='c' c='sctp_arethere_unrecognized_parameters'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_output.c' l='7080' macro='1' u='c' c='sctp_copy_mbufchain'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_output.c' l='7165' macro='1' u='c' c='sctp_sendall_iterator'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_output.c' l='7942' macro='1' u='c' c='sctp_move_to_outqueue'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_output.c' l='9572' macro='1' u='c' c='sctp_send_cookie_echo'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_output.c' l='9640' macro='1' u='c' c='sctp_send_heartbeat_ack'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_output.c' l='9936' macro='1' u='c' c='sctp_send_asconf_ack'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/user_mbuf.c' l='1116' ll='1182' type='struct mbuf * m_copym(struct mbuf * m, int off0, int len, int wait)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/user_mbuf.c' l='1108'>/*
 * Make a copy of an mbuf chain starting &quot;off0&quot; bytes from the beginning,
 * continuing for &quot;len&quot; bytes.  If len is M_COPYALL, copy to end of mbuf.
 * The wait parameter is a choice of M_TRYWAIT/M_NOWAIT from caller.
 * Note that the copy is read-only, because clusters are not copied,
 * only their reference counts are incremented.
 */</doc>
