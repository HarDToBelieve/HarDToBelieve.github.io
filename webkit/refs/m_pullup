<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/user_mbuf.h' l='116' type='struct mbuf * m_pullup(struct mbuf * , int )'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/user_mbuf.c' l='841' ll='892' type='struct mbuf * m_pullup(struct mbuf * n, int len)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/user_mbuf.c' l='833'>/*
 * Rearange an mbuf chain so that len bytes are contiguous
 * and in the data area of an mbuf (so that mtod and dtom
 * will work for a structure of size len).  Returns the resulting
 * mbuf chain on success, frees it and returns null on failure.
 * If there is room, it will add up to max_protohdr-len extra bytes to the
 * contiguous region in an attempt to avoid being called next time.
 */</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/user_socket.c' l='3332' u='c' c='usrsctp_conninput'/>
