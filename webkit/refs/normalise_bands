<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/celt/bands.h' l='57' type='void normalise_bands(const OpusCustomMode * m, const celt_sig *restrict freq, celt_norm *restrict X, const celt_ener * bandE, int end, int C, int M)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/celt/bands.c' l='177' ll='191' type='void normalise_bands(const OpusCustomMode * m, const celt_sig *restrict freq, celt_norm *restrict X, const celt_ener * bandE, int end, int C, int M)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/celt/bands.c' l='176'>/* Normalise each band such that the energy is one. */</doc>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/celt/bands.h' l='51'>/** Normalise each band of X such that the energy in each band is
    equal to 1
 * @param m Mode data
 * @param X Spectrum (returned normalised)
 * @param bandE Square root of the energy for each band
 */</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/celt/celt_encoder.c' l='1871' u='c' c='celt_encode_with_ec'/>
