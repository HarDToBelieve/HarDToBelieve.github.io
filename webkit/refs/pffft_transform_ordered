<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/pffft/src/pffft.h' l='141' type='void pffft_transform_ordered(PFFFT_Setup * setup, const float * input, float * output, float * work, pffft_direction_t direction)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/pffft/src/pffft.c' l='1879' ll='1881' type='void pffft_transform_ordered(PFFFT_Setup * setup, const float * input, float * output, float * work, pffft_direction_t direction)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/pffft/src/pffft.h' l='134'>/*
   Similar to pffft_transform, but makes sure that the output is
   ordered as expected (interleaved complex numbers).  This is
   similar to calling pffft_transform and then pffft_zreorder.

   input and output may alias.
*/</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/utility/pffft_wrapper.cc' l='101' u='c' c='_ZN6webrtc5Pffft16ForwardTransformERKNS0_11FloatBufferEPS1_b'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/modules/audio_processing/utility/pffft_wrapper.cc' l='116' u='c' c='_ZN6webrtc5Pffft17BackwardTransformERKNS0_11FloatBufferEPS1_b'/>
