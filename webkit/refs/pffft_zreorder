<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/pffft/src/pffft.h' l='159' type='void pffft_zreorder(PFFFT_Setup * setup, const float * input, float * output, pffft_direction_t direction)'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/pffft/src/pffft.c' l='1295' ll='1330' type='void pffft_zreorder(PFFFT_Setup * setup, const float * in, float * out, pffft_direction_t direction)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/pffft/src/pffft.c' l='1635' u='c' c='pffft_transform_internal'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/pffft/src/pffft.c' l='1642' u='c' c='pffft_transform_internal'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/pffft/src/pffft.h' l='147'>/*
   call pffft_zreorder(.., PFFFT_FORWARD) after pffft_transform(...,
   PFFFT_FORWARD) if you want to have the frequency components in
   the correct &quot;canonical&quot; order, as interleaved complex numbers.

   (for real transforms, both 0-frequency and half frequency
   components, which are real, are assembled in the first entry as
   F(0)+i*F(n/2+1). Note that the original fftpack did place
   F(n/2+1) at the end of the arrays).

   input and output should not alias.
*/</doc>
