<inh f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/async_resolver_interface.h' l='21' c='rtc::AsyncResolverInterface'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/async_resolver.h' l='43' ll='71'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/basic_async_resolver_factory.cc' l='24' c='_ZN6webrtc25BasicAsyncResolverFactory6CreateEv'/>
<size>272</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/async_resolver.h' l='36'>// AsyncResolver will perform async DNS resolution, signaling the result on
// the SignalDone from AsyncResolverInterface when the operation completes.
//
// This class is thread-compatible, and all methods and destruction needs to
// happen from the same rtc::Thread, except for Destroy which is allowed to
// happen on another context provided it&apos;s not happening concurrently to another
// public API call, and is the last access to the object.</doc>
<fun r='_ZN3rtc13AsyncResolverC1Ev'/>
<fun r='_ZN3rtc13AsyncResolverD1Ev'/>
<fun r='_ZN3rtc13AsyncResolver5StartERKNS_13SocketAddressE'/>
<fun r='_ZNK3rtc13AsyncResolver18GetResolvedAddressEiPNS_13SocketAddressE'/>
<fun r='_ZNK3rtc13AsyncResolver8GetErrorEv'/>
<fun r='_ZN3rtc13AsyncResolver7DestroyEb'/>
<fun r='_ZNK3rtc13AsyncResolver9addressesEv'/>
<fun r='_ZN3rtc13AsyncResolver11ResolveDoneENSt3__16vectorINS_9IPAddressENS1_9allocatorIS3_EEEEi'/>
<fun r='_ZN3rtc13AsyncResolver17MaybeSelfDestructEv'/>
<mbr r='rtc::AsyncResolver::addr_' o='512' t='rtc::SocketAddress'/>
<mbr r='rtc::AsyncResolver::addresses_' o='1088' t='std::vector&lt;IPAddress&gt;'/>
<mbr r='rtc::AsyncResolver::error_' o='1280' t='int'/>
<mbr r='rtc::AsyncResolver::recursion_check_' o='1312' t='bool'/>
<mbr r='rtc::AsyncResolver::destroy_called_' o='1320' t='bool'/>
<mbr r='rtc::AsyncResolver::state_' o='1344' t='scoped_refptr&lt;rtc::AsyncResolver::State&gt;'/>
<mbr r='rtc::AsyncResolver::sequence_checker_' o='1408' t='webrtc::SequenceChecker'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/basic_packet_socket_factory.cc' l='203' c='_ZN3rtc24BasicPacketSocketFactory19CreateAsyncResolverEv'/>
<size>272</size>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/physical_socket_server.h' l='209'/>
<size>272</size>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/physical_socket_server.cc' l='243' c='_ZN3rtc14PhysicalSocket7ConnectERKNS_13SocketAddressE'/>
<size>272</size>
<inh f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/async_resolver_interface.h' l='21' c='rtc::AsyncResolverInterface'/>
<def f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/async_resolver.h' l='43' ll='71'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/physical_socket_server.h' l='209'/>
<size>272</size>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/async_resolver.h' l='36'>// AsyncResolver will perform async DNS resolution, signaling the result on
// the SignalDone from AsyncResolverInterface when the operation completes.
//
// This class is thread-compatible, and all methods and destruction needs to
// happen from the same rtc::Thread, except for Destroy which is allowed to
// happen on another context provided it&apos;s not happening concurrently to another
// public API call, and is the last access to the object.</doc>
<fun r='_ZN3rtc13AsyncResolverC1Ev'/>
<fun r='_ZN3rtc13AsyncResolverD1Ev'/>
<fun r='_ZN3rtc13AsyncResolver5StartERKNS_13SocketAddressE'/>
<fun r='_ZNK3rtc13AsyncResolver18GetResolvedAddressEiPNS_13SocketAddressE'/>
<fun r='_ZNK3rtc13AsyncResolver8GetErrorEv'/>
<fun r='_ZN3rtc13AsyncResolver7DestroyEb'/>
<fun r='_ZNK3rtc13AsyncResolver9addressesEv'/>
<fun r='_ZN3rtc13AsyncResolver11ResolveDoneENSt3__16vectorINS_9IPAddressENS1_9allocatorIS3_EEEEi'/>
<fun r='_ZN3rtc13AsyncResolver17MaybeSelfDestructEv'/>
<mbr r='rtc::AsyncResolver::addr_' o='512' t='rtc::SocketAddress'/>
<mbr r='rtc::AsyncResolver::addresses_' o='1088' t='std::vector&lt;IPAddress&gt;'/>
<mbr r='rtc::AsyncResolver::error_' o='1280' t='int'/>
<mbr r='rtc::AsyncResolver::recursion_check_' o='1312' t='bool'/>
<mbr r='rtc::AsyncResolver::destroy_called_' o='1320' t='bool'/>
<mbr r='rtc::AsyncResolver::state_' o='1344' t='scoped_refptr&lt;rtc::AsyncResolver::State&gt;'/>
<mbr r='rtc::AsyncResolver::sequence_checker_' o='1408' t='webrtc::SequenceChecker'/>
