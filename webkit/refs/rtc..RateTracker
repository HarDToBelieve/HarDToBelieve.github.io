<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/rate_tracker.h' l='22' ll='68'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/connection.h' l='381'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/p2p/base/connection.h' l='382'/>
<size>64</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/rate_tracker.h' l='19'>// Computes units per second over a given interval by tracking the units over
// each bucket of a given size and calculating the instantaneous rate assuming
// that over each bucket the rate was constant.</doc>
<fun r='_ZN3rtc11RateTrackerC1Exm'/>
<fun r='_ZN3rtc11RateTrackerD1Ev'/>
<fun r='_ZNK3rtc11RateTracker22ComputeRateForIntervalEx'/>
<fun r='_ZNK3rtc11RateTracker11ComputeRateEv'/>
<fun r='_ZNK3rtc11RateTracker16ComputeTotalRateEv'/>
<fun r='_ZNK3rtc11RateTracker16TotalSampleCountEv'/>
<fun r='_ZN3rtc11RateTracker10AddSamplesEx'/>
<fun r='_ZN3rtc11RateTracker16AddSamplesAtTimeExx'/>
<fun r='_ZNK3rtc11RateTracker4TimeEv'/>
<fun r='_ZN3rtc11RateTracker17EnsureInitializedEv'/>
<fun r='_ZNK3rtc11RateTracker15NextBucketIndexEm'/>
<mbr r='rtc::RateTracker::bucket_milliseconds_' o='64' t='const int64_t'/>
<mbr r='rtc::RateTracker::bucket_count_' o='128' t='const size_t'/>
<mbr r='rtc::RateTracker::sample_buckets_' o='192' t='int64_t *'/>
<mbr r='rtc::RateTracker::total_sample_count_' o='256' t='size_t'/>
<mbr r='rtc::RateTracker::current_bucket_' o='320' t='size_t'/>
<mbr r='rtc::RateTracker::bucket_start_time_milliseconds_' o='384' t='int64_t'/>
<mbr r='rtc::RateTracker::initialization_time_milliseconds_' o='448' t='int64_t'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/receive_statistics_proxy2.h' l='172'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/receive_statistics_proxy2.h' l='173'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/send_statistics_proxy.h' l='285'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/send_statistics_proxy.h' l='286'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/send_statistics_proxy.h' l='287'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/send_statistics_proxy.h' l='344'/>
<size>64</size>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/receive_statistics_proxy.h' l='165'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/receive_statistics_proxy.h' l='166'/>
<size>64</size>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/send_statistics_proxy.cc' l='968' c='_ZN6webrtc19SendStatisticsProxy18OnSendEncodedImageERKNS_12EncodedImageEPKNS_17CodecSpecificInfoE'/>
<size>64</size>
<def f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/rate_tracker.h' l='22' ll='68'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/p2p/base/connection.h' l='381'/>
<use f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/p2p/base/connection.h' l='382'/>
<size>64</size>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/rate_tracker.h' l='19'>// Computes units per second over a given interval by tracking the units over
// each bucket of a given size and calculating the instantaneous rate assuming
// that over each bucket the rate was constant.</doc>
<fun r='_ZN3rtc11RateTrackerC1Exm'/>
<fun r='_ZN3rtc11RateTrackerD1Ev'/>
<fun r='_ZNK3rtc11RateTracker22ComputeRateForIntervalEx'/>
<fun r='_ZNK3rtc11RateTracker11ComputeRateEv'/>
<fun r='_ZNK3rtc11RateTracker16ComputeTotalRateEv'/>
<fun r='_ZNK3rtc11RateTracker16TotalSampleCountEv'/>
<fun r='_ZN3rtc11RateTracker10AddSamplesEx'/>
<fun r='_ZN3rtc11RateTracker16AddSamplesAtTimeExx'/>
<fun r='_ZNK3rtc11RateTracker4TimeEv'/>
<fun r='_ZN3rtc11RateTracker17EnsureInitializedEv'/>
<fun r='_ZNK3rtc11RateTracker15NextBucketIndexEm'/>
<mbr r='rtc::RateTracker::bucket_milliseconds_' o='64' t='const int64_t'/>
<mbr r='rtc::RateTracker::bucket_count_' o='128' t='const size_t'/>
<mbr r='rtc::RateTracker::sample_buckets_' o='192' t='int64_t *'/>
<mbr r='rtc::RateTracker::total_sample_count_' o='256' t='size_t'/>
<mbr r='rtc::RateTracker::current_bucket_' o='320' t='size_t'/>
<mbr r='rtc::RateTracker::bucket_start_time_milliseconds_' o='384' t='int64_t'/>
<mbr r='rtc::RateTracker::initialization_time_milliseconds_' o='448' t='int64_t'/>
