<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video/video_source_interface.h' l='82' type='std::vector&lt;FrameSize&gt;'/>
<offset>192</offset>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/video/video_source_interface.h' l='63'>// The resolutions that sink is configured to consume. If the sink is an
  // encoder this is what the encoder is configured to encode. In singlecast we
  // only encode one resolution, but in simulcast and SVC this can mean multiple
  // resolutions per frame.
  //
  // The sink is always configured to consume a subset of the
  // webrtc::VideoFrame&apos;s resolution. In the case of encoding, we usually encode
  // at webrtc::VideoFrame&apos;s resolution but this may not always be the case due
  // to scaleResolutionDownBy or turning off simulcast or SVC layers.
  //
  // For example, we may capture at 720p and due to adaptation (e.g. applying
  // |max_pixel_count| constraints) create webrtc::VideoFrames of size 480p, but
  // if we do scaleResolutionDownBy:2 then the only resolution we end up
  // encoding is 240p. In this case we still need to provide webrtc::VideoFrames
  // of size 480p but we can optimize internal buffers for 240p, avoiding
  // downsampling to 480p if possible.
  //
  // Note that the |resolutions| can change while frames are in flight and
  // should only be used as a hint when constructing the webrtc::VideoFrame.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/video_source_sink_controller.cc' l='34' u='m' c='_ZN6webrtc12_GLOBAL__N_113WantsToStringERKN3rtc14VideoSinkWantsE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/video_source_sink_controller.cc' l='37' u='m' c='_ZN6webrtc12_GLOBAL__N_113WantsToStringERKN3rtc14VideoSinkWantsE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/video_source_sink_controller.cc' l='37' u='m' c='_ZN6webrtc12_GLOBAL__N_113WantsToStringERKN3rtc14VideoSinkWantsE'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/video/video_source_sink_controller.cc' l='183' u='w' c='_ZNK6webrtc25VideoSourceSinkController26CurrentSettingsToSinkWantsEv'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/video/video_source_interface.h' l='82' type='std::vector&lt;FrameSize&gt;'/>
<offset>192</offset>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/video/video_source_interface.h' l='63'>// The resolutions that sink is configured to consume. If the sink is an
  // encoder this is what the encoder is configured to encode. In singlecast we
  // only encode one resolution, but in simulcast and SVC this can mean multiple
  // resolutions per frame.
  //
  // The sink is always configured to consume a subset of the
  // webrtc::VideoFrame&apos;s resolution. In the case of encoding, we usually encode
  // at webrtc::VideoFrame&apos;s resolution but this may not always be the case due
  // to scaleResolutionDownBy or turning off simulcast or SVC layers.
  //
  // For example, we may capture at 720p and due to adaptation (e.g. applying
  // |max_pixel_count| constraints) create webrtc::VideoFrames of size 480p, but
  // if we do scaleResolutionDownBy:2 then the only resolution we end up
  // encoding is 240p. In this case we still need to provide webrtc::VideoFrames
  // of size 480p but we can optimize internal buffers for 240p, avoiding
  // downsampling to 480p if possible.
  //
  // Note that the |resolutions| can change while frames are in flight and
  // should only be used as a hint when constructing the webrtc::VideoFrame.</doc>
