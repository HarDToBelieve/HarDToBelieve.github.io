<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_pcb.h' l='736' type='struct sctp_tcb * sctp_findassociation_addr(struct mbuf * , int , struct sockaddr * , struct sockaddr * , struct sctphdr * , struct sctp_chunkhdr * , struct sctp_inpcb ** , struct sctp_nets ** , uint32_t vrf_id)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_input.c' l='5796' u='c' c='sctp_common_input_processing'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_input.c' l='5838' u='c' c='sctp_common_input_processing'/>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_pcb.c' l='2570' ll='2624' type='struct sctp_tcb * sctp_findassociation_addr(struct mbuf * m, int offset, struct sockaddr * src, struct sockaddr * dst, struct sctphdr * sh, struct sctp_chunkhdr * ch, struct sctp_inpcb ** inp_p, struct sctp_nets ** netp, uint32_t vrf_id)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_pcb.c' l='2566'>/*
 * Find an association with the pointer to the inbound IP packet. This can be
 * a IPv4 or IPv6 packet.
 */</doc>
