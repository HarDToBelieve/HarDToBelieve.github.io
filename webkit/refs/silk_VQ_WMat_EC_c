<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/silk/main.h' l='225' type='void silk_VQ_WMat_EC_c(opus_int8 * ind, opus_int32 * res_nrg_Q15, opus_int32 * rate_dist_Q8, int * gain_Q7, const opus_int32 * XX_Q17, const opus_int32 * xX_Q17, const opus_int8 * cb_Q7, const opus_uint8 * cb_gain_Q7, const opus_uint8 * cl_Q5, const int subfr_len, const opus_int32 max_gain_Q7, const int L)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/silk/main.h' l='224'>/* Entropy constrained matrix-weighted VQ, for a single input data vector */</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/silk/VQ_WMat_EC.c' l='35' ll='131' type='void silk_VQ_WMat_EC_c(opus_int8 * ind, opus_int32 * res_nrg_Q15, opus_int32 * rate_dist_Q8, int * gain_Q7, const opus_int32 * XX_Q17, const opus_int32 * xX_Q17, const opus_int8 * cb_Q7, const opus_uint8 * cb_gain_Q7, const opus_uint8 * cl_Q5, const int subfr_len, const opus_int32 max_gain_Q7, const int L)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/silk/VQ_WMat_EC.c' l='34'>/* Entropy constrained matrix-weighted VQ, hard-coded to 5-element vectors, for a single input data vector */</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/opus/src/silk/quant_LTP_gains.c' l='84' macro='1' u='c' c='silk_quant_LTP_gains'/>
