<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/libsrtp/include/srtp.h' l='321' ll='347'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/libsrtp/include/srtp.h' l='346'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/libsrtp/include/srtp.h' l='321'/>
<size>128</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/libsrtp/include/srtp.h' l='295'>/**
 * @brief represents the policy for an SRTP session.
 *
 * A single srtp_policy_t struct represents the policy for a single
 * SRTP stream, and a linked list of these elements represents the
 * policy for an entire SRTP session.  Each element contains the SRTP
 * and SRTCP crypto policies for that stream, a pointer to the SRTP
 * master key for that stream, the SSRC describing that stream, or a
 * flag indicating a `wildcard&apos; SSRC value, and a `next&apos; field that
 * holds a pointer to the next element in the list of policy elements,
 * or NULL if it is the last element.
 *
 * The wildcard value SSRC_ANY_INBOUND matches any SSRC from an
 * inbound stream that for which there is no explicit SSRC entry in
 * another policy element.  Similarly, the value SSRC_ANY_OUTBOUND
 * will matches any SSRC from an outbound stream that does not appear
 * in another policy element.  Note that wildcard SSRCs &amp;b cannot be
 * used to match both inbound and outbound traffic.  This restriction
 * is intentional, and it allows libSRTP to ensure that no security
 * lapses result from accidental re-use of SSRC values during key
 * sharing.
 *
 * @warning The final element of the list @b must have its `next&apos; pointer
 *          set to NULL.
 */</doc>
<mbr r='srtp_policy_t::ssrc' o='0' t='srtp_ssrc_t'/>
<mbr r='srtp_policy_t::rtp' o='64' t='srtp_crypto_policy_t'/>
<mbr r='srtp_policy_t::rtcp' o='256' t='srtp_crypto_policy_t'/>
<mbr r='srtp_policy_t::key' o='448' t='unsigned char *'/>
<mbr r='srtp_policy_t::keys' o='512' t='srtp_master_key_t **'/>
<mbr r='srtp_policy_t::num_master_keys' o='576' t='unsigned long'/>
<mbr r='srtp_policy_t::ekt' o='640' t='srtp_ekt_policy_t'/>
<mbr r='srtp_policy_t::window_size' o='704' t='unsigned long'/>
<mbr r='srtp_policy_t::allow_repeat_tx' o='768' t='int'/>
<mbr r='srtp_policy_t::enc_xtn_hdr' o='832' t='int *'/>
<mbr r='srtp_policy_t::enc_xtn_hdr_count' o='896' t='int'/>
<mbr r='srtp_policy_t::next' o='960' t='struct srtp_policy_t *'/>
