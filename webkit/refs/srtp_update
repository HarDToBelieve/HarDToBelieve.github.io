<dec f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/libsrtp/include/srtp.h' l='653' type='srtp_err_status_t srtp_update(srtp_t session, const srtp_policy_t * policy)'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/libsrtp/include/srtp.h' l='629'>/**
 * @brief srtp_update() updates all streams in the session.
 *
 * The function call srtp_update(session, policy) updates
 * all the streams in the session applying the given policy
 * and key. The existing ROC value of all streams will be
 * preserved.
 *
 * @param session is the SRTP session that contains the streams
 *        to be updated.
 *
 * @param policy is the srtp_policy_t struct that describes the policy
 * for the session.  The struct may be a single element, or it may be
 * the head of a list, in which case each element of the list is
 * processed. The final element of the list @b must
 * have its `next&apos; field set to NULL.
 *
 * @return
 *    - srtp_err_status_ok           if stream creation succeed.
 *    - srtp_err_status_alloc_fail   if stream allocation failed
 *    - srtp_err_status_init_fail    if stream initialization failed.
 *    - [other]                 otherwise.
 *
 */</doc>
<def f='webkit/Source/ThirdParty/libwebrtc/Source/third_party/libsrtp/srtp/srtp.c' l='2966' ll='2986' type='srtp_err_status_t srtp_update(srtp_t session, const srtp_policy_t * policy)'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/srtp_session.cc' l='318' u='c' c='_ZN7cricket11SrtpSession8DoSetKeyEiiPKhmRKNSt3__16vectorIiNS3_9allocatorIiEEEE'/>
