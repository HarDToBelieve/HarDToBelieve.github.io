<def f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_audio/channel_buffer.h' l='182' ll='211'/>
<size>240</size>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/common_audio/channel_buffer.h' l='176'>// One int16_t and one float ChannelBuffer that are kept in sync. The sync is
// broken when someone requests write access to either ChannelBuffer, and
// reestablished when someone requests the outdated ChannelBuffer. It is
// therefore safe to use the return value of ibuf_const() and fbuf_const()
// until the next call to ibuf() or fbuf(), and the return value of ibuf() and
// fbuf() until the next call to any of the other functions.</doc>
<fun r='_ZN6webrtc15IFChannelBufferC1Emmm'/>
<fun r='_ZN6webrtc15IFChannelBufferD1Ev'/>
<fun r='_ZN6webrtc15IFChannelBuffer4ibufEv'/>
<fun r='_ZN6webrtc15IFChannelBuffer4fbufEv'/>
<fun r='_ZNK6webrtc15IFChannelBuffer10ibuf_constEv'/>
<fun r='_ZNK6webrtc15IFChannelBuffer10fbuf_constEv'/>
<fun r='_ZNK6webrtc15IFChannelBuffer10num_framesEv'/>
<fun r='_ZNK6webrtc15IFChannelBuffer19num_frames_per_bandEv'/>
<fun r='_ZNK6webrtc15IFChannelBuffer12num_channelsEv'/>
<fun r='_ZN6webrtc15IFChannelBuffer16set_num_channelsEm'/>
<fun r='_ZNK6webrtc15IFChannelBuffer9num_bandsEv'/>
<fun r='_ZNK6webrtc15IFChannelBuffer8RefreshFEv'/>
<fun r='_ZNK6webrtc15IFChannelBuffer8RefreshIEv'/>
<mbr r='webrtc::IFChannelBuffer::ivalid_' o='0' t='bool'/>
<mbr r='webrtc::IFChannelBuffer::ibuf_' o='64' t='ChannelBuffer&lt;int16_t&gt;'/>
<mbr r='webrtc::IFChannelBuffer::fvalid_' o='960' t='bool'/>
<mbr r='webrtc::IFChannelBuffer::fbuf_' o='1024' t='ChannelBuffer&lt;float&gt;'/>
