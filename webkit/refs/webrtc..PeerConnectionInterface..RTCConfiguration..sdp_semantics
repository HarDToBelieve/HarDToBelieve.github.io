<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/peer_connection_interface.h' l='617' type='webrtc::SdpSemantics'/>
<offset>1920</offset>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/api/peer_connection_interface.h' l='596'>// Configure the SDP semantics used by this PeerConnection. Note that the
    // WebRTC 1.0 specification requires kUnifiedPlan semantics. The
    // RtpTransceiver API is only available with kUnifiedPlan semantics.
    //
    // kPlanB will cause PeerConnection to create offers and answers with at
    // most one audio and one video m= section with multiple RtpSenders and
    // RtpReceivers specified as multiple a=ssrc lines within the section. This
    // will also cause PeerConnection to ignore all but the first m= section of
    // the same media type.
    //
    // kUnifiedPlan will cause PeerConnection to create offers and answers with
    // multiple m= sections where each m= section maps to one RtpSender and one
    // RtpReceiver (an RtpTransceiver), either both audio or both video. This
    // will also cause PeerConnection to ignore all but the first a=ssrc lines
    // that form a Plan B stream.
    //
    // For users who wish to send multiple audio/video streams and need to stay
    // interoperable with legacy WebRTC implementations or use legacy APIs,
    // specify kPlanB.
    //
    // For all other users, specify kUnifiedPlan.</doc>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/peer_connection.cc' l='390' u='r' c='_ZNK6webrtc23PeerConnectionInterface16RTCConfigurationeqERKS1_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/peer_connection.cc' l='390' u='r' c='_ZNK6webrtc23PeerConnectionInterface16RTCConfigurationeqERKS1_'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/peer_connection.cc' l='441' u='r' c='_ZN6webrtc14PeerConnection6CreateEN3rtc13scoped_refptrINS_17ConnectionContextEEERKNS_30PeerConnectionFactoryInterface7OptionsENSt3__110unique_ptrINS_146006'/>
<use f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/pc/peer_connection.cc' l='2522' u='r' c='_ZN6webrtc14PeerConnection20ReportSdpBundleUsageERKNS_27SessionDescriptionInterfaceE'/>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/peer_connection_interface.h' l='617' type='webrtc::SdpSemantics'/>
<use f='webkit/Source/WebCore/Modules/mediastream/libwebrtc/LibWebRTCMediaEndpoint.cpp' l='92' u='w' c='_ZN7WebCore22LibWebRTCMediaEndpoint16setConfigurationERNS_17LibWebRTCProviderEON6webrtc23PeerConnectionInterface16RTCConfigurationE'/>
<offset>1920</offset>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/api/peer_connection_interface.h' l='596'>// Configure the SDP semantics used by this PeerConnection. Note that the
    // WebRTC 1.0 specification requires kUnifiedPlan semantics. The
    // RtpTransceiver API is only available with kUnifiedPlan semantics.
    //
    // kPlanB will cause PeerConnection to create offers and answers with at
    // most one audio and one video m= section with multiple RtpSenders and
    // RtpReceivers specified as multiple a=ssrc lines within the section. This
    // will also cause PeerConnection to ignore all but the first m= section of
    // the same media type.
    //
    // kUnifiedPlan will cause PeerConnection to create offers and answers with
    // multiple m= sections where each m= section maps to one RtpSender and one
    // RtpReceiver (an RtpTransceiver), either both audio or both video. This
    // will also cause PeerConnection to ignore all but the first a=ssrc lines
    // that form a Plan B stream.
    //
    // For users who wish to send multiple audio/video streams and need to stay
    // interoperable with legacy WebRTC implementations or use legacy APIs,
    // specify kPlanB.
    //
    // For all other users, specify kUnifiedPlan.</doc>
