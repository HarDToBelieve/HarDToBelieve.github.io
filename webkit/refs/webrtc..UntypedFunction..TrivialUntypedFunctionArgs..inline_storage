<dec f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/untyped_function.h' l='111' type='uintptr_t [N]'/>
<doc f='webkit/Source/ThirdParty/libwebrtc/Source/webrtc/rtc_base/untyped_function.h' l='104'>// We use an uintptr_t array here instead of std::aligned_storage, because
    // the former can be efficiently passed in registers when using
    // TrivialUntypedFunctionArgs as a function argument. (We can&apos;t do the same
    // in VoidUnion, because std::aligned_storage but not uintptr_t can be
    // legally reinterpret_casted to arbitrary types.
    // TrivialUntypedFunctionArgs, on the other hand, only needs to handle
    // placement new and memcpy.)</doc>
<dec f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/untyped_function.h' l='111' type='uintptr_t [N]'/>
<doc f='webkit/WebKitBuild/Debug/usr/local/include/webrtc/rtc_base/untyped_function.h' l='104'>// We use an uintptr_t array here instead of std::aligned_storage, because
    // the former can be efficiently passed in registers when using
    // TrivialUntypedFunctionArgs as a function argument. (We can&apos;t do the same
    // in VoidUnion, because std::aligned_storage but not uintptr_t can be
    // legally reinterpret_casted to arbitrary types.
    // TrivialUntypedFunctionArgs, on the other hand, only needs to handle
    // placement new and memcpy.)</doc>
